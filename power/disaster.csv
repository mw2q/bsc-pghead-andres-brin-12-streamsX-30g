Q21,2130594.0,->  Nested Loop Semi Join  (cost=7193.26..9960011.52 rows=1 width=34) (actual time=119.886..127537.006 rows=2130594 loops=1)
Q3,948006.5,->  Sort  (cost=7945836.68..7969536.85 rows=9480065 width=20) (actual time=113988.457..113988.459 rows=10 loops=1)
Q18,900892.1,->  GroupAggregate  (cost=36015892.21..38493345.65 rows=90089216 width=39) (actual time=245074.941..245075.282 rows=100 loops=1)
Q18,128515.2,->  Sort  (cost=36015892.21..36241115.25 rows=90089216 width=39) (actual time=245074.930..245074.968 rows=701 loops=1)
Q21,119471.0,->  Nested Loop Anti Join  (cost=7193.83..9960014.62 rows=1 width=26) (actual time=120.903..136237.219 rows=119471 loops=1)
Q10,82046.0,->  Sort  (cost=6873572.42..6877674.72 rows=1640920 width=175) (actual time=101617.416..101617.420 rows=20 loops=1)
Q9,77706.5,->  Sort  (cost=3356339.70..3356340.02 rows=126 width=46) (actual time=486158.580..492366.621 rows=9791025 loops=1)
Q9,77706.5,->  Nested Loop  (cost=200322.26..3356331.38 rows=126 width=24) (actual time=2016.028..398063.851 rows=9791025 loops=1)
Q9,77706.5,->  Nested Loop  (cost=200321.69..3356253.94 rows=126 width=24) (actual time=2015.967..207768.715 rows=9791025 loops=1)
Q9,77706.5,->  Nested Loop  (cost=200321.27..3356196.90 rows=126 width=28) (actual time=2015.951..168837.332 rows=9791025 loops=1)
Q9,77706.5,->  Hash Join  (cost=200323.82..3356335.31 rows=126 width=46) (actual time=2016.084..410109.110 rows=9791025 loops=1)
Q18,71956.3,->  Hash Join  (cost=6258500.44..8075068.76 rows=22522347 width=39) (actual time=139390.754..157568.977 rows=313 loops=1)
Q18,71956.3,->  Hash Join  (cost=6051414.44..7473841.69 rows=22522347 width=20) (actual time=136067.101..154244.530 rows=313 loops=1)
Q18,71956.3,->  Hash  (cost=8075068.76..8075068.76 rows=22522347 width=39) (actual time=157573.876..157573.876 rows=313 loops=1)
Q18,41117.8,->  Hash Join  (cost=8532554.10..21649544.63 rows=90089216 width=39) (actual time=158593.957..245071.331 rows=2191 loops=1)
Q2,14131.0,->  Merge Join  (cost=1432056.81..3133955.92 rows=1 width=190) (actual time=21073.494..28190.086 rows=14131 loops=1)
Q18,13564.7,->  Hash  (cost=5998342.32..5998342.32 rows=4245770 width=4) (actual time=135882.695..135882.695 rows=313 loops=1)
Q18,13564.7,->  HashAggregate  (cost=5902812.49..5955884.62 rows=4245770 width=8) (actual time=118817.333..135881.587 rows=313 loops=1)
Q21,12037.0,->  HashAggregate  (cost=9960014.62..9960014.63 rows=1 width=26) (actual time=136498.123..136501.399 rows=12037 loops=1)
Q15,11237.0,->  Subquery Scan on revenue0  (cost=5889652.31..5889905.15 rows=11237 width=12) (actual time=153228.997..153283.751 rows=1 loops=1)
Q15,11237.0,->  Sort  (cost=5890661.17..5890689.26 rows=11237 width=12) (actual time=153283.783..153283.784 rows=1 loops=1)
Q15,11237.0,Merge Join  (cost=11729915.35..11745178.84 rows=11237 width=79) (actual time=153309.140..153309.142 rows=1 loops=1)
Q15,11237.0,->  HashAggregate  (cost=5889652.31..5889792.78 rows=11237 width=12) (actual time=153228.995..153283.747 rows=1 loops=1)
Q7,766.7,Sort  (cost=6523925.51..6523933.18 rows=3067 width=64) (actual time=112890.301..112890.301 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6523701.88..6523747.89 rows=3067 width=64) (actual time=112890.233..112890.241 rows=4 loops=1)
Q8,366.5,Sort  (cost=5596402.15..5596403.98 rows=733 width=38) (actual time=46594.239..46594.240 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5596354.44..5596367.26 rows=733 width=38) (actual time=46594.196..46594.197 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=9960014.64..9960014.65 rows=1 width=26) (actual time=136504.131..136504.137 rows=100 loops=1)
Q21,100.0,Limit  (cost=9960014.64..9960014.65 rows=1 width=26) (actual time=136504.132..136504.149 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3133955.93..3133955.93 rows=1 width=190) (actual time=28203.576..28203.585 rows=100 loops=1)
Q2,100.0,Limit  (cost=3133955.93..3133955.93 rows=1 width=190) (actual time=28203.578..28203.600 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2210709)
Q11,35.6,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=20845.689..20850.086 rows=26959 loops=1)
Q11,35.6,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=20485.226..20830.087 rows=26959 loops=1)
Q3,27.8,->  HashAggregate  (cost=7646175.24..7740975.89 rows=9480065 width=20) (actual time=113791.828..113925.292 rows=340338 loops=1)
Q15,26.6,->  HashAggregate  (cost=5839000.91..5839113.28 rows=11237 width=12) (actual time=75249.052..75358.790 rows=300000 loops=1)
Q14,14.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..22827.96 rows=2240396 width=0) (actual time=374.780..374.780 rows=32002560 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.74 rows=14 width=4) (actual time=0.015..0.015 rows=1 loops=1724181)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2130594)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.56 rows=42 width=16) (actual time=0.014..0.015 rows=4 loops=1368846)
Q3,10.5,->  Hash Join  (cost=2286919.37..7503974.26 rows=9480065 width=20) (actual time=26884.170..112941.716 rows=899897 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7176.06 rows=954140 width=0) (actual time=99.310..99.310 rows=9728000 loops=1)
Q4,9.8,->  Nested Loop Semi Join  (cost=17579.32..2720740.89 rows=160657 width=16) (actual time=85.521..53939.004 rows=1580637 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.116 rows=8 loops=1304380)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.177..11.177 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.285..11.285 rows=1058560 loops=5)
Q15,5.6,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.025..19.995 rows=52913 loops=1)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.652..0.652 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.662..0.662 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.663..0.663 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.669..0.669 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.654..0.654 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.040..2.821 rows=155 loops=1)
Q5,5.0,Sort  (cost=7000824.31..7000824.37 rows=25 width=34) (actual time=53961.774..53961.774 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7000823.48..7000823.73 rows=25 width=34) (actual time=53961.709..53961.711 rows=5 loops=1)
Q4,5.0,Sort  (cost=2721544.20..2721544.20 rows=1 width=16) (actual time=55018.843..55018.843 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2721544.18..2721544.19 rows=1 width=16) (actual time=55018.798..55018.799 rows=5 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..16778.85 rows=1667085 width=0) (actual time=84.618..84.618 rows=7607040 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17152.64 rows=1704464 width=0) (actual time=84.850..84.850 rows=7607040 loops=1)
Q13,4.3,Sort  (cost=2641615.73..2641616.23 rows=200 width=8) (actual time=100122.786..100122.790 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2641606.09..2641608.09 rows=200 width=8) (actual time=100122.696..100122.706 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.95..366551.15 rows=60160 width=4) (actual time=4.007..707.370 rows=16017 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.046 rows=3 loops=5971)
Q15,3.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..856829.78 rows=114187437 width=0) (actual time=376.667..376.667 rows=32002560 loops=1)
Q15,3.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..856829.78 rows=114187437 width=0) (actual time=375.922..375.922 rows=32002560 loops=1)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..184190.13 rows=24544284 width=0) (actual time=84.429..84.429 rows=7607040 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..721218.34 rows=96105912 width=0) (actual time=377.150..377.150 rows=32002560 loops=1)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..166260.67 rows=22153689 width=0) (actual time=84.345..84.345 rows=7607040 loops=1)
Q22,2.3,Sort  (cost=2439932.49..2439932.49 rows=3 width=20) (actual time=35656.691..35656.692 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2281208.40..2281208.44 rows=3 width=20) (actual time=35656.605..35656.605 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.043..0.059 rows=2 loops=19268)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=12.839..12.839 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1223122.77..1227547.41 rows=1769855 width=40) (actual time=28865.504..29302.148 rows=3558754 loops=1)
Q16,2.0,->  Hash Join  (cost=163888.19..1039454.30 rows=1769855 width=40) (actual time=4392.738..18845.497 rows=3558754 loops=1)
Q12,2.0,Sort  (cost=9412557.26..9412557.27 rows=1 width=27) (actual time=94494.871..94494.872 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9412557.24..9412557.25 rows=1 width=27) (actual time=94494.830..94494.830 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=823645.46..6514109.62 rows=1640920 width=12) (actual time=18485.259..85476.682 rows=3332923 loops=1)
Q10,2.0,->  Hash Join  (cost=1030733.02..6772475.93 rows=1640920 width=175) (actual time=23294.011..94365.063 rows=3332923 loops=1)
Q10,2.0,->  Hash Join  (cost=1030731.46..6749911.72 rows=1640920 width=153) (actual time=23293.978..93148.375 rows=3332923 loops=1)
Q21,1.9,->  Hash Join  (cost=7192.13..5708805.37 rows=2402379 width=34) (actual time=119.745..81389.237 rows=4572314 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=2.940..9458.299 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5452366.41 rows=60059478 width=8) (actual time=0.005..62694.096 rows=113911711 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7285705.06 rows=1169831 width=38) (actual time=119.874..112060.051 rows=2210709 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..547930.71 rows=54750671 width=0) (actual time=377.709..377.709 rows=32002560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.031..0.055 rows=4 loops=19268)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.029..0.046 rows=4 loops=19268)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.023..0.025 rows=4 loops=19268)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.54 rows=2 width=8) (actual time=0.435..0.505 rows=3 loops=64769)
Q1,1.5,Sort  (cost=12601135.72..12601135.73 rows=6 width=20) (actual time=285423.071..285423.072 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12601135.53..12601135.64 rows=6 width=20) (actual time=285423.010..285423.012 rows=4 loops=1)
Q20,1.4,->  Nested Loop  (cost=2028.00..48961128.10 rows=122011 width=4) (actual time=39.264..34472.977 rows=176603 loops=1)
Q20,1.4,->  Hash  (cost=48961128.10..48961128.10 rows=122011 width=4) (actual time=34604.779..34604.779 rows=176603 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=13.134..13.134 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6813498.93..6829908.13 rows=1640920 width=175) (actual time=100334.238..101200.104 rows=1121860 loops=1)
Q9,1.3,GroupAggregate  (cost=3356339.70..3356344.11 rows=126 width=46) (actual time=486199.406..499114.416 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8618.97 rows=419995 width=0) (actual time=3145.966..3145.966 rows=573046 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8723.97..125584.84 rows=419995 width=24) (actual time=3173.395..3510.225 rows=573046 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..275742.90 rows=27531890 width=0) (actual time=375.167..375.167 rows=32002560 loops=1)
Q20,1.1,Sort  (cost=48970135.02..48970147.22 rows=4880 width=51) (actual time=34728.745..34729.044 rows=5404 loops=1)
Q20,1.1,->  Hash Semi Join  (cost=48962758.24..48969836.06 rows=4880 width=51) (actual time=34606.002..34722.641 rows=5404 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2012.55 rows=53999 width=0) (actual time=26.413..26.413 rows=64769 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.006..7108.769 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=300296 width=4) (actual time=0.027..1915.213 rows=326095 loops=1)
Q9,1.0,->  Hash Join  (cost=200320.70..1055200.11 rows=1201179 width=16) (actual time=2015.734..14280.800 rows=1304380 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=300296 width=4) (actual time=2013.684..2013.684 rows=326095 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.266..5249.886 rows=899828 loops=1)
Q8,1.0,->  Nested Loop  (cost=1272.84..5444243.99 rows=376363 width=20) (actual time=21.395..39868.528 rows=370490 loops=1)
Q8,1.0,->  Nested Loop  (cost=1272.27..4677993.67 rows=1236625 width=16) (actual time=21.313..17986.842 rows=1216651 loops=1)
Q8,1.0,->  Nested Loop  (cost=114227.89..5593436.04 rows=75273 width=16) (actual time=5588.668..46345.447 rows=74139 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.20 rows=32 width=20) (actual time=0.029..0.415 rows=30 loops=40476)
Q8,1.0,->  Hash Join  (cost=114229.45..5594848.98 rows=75273 width=38) (actual time=5588.721..46465.721 rows=74139 loops=1)
Q8,1.0,->  Hash Join  (cost=114227.47..5559362.71 rows=75273 width=16) (actual time=5588.597..45774.229 rows=74139 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=5562.068..5562.068 rows=899828 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1261.41 rows=41180 width=0) (actual time=13.700..13.700 rows=40476 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1271.70..85788.28 rows=41180 width=4) (actual time=21.260..745.504 rows=40476 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.245..1022.511 rows=179966 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1211051.94 rows=45044694 width=8) (actual time=0.011..9690.540 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=572823.77..4843335.40 rows=4380054 width=42) (actual time=539.561..85242.738 rows=4409089 loops=1)
Q7,1.0,->  Hash Join  (cost=2209686.18..6520967.68 rows=182280 width=64) (actual time=25262.571..112620.716 rows=176928 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1591817.70 rows=3603576 width=30) (actual time=1803.717..23438.018 rows=3618541 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.048..1678.754 rows=360469 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.036..151.423 rows=24171 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=1801.735..1801.735 rows=360469 loops=1)
Q7,1.0,->  Hash  (cost=1591817.70..1591817.70 rows=3603576 width=30) (actual time=24710.521..24710.521 rows=3618541 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=159.198..159.198 rows=24171 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=561618.37..4583014.44 rows=54750671 width=20) (actual time=380.210..73236.469 rows=54745807 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=276029.81..4095633.34 rows=1147653 width=8) (actual time=377.669..106134.669 rows=1142801 loops=1)
Q5,1.0,->  Nested Loop  (cost=298876.92..6941098.62 rows=5504312 width=46) (actual time=6770.913..51290.986 rows=5473227 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.508..6269.718 rows=899828 loops=1)
Q5,1.0,->  Hash Join  (cost=312915.92..6998621.72 rows=220176 width=34) (actual time=6977.096..53694.227 rows=219343 loops=1)
Q5,1.0,->  Hash Join  (cost=298876.35..1467207.93 rows=1376081 width=38) (actual time=6770.891..28274.895 rows=1368846 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6679.802..6679.802 rows=899828 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=185910.23..1314679.49 rows=6880403 width=8) (actual time=84.962..16881.302 rows=6835620 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.359..1222.326 rows=179966 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17578.75..803750.71 rows=1704464 width=20) (actual time=85.475..25714.935 rows=1724181 loops=1)
Q3,1.0,->  Hash Join  (cost=321098.04..1486133.40 rows=4443292 width=12) (actual time=1287.207..25012.007 rows=4426996 loops=1)
Q3,1.0,->  Hash  (cost=1486133.40..1486133.40 rows=4443292 width=12) (actual time=26480.279..26480.279 rows=4426996 loops=1)
Q3,1.0,->  Hash  (cost=138017.07..138017.07 rows=902550 width=4) (actual time=1198.877..1198.877 rows=898061 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20673.56 rows=902550 width=0) (actual time=196.735..196.735 rows=898061 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171799.09..1209325.21 rows=22153689 width=16) (actual time=84.863..15658.169 rows=22147562 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=745244.82..5146704.72 rows=96105912 width=12) (actual time=379.656..69851.467 rows=96087000 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20899.19..138017.07 rows=902550 width=4) (actual time=224.361..974.142 rows=898061 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1211051.94 rows=45044694 width=4) (actual time=0.044..11558.235 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1211051.94..1211051.94 rows=45044694 width=4) (actual time=23154.834..23154.834 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1958790.58..2279865.67 rows=179030 width=20) (actual time=26505.206..35592.154 rows=190852 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19650.85 rows=1146109 width=0) (actual time=214.169..214.169 rows=1145529 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19937.37..155858.73 rows=1146109 width=4) (actual time=240.066..2762.497 rows=1145529 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.689..116.252 rows=12038 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=119.651..119.651 rows=12038 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.675..114.230 rows=12038 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=21072.909..22690.393 rows=4800264 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.004..5625.562 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.778..500.795 rows=60005 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24411 width=30) (actual time=0.143..3513.116 rows=23992 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=536.793..13533.118 rows=4800400 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=536.521..536.521 rows=60005 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.682..97.432 rows=12001 loops=5)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.696..110.891 rows=12202 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.679..108.512 rows=12202 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2027.56..99529.32 rows=60059 width=4) (actual time=38.576..1663.843 rows=64769 loops=1)
Q19,1.0,->  Nested Loop  (cost=38374.05..1885078.57 rows=3411 width=8) (actual time=95.802..8082.969 rows=3420 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.731..12.731 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.87 rows=24066 width=0) (actual time=9.933..9.933 rows=23861 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.31 rows=24006 width=0) (actual time=10.109..10.109 rows=23948 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..831.87 rows=23763 width=0) (actual time=9.713..9.713 rows=24240 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38373.48..79408.17 rows=14248 width=30) (actual time=93.753..828.048 rows=14378 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1211051.94 rows=45044694 width=16) (actual time=0.005..9115.712 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5001920.33 rows=180178433 width=8) (actual time=0.006..30662.976 rows=180178587 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5001920.33 rows=180178433 width=8) (actual time=0.007..45571.568 rows=180178587 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.040 rows=30 loops=5971)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.040 rows=30 loops=5971)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.66 rows=6010 width=0) (actual time=2.510..2.510 rows=5971 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.16..19898.62 rows=6010 width=4) (actual time=3.581..143.133 rows=5971 loops=1)
Q16,1.0,Sort  (cost=1247562.79..1247631.93 rows=27655 width=40) (actual time=31131.753..31133.600 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152817.79..152817.79 rows=884931 width=40) (actual time=4386.369..4386.369 rows=890137 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1223122.77..1245522.51 rows=27655 width=40) (actual time=28865.614..31075.972 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7397.29..152817.79 rows=884931 width=40) (actual time=99.452..4004.174 rows=890137 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=858518.16..5771465.71 rows=6753520 width=12) (actual time=378.459..66535.742 rows=6744421 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=858518.16..5771465.71 rows=6753520 width=12) (actual time=379.180..69317.010 rows=6744421 loops=1)
Q14,1.0,->  Hash Join  (cost=279955.06..3411251.52 rows=2240396 width=29) (actual time=4968.305..119903.825 rows=2319822 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=23388.06..3109876.60 rows=2240396 width=12) (actual time=377.325..112180.326 rows=2319822 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1323663.68 rows=44371396 width=8) (actual time=0.023..22736.013 rows=44559697 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2307249.10 rows=44371396 width=8) (actual time=3427.832..61463.569 rows=46059774 loops=1)
Q12,1.0,->  Sort  (cost=7340661.79..7342852.91 rows=876447 width=15) (actual time=72318.104..72509.727 rows=936681 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7254150.74 rows=876447 width=15) (actual time=0.046..71718.427 rows=936681 loops=1)
Q12,1.0,->  Merge Join  (cost=7340662.38..9397219.42 rows=876447 width=27) (actual time=72318.143..93595.072 rows=936681 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1930814.97 rows=45044694 width=20) (actual time=0.008..16048.337 rows=45044978 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.022..5668.829 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.023..5657.623 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.721..71.344 rows=12090 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.710..128.734 rows=12090 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=74.319..9634.409 rows=967200 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=132.764..9711.450 rows=967200 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=74.163..74.163 rows=12090 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=132.656..132.656 rows=12090 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.693..69.470 rows=12090 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.693..126.042 rows=12090 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5452366.41 rows=178719228 width=20) (actual time=0.026..59299.844 rows=178769931 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5452366.41 rows=44337709 width=12) (actual time=0.011..54002.935 rows=44463031 loops=1)
Q10,1.0,->  Hash  (cost=802806.90..802806.90 rows=1667085 width=8) (actual time=18473.663..18473.663 rows=1665410 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17195.62..802806.90 rows=1667085 width=8) (actual time=85.152..17654.780 rows=1665410 loops=1)
