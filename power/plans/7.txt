BEGIN;
BEGIN
EXPLAIN
select
	supp_nation,
	cust_nation,
	l_year,
	sum(volume) as revenue
from
	(
		select
			n1.n_name as supp_nation,
			n2.n_name as cust_nation,
			extract(year from l_shipdate) as l_year,
			l_extendedprice * (1 - l_discount) as volume
		from
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2
		where
			s_suppkey = l_suppkey
			and o_orderkey = l_orderkey
			and c_custkey = o_custkey
			and s_nationkey = n1.n_nationkey
			and c_nationkey = n2.n_nationkey
			and (
				(n1.n_name = 'FRANCE' and n2.n_name = 'IRAN')
				or (n1.n_name = 'IRAN' and n2.n_name = 'FRANCE')
			)
			and l_shipdate between date '1995-01-01' and date '1996-12-31'
	) as shipping
group by
	supp_nation,
	cust_nation,
	l_year
order by
	supp_nation,
	cust_nation,
	l_year;
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=6517600.16..6517607.83 rows=3067 width=64)
   Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  HashAggregate  (cost=6517376.54..6517422.54 rows=3067 width=64)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Hash Join  (cost=2207667.91..6514645.07 rows=182098 width=64)
               Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
               Join Filter: (((n1.n_name = 'FRANCE'::bpchar) AND (n2.n_name = 'IRAN'::bpchar)) OR ((n1.n_name = 'IRAN'::bpchar) AND (n2.n_name = 'FRANCE'::bpchar)))
               ->  Hash Join  (cost=572263.48..4838511.44 rows=4375681 width=42)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     ->  Bitmap Heap Scan on lineitem  (cost=561058.08..4578439.20 rows=54696008 width=20)
                           Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..547384.08 rows=54696008 width=0)
                                 Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                     ->  Hash  (cost=10905.40..10905.40 rows=24000 width=30)
                           ->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..9539.00 rows=300000 width=8)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                             Filter: ((n_name = 'FRANCE'::bpchar) OR (n_name = 'IRAN'::bpchar))
               ->  Hash  (cost=1590404.68..1590404.68 rows=3599980 width=30)
                     ->  Hash Join  (cost=175812.40..1590404.68 rows=3599980 width=30)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..1209843.44 rows=44999744 width=8)
                           ->  Hash  (cost=171312.40..171312.40 rows=360000 width=30)
                                 ->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30)
                                       Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                       ->  Seq Scan on customer  (cost=0.00..150836.00 rows=4500000 width=8)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                             ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                   Filter: ((n_name = 'IRAN'::bpchar) OR (n_name = 'FRANCE'::bpchar))
 Planning time: 4.199 ms
(32 rows)

COMMIT;
COMMIT
