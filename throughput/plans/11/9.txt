BEGIN;
BEGIN
EXPLAIN
select
	nation,
	o_year,
	sum(amount) as sum_profit
from
	(
		select
			n_name as nation,
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
		from
			part,
			supplier,
			lineitem,
			partsupp,
			orders,
			nation
		where
			s_suppkey = l_suppkey
			and ps_suppkey = l_suppkey
			and ps_partkey = l_partkey
			and p_partkey = l_partkey
			and o_orderkey = l_orderkey
			and s_nationkey = n_nationkey
			and p_name like '%brown%'
	) as profit
group by
	nation,
	o_year
order by
	nation,
	o_year desc;
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=3958736.04..3958741.60 rows=159 width=46)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Sort  (cost=3958736.04..3958736.44 rows=159 width=46)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Hash Join  (cost=201299.78..3958730.23 rows=159 width=46)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=201298.22..3958725.68 rows=159 width=24)
                     ->  Nested Loop  (cost=201297.65..3958627.96 rows=159 width=24)
                           ->  Nested Loop  (cost=201297.23..3958555.98 rows=159 width=28)
                                 ->  Hash Join  (cost=201296.66..1059299.15 rows=1513486 width=16)
                                       Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12)
                                       ->  Hash  (cost=196567.00..196567.00 rows=378373 width=4)
                                             ->  Seq Scan on part  (cost=0.00..196567.00 rows=378373 width=4)
                                                   Filter: ((p_name)::text ~~ '%brown%'::text)
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24)
                                       Index Cond: (l_partkey = partsupp.ps_partkey)
                                       Filter: (partsupp.ps_suppkey = l_suppkey)
                           ->  Index Scan using pk_supplier on supplier  (cost=0.42..0.44 rows=1 width=8)
                                 Index Cond: (s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using pk_orders on orders  (cost=0.56..0.60 rows=1 width=8)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
 Planning time: 32.627 ms
(25 rows)

COMMIT;
COMMIT
