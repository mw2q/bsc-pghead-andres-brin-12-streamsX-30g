Q21,2136607.0,->  Nested Loop Semi Join  (cost=7193.26..10121482.24 rows=1 width=34) (actual time=115.554..126059.536 rows=2136607 loops=1)
Q3,953726.2,->  Sort  (cost=8053483.94..8077327.09 rows=9537262 width=20) (actual time=109901.189..109901.192 rows=10 loops=1)
Q18,906291.3,->  GroupAggregate  (cost=36233264.85..38725566.14 rows=90629138 width=39) (actual time=265103.637..265104.050 rows=100 loops=1)
Q18,129285.5,->  Sort  (cost=36233264.85..36459837.69 rows=90629138 width=39) (actual time=265103.625..265103.731 rows=701 loops=1)
Q21,119978.0,->  Nested Loop Anti Join  (cost=7193.83..10121485.38 rows=1 width=26) (actual time=115.690..135122.949 rows=119978 loops=1)
Q9,91396.7,->  Sort  (cost=2990479.97..2990480.24 rows=107 width=46) (actual time=510678.761..516027.177 rows=9779451 loops=1)
Q9,91396.7,->  Nested Loop  (cost=199721.67..2990472.80 rows=107 width=24) (actual time=3028.436..423636.213 rows=9779451 loops=1)
Q9,91396.7,->  Nested Loop  (cost=199721.10..2990407.03 rows=107 width=24) (actual time=3028.397..220847.285 rows=9779451 loops=1)
Q9,91396.7,->  Nested Loop  (cost=199720.68..2990358.59 rows=107 width=28) (actual time=3028.380..179004.360 rows=9779451 loops=1)
Q9,91396.7,->  Hash Join  (cost=199723.23..2990476.36 rows=107 width=46) (actual time=3028.490..435953.842 rows=9779451 loops=1)
Q10,85636.7,->  Sort  (cost=6960903.72..6965185.56 rows=1712734 width=175) (actual time=101318.931..101318.934 rows=20 loops=1)
Q18,81501.1,->  Hash Join  (cost=6293877.09..8121076.92 rows=22657314 width=39) (actual time=156230.440..174743.857 rows=278 loops=1)
Q18,81501.1,->  Hash Join  (cost=6086791.09..7517487.93 rows=22657314 width=20) (actual time=152605.369..171117.990 rows=278 loops=1)
Q18,81501.1,->  Hash  (cost=8121076.92..8121076.92 rows=22657314 width=39) (actual time=174745.167..174745.167 rows=278 loops=1)
Q18,46572.0,->  Hash Join  (cost=8581304.35..21776907.61 rows=90629138 width=39) (actual time=175401.078..265100.260 rows=1946 loops=1)
Q18,15272.5,->  Hash  (cost=6033718.97..6033718.97 rows=4245770 width=4) (actual time=152502.929..152502.929 rows=278 loops=1)
Q18,15272.5,->  HashAggregate  (cost=5938189.14..5991261.27 rows=4245770 width=8) (actual time=130656.396..152502.322 rows=278 loops=1)
Q2,14413.0,->  Merge Join  (cost=1432056.81..3106235.46 rows=1 width=190) (actual time=24413.624..31483.976 rows=14413 loops=1)
Q21,12108.0,->  HashAggregate  (cost=10121485.38..10121485.39 rows=1 width=26) (actual time=135317.338..135321.482 rows=12108 loops=1)
Q15,11282.0,->  Subquery Scan on revenue3  (cost=4192850.91..4193104.75 rows=11282 width=12) (actual time=144226.074..144244.483 rows=1 loops=1)
Q15,11282.0,->  Sort  (cost=4193864.13..4193892.33 rows=11282 width=12) (actual time=144244.502..144244.502 rows=1 loops=1)
Q15,11282.0,Merge Join  (cost=8335508.13..8350772.29 rows=11282 width=79) (actual time=144319.456..144319.459 rows=1 loops=1)
Q15,11282.0,->  HashAggregate  (cost=4192850.91..4192991.93 rows=11282 width=12) (actual time=144226.072..144244.479 rows=1 loops=1)
Q7,766.7,Sort  (cost=6536587.27..6536594.94 rows=3067 width=64) (actual time=120853.138..120853.138 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6536363.65..6536409.65 rows=3067 width=64) (actual time=120853.073..120853.081 rows=4 loops=1)
Q8,366.5,Sort  (cost=5541595.77..5541597.61 rows=733 width=38) (actual time=55779.064..55779.064 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5541548.06..5541560.89 rows=733 width=38) (actual time=55779.023..55779.023 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=135324.366..135324.373 rows=100 loops=1)
Q21,100.0,Limit  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=135324.367..135324.384 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3106235.47..3106235.48 rows=1 width=190) (actual time=31498.631..31498.643 rows=100 loops=1)
Q2,100.0,Limit  (cost=3106235.47..3106235.48 rows=1 width=190) (actual time=31498.632..31498.657 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2217069)
Q11,35.4,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21193.019..21196.299 rows=27068 loops=1)
Q11,35.4,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=20878.314..21176.855 rows=27068 loops=1)
Q3,28.0,->  HashAggregate  (cost=7752014.51..7847387.13 rows=9537262 width=20) (actual time=109658.782..109837.324 rows=340317 loops=1)
Q15,26.5,->  HashAggregate  (cost=4141389.72..4141502.54 rows=11282 width=12) (actual time=69784.962..69893.647 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.68 rows=14 width=4) (actual time=0.014..0.014 rows=1 loops=1722150)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2136607)
Q14,14.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23338.96 rows=2291496 width=0) (actual time=389.036..389.036 rows=32257280 loops=1)
Q3,10.6,->  Hash Join  (cost=2311974.34..7608955.58 rows=9537262 width=20) (actual time=28777.896..108776.438 rows=899175 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.57 rows=42 width=16) (actual time=0.014..0.016 rows=4 loops=1368391)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7211.16 rows=958820 width=0) (actual time=100.206..100.206 rows=9728000 loops=1)
Q4,9.7,->  Nested Loop Semi Join  (cost=17826.86..2740829.99 rows=162771 width=16) (actual time=85.115..43449.795 rows=1578941 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.021..0.122 rows=8 loops=1302600)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.237..11.237 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.238..11.238 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.652..0.652 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.664..0.664 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.663..0.663 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.677..0.677 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.666..0.666 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.037..1.389 rows=155 loops=1)
Q5,5.0,Sort  (cost=6842011.96..6842012.02 rows=25 width=34) (actual time=55251.563..55251.563 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6842011.13..6842011.38 rows=25 width=34) (actual time=55251.512..55251.513 rows=5 loops=1)
Q4,5.0,Sort  (cost=2741643.87..2741643.87 rows=1 width=16) (actual time=44457.911..44457.911 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2741643.85..2741643.86 rows=1 width=16) (actual time=44457.867..44457.870 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17394.14 rows=1728614 width=0) (actual time=84.579..84.579 rows=7614720 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17508.23 rows=1740023 width=0) (actual time=85.275..85.275 rows=7697920 loops=1)
Q13,4.3,Sort  (cost=2672500.80..2672501.30 rows=200 width=8) (actual time=90108.972..90108.974 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2672491.16..2672493.16 rows=200 width=8) (actual time=90108.909..90108.915 rows=46 loops=1)
Q17,3.6,->  Nested Loop  (cost=220.42..369259.56 rows=60731 width=4) (actual time=4.210..705.295 rows=16460 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.050 rows=3 loops=6112)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..736578.48 rows=98153931 width=0) (actual time=385.602..385.602 rows=32386560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..166436.37 rows=22177115 width=0) (actual time=85.239..85.239 rows=7697920 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..132719.31 rows=17681508 width=0) (actual time=84.809..84.809 rows=7614720 loops=1)
Q22,2.3,Sort  (cost=2457304.61..2457304.62 rows=3 width=20) (actual time=33524.893..33524.894 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2298396.21..2298396.26 rows=3 width=20) (actual time=33524.842..33524.844 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.043..0.061 rows=2 loops=19655)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=13.014..13.014 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1224405.01..1228851.83 rows=1778727 width=40) (actual time=29561.147..30046.557 rows=3558848 loops=1)
Q16,2.0,->  Hash Join  (cost=164096.85..1039751.68 rows=1778727 width=40) (actual time=3817.873..18073.485 rows=3558848 loops=1)
Q12,2.0,Sort  (cost=9530869.78..9530869.78 rows=1 width=27) (actual time=96471.647..96471.647 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9530869.76..9530869.77 rows=1 width=27) (actual time=96471.612..96471.613 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=835514.86..6594772.30 rows=1712734 width=12) (actual time=20254.526..85741.543 rows=3444974 loops=1)
Q10,2.0,->  Hash Join  (cost=1042602.43..6855382.80 rows=1712734 width=175) (actual time=25060.704..93976.627 rows=3444974 loops=1)
Q10,2.0,->  Hash Join  (cost=1042600.86..6831831.14 rows=1712734 width=153) (actual time=25060.669..92729.592 rows=3444974 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.497..9153.724 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5517781.81 rows=60780048 width=8) (actual time=0.016..57012.656 rows=113799809 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7373266.02 rows=1183866 width=38) (actual time=115.472..111266.054 rows=2217069 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5777211.14 rows=2431202 width=34) (actual time=115.415..82713.247 rows=4594294 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..549024.99 rows=54860099 width=0) (actual time=379.872..379.872 rows=32066560 loops=1)
Q9,1.6,GroupAggregate  (cost=2990479.97..2990483.72 rows=107 width=46) (actual time=510715.923..522254.519 rows=175 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.031..0.056 rows=4 loops=19655)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.029..0.047 rows=4 loops=19655)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.022..0.024 rows=4 loops=19655)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.450..0.520 rows=3 loops=64895)
Q15,1.5,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.040..55.796 rows=195918 loops=1)
Q1,1.5,Sort  (cost=12588602.45..12588602.47 rows=6 width=20) (actual time=273968.515..273968.515 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12588602.27..12588602.38 rows=6 width=20) (actual time=273968.456..273968.457 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.919..12.919 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6898201.15..6915328.49 rows=1712734 width=175) (actual time=100198.625..100896.959 rows=1149698 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8659.49 rows=421645 width=0) (actual time=2372.577..2372.577 rows=572738 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8764.90..125669.08 rows=421645 width=24) (actual time=2410.264..2916.795 rows=572738 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.51..53833209.94 rows=134213 width=4) (actual time=44.009..34692.476 rows=176894 loops=1)
Q20,1.3,->  Hash  (cost=53833209.94..53833209.94 rows=134213 width=4) (actual time=34805.130..34805.130 rows=176894 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..196567.00 rows=252249 width=4) (actual time=0.011..2896.158 rows=325650 loops=1)
Q9,1.2,->  Hash Join  (cost=199720.11..1052677.66 rows=1008992 width=16) (actual time=3028.237..16372.791 rows=1302600 loops=1)
Q9,1.2,->  Hash  (cost=196567.00..196567.00 rows=252249 width=4) (actual time=3026.860..3026.860 rows=325650 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..273746.58 rows=27332258 width=0) (actual time=383.912..383.912 rows=32066560 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..277792.48 rows=36982464 width=0) (actual time=387.316..387.316 rows=32386560 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..277792.48 rows=36982464 width=0) (actual time=384.209..384.209 rows=32386560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.019..7454.254 rows=24000000 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.351..6485.477 rows=899828 loops=1)
Q8,1.0,->  Nested Loop  (cost=1257.12..5389894.31 rows=371976 width=20) (actual time=21.901..47721.325 rows=365917 loops=1)
Q8,1.0,->  Nested Loop  (cost=1256.55..4632575.96 rows=1222210 width=16) (actual time=21.749..20071.555 rows=1202646 loops=1)
Q8,1.0,->  Nested Loop  (cost=114212.17..5538663.70 rows=74395 width=16) (actual time=6791.130..55506.622 rows=73544 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.41 rows=32 width=20) (actual time=0.031..0.477 rows=30 loops=40088)
Q8,1.0,->  Hash Join  (cost=114213.73..5540060.16 rows=74395 width=38) (actual time=6791.172..55642.425 rows=73544 loops=1)
Q8,1.0,->  Hash Join  (cost=114211.75..5504987.80 rows=74395 width=16) (actual time=6791.114..54792.649 rows=73544 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6765.602..6765.602 rows=899828 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1245.81 rows=40700 width=0) (actual time=13.914..13.914 rows=40088 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1255.98..85208.97 rows=40700 width=4) (actual time=21.697..459.888 rows=40088 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.303..1266.671 rows=179966 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1213470.52 rows=45134652 width=8) (actual time=0.039..9495.076 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=573945.42..4852992.35 rows=4388808 width=42) (actual time=559.016..90433.357 rows=4397606 loops=1)
Q7,1.0,->  Hash Join  (cost=2213725.65..6533623.97 rows=182645 width=64) (actual time=28092.259..120557.718 rows=176429 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1594645.58 rows=3610772 width=30) (actual time=2584.982..26047.299 rows=3618574 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.062..2442.727 rows=360197 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.039..167.813 rows=24084 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2582.462..2582.462 rows=360197 loops=1)
Q7,1.0,->  Hash  (cost=1594645.58..1594645.58 rows=3610772 width=30) (actual time=27513.505..27513.505 rows=3618574 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=176.459..176.459 rows=24084 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=562740.02..4592173.50 rows=54860099 width=20) (actual time=382.377..74685.397 rows=54745870 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=274031.41..4095539.22 rows=1139331 width=8) (actual time=386.463..71267.427 rows=1145600 loops=1)
Q5,1.0,->  Nested Loop  (cost=247400.51..6782434.38 rows=5486468 width=46) (actual time=7285.349..52529.460 rows=5473329 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.674..6829.004 rows=899362 loops=1)
Q5,1.0,->  Hash Join  (cost=261439.51..6839816.51 rows=219462 width=34) (actual time=7497.621..54981.737 rows=219320 loops=1)
Q5,1.0,->  Hash Join  (cost=247399.94..1313420.57 rows=1371618 width=38) (actual time=7285.302..28730.676 rows=1368391 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=7195.299..7195.299 rows=899362 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=134433.83..1161020.45 rows=6858088 width=8) (actual time=85.346..17789.905 rows=6852875 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.310..1333.082 rows=179872 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17826.29..805119.50 rows=1728614 width=20) (actual time=85.094..17595.436 rows=1722150 loops=1)
Q3,1.0,->  Hash Join  (cost=321099.30..1495491.29 rows=4429287 width=12) (actual time=2064.471..26519.975 rows=4376722 loops=1)
Q3,1.0,->  Hash  (cost=1495491.29..1495491.29 rows=4429287 width=12) (actual time=28350.306..28350.306 rows=4376722 loops=1)
Q3,1.0,->  Hash  (cost=137884.22..137884.22 rows=898755 width=4) (actual time=1973.796..1973.796 rows=899718 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20589.09 rows=898755 width=0) (actual time=208.090..208.090 rows=899718 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171980.64..1218915.58 rows=22177115 width=16) (actual time=85.748..16007.490 rows=21902216 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=761116.97..5226571.10 rows=98153931 width=12) (actual time=388.169..62924.457 rows=96887951 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20813.78..137884.22 rows=898755 width=4) (actual time=240.932..1689.209 rows=899718 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1220727.87 rows=45404587 width=4) (actual time=0.033..11418.401 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1220727.87..1220727.87 rows=45404587 width=4) (actual time=22041.106..22041.106 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1974412.11..2297048.21 rows=179733 width=20) (actual time=24586.778..33458.241 rows=190943 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19704.60 rows=1150611 width=0) (actual time=306.096..306.096 rows=1145831 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19992.26..156031.80 rows=1150611 width=4) (actual time=340.311..1931.344 rows=1145831 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.696..111.387 rows=12108 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=115.305..115.305 rows=12108 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.681..109.430 rows=12108 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=24413.384..25956.370 rows=4814685 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.013..5819.379 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.719..428.057 rows=60186 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23917 width=30) (actual time=0.022..3471.416 rows=24080 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=462.809..14896.213 rows=4814880 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=462.553..462.553 rows=60186 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.668..83.047 rows=12037 loops=5)
Q20,1.0,Sort  (cost=53842420.70..53842434.12 rows=5369 width=51) (actual time=34899.695..34900.010 rows=5435 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.698..82.395 rows=11995 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834992.61..53842088.08 rows=5369 width=51) (actual time=34807.074..34894.033 rows=5435 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.56 rows=60000 width=0) (actual time=29.285..29.285 rows=64895 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.683..80.616 rows=11995 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.07..104664.66 rows=66065 width=4) (actual time=43.069..841.500 rows=64895 loops=1)
Q19,1.0,->  Nested Loop  (cost=38373.10..1887627.02 rows=3455 width=8) (actual time=109.764..7418.309 rows=3531 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.841..12.841 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.63 rows=23941 width=0) (actual time=10.336..10.336 rows=24099 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.31 rows=23908 width=0) (actual time=10.801..10.801 rows=24091 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.15 rows=23893 width=0) (actual time=10.669..10.669 rows=23994 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38372.53..79427.62 rows=14258 width=30) (actual time=104.088..814.513 rows=14498 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1218309.28 rows=45314628 width=16) (actual time=0.006..8804.921 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5031897.76 rows=181258276 width=8) (actual time=0.007..34666.429 rows=180178984 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5031897.76 rows=181258276 width=8) (actual time=0.041..45886.816 rows=180178984 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.041 rows=30 loops=6112)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.041 rows=30 loops=6112)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..209.11 rows=6055 width=0) (actual time=2.783..2.783 rows=6112 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.62..20026.17 rows=6055 width=4) (actual time=3.899..100.304 rows=6112 loops=1)
Q16,1.0,Sort  (cost=1248968.49..1249037.97 rows=27793 width=40) (actual time=31884.828..31888.251 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152971.00..152971.00 rows=889367 width=40) (actual time=3811.874..3811.874 rows=890149 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224405.01..1246917.03 rows=27793 width=40) (actual time=29561.263..31829.560 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7433.50..152971.00 rows=889367 width=40) (actual time=100.317..3409.326 rows=890149 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=279507.85..4072774.81 rows=6861491 width=12) (actual time=386.882..63385.745 rows=6732393 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=279507.85..4072774.81 rows=6861491 width=12) (actual time=389.978..67616.400 rows=6732393 loops=1)
Q14,1.0,->  Hash Join  (cost=280478.83..3451581.15 rows=2291496 width=29) (actual time=5078.490..80445.540 rows=2243010 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=23911.83..3149184.23 rows=2291496 width=12) (actual time=391.773..73178.243 rows=2243010 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45038983 width=8) (actual time=0.017..21473.568 rows=44512746 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2334796.24 rows=45038983 width=8) (actual time=3227.893..54714.735 rows=46012827 loops=1)
Q12,1.0,->  Sort  (cost=7428340.58..7430546.94 rows=882547 width=15) (actual time=74147.656..74276.814 rows=935297 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7341183.26 rows=882547 width=15) (actual time=0.225..73491.068 rows=935297 loops=1)
Q12,1.0,->  Merge Join  (cost=7428341.17..9515425.18 rows=882547 width=27) (actual time=74147.689..95587.810 rows=935297 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1959901.01 rows=45584563 width=20) (actual time=0.007..16217.370 rows=44999975 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.021..5345.279 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.021..5525.693 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.729..113.297 rows=12092 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.728..75.900 rows=12092 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=79.336..9762.725 rows=967360 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=116.995..10068.692 rows=967360 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=79.204..79.204 rows=12092 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=116.880..116.880 rows=12092 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.686..73.982 rows=12092 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.701..111.388 rows=12092 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5468692.15 rows=177997753 width=20) (actual time=0.016..57916.493 rows=177531871 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=44869656 width=12) (actual time=0.011..53986.792 rows=44419115 loops=1)
Q10,1.0,->  Hash  (cost=813764.58..813764.58 rows=1740023 width=8) (actual time=20244.704..20244.704 rows=1721227 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17943.23..813764.58 rows=1740023 width=8) (actual time=85.819..19413.466 rows=1721227 loops=1)
