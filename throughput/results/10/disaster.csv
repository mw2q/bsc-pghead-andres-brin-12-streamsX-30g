Q21,2113493.0,->  Nested Loop Semi Join  (cost=7193.26..10101391.26 rows=1 width=34) (actual time=118.004..131973.804 rows=2113493 loops=1)
Q3,955517.8,->  Sort  (cost=8070068.60..8093956.54 rows=9555178 width=20) (actual time=107429.192..107429.193 rows=10 loops=1)
Q18,902692.7,->  GroupAggregate  (cost=36088377.48..38570782.54 rows=90269275 width=39) (actual time=275191.273..275191.599 rows=100 loops=1)
Q18,128772.1,->  Sort  (cost=36088377.48..36314050.67 rows=90269275 width=39) (actual time=275191.261..275191.307 rows=701 loops=1)
Q21,118539.0,->  Nested Loop Anti Join  (cost=7193.83..10101394.40 rows=1 width=26) (actual time=119.835..140973.499 rows=118539 loops=1)
Q10,84808.3,->  Sort  (cost=6952147.39..6956387.81 rows=1696167 width=175) (actual time=97726.913..97726.916 rows=20 loops=1)
Q9,76582.9,->  Sort  (cost=3364028.34..3364028.66 rows=128 width=46) (actual time=501334.641..506992.583 rows=9802616 loops=1)
Q9,76582.9,->  Nested Loop  (cost=200322.26..3364019.90 rows=128 width=24) (actual time=2765.713..414208.881 rows=9802616 loops=1)
Q9,76582.9,->  Nested Loop  (cost=200321.69..3363941.22 rows=128 width=24) (actual time=2765.695..214878.900 rows=9802616 loops=1)
Q9,76582.9,->  Nested Loop  (cost=200321.27..3363883.28 rows=128 width=28) (actual time=2765.677..173303.404 rows=9802616 loops=1)
Q9,76582.9,->  Hash Join  (cost=200323.82..3364023.86 rows=128 width=46) (actual time=2765.767..426553.907 rows=9802616 loops=1)
Q18,72100.0,->  Hash Join  (cost=6270298.20..8090409.57 rows=22567326 width=39) (actual time=155045.338..176239.848 rows=313 loops=1)
Q18,72100.0,->  Hash Join  (cost=6063212.20..7488395.37 rows=22567326 width=20) (actual time=151150.305..172343.532 rows=313 loops=1)
Q18,72100.0,->  Hash  (cost=8090409.57..8090409.57 rows=22567326 width=39) (actual time=176241.453..176241.453 rows=313 loops=1)
Q18,41200.0,->  Hash Join  (cost=8548809.14..21692015.08 rows=90269275 width=39) (actual time=176438.082..275188.188 rows=2191 loops=1)
Q2,14244.0,->  Merge Join  (cost=1432056.81..3101463.33 rows=1 width=190) (actual time=22375.415..29539.908 rows=14244 loops=1)
Q18,13564.7,->  Hash  (cost=6010140.08..6010140.08 rows=4245770 width=4) (actual time=151065.865..151065.865 rows=313 loops=1)
Q18,13564.7,->  HashAggregate  (cost=5914610.25..5967682.38 rows=4245770 width=8) (actual time=126608.442..151064.823 rows=313 loops=1)
Q21,11969.0,->  HashAggregate  (cost=10101394.40..10101394.41 rows=1 width=26) (actual time=141177.971..141182.229 rows=11969 loops=1)
Q15,11140.0,->  Subquery Scan on revenue10  (cost=5014567.52..5014818.17 rows=11140 width=12) (actual time=163715.110..163787.634 rows=1 loops=1)
Q15,11140.0,->  Sort  (cost=5015566.97..5015594.82 rows=11140 width=12) (actual time=163787.659..163787.660 rows=1 loops=1)
Q15,11140.0,Merge Join  (cost=9980121.66..9995383.70 rows=11140 width=79) (actual time=163820.779..163820.782 rows=1 loops=1)
Q15,11140.0,->  HashAggregate  (cost=5014567.52..5014706.77 rows=11140 width=12) (actual time=163715.109..163787.631 rows=1 loops=1)
Q7,766.7,Sort  (cost=6574557.71..6574565.38 rows=3067 width=64) (actual time=111071.754..111071.754 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6574334.09..6574380.09 rows=3067 width=64) (actual time=111071.682..111071.692 rows=4 loops=1)
Q8,366.5,Sort  (cost=5321187.17..5321189.01 rows=733 width=38) (actual time=52534.848..52534.848 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5321139.46..5321152.29 rows=733 width=38) (actual time=52534.807..52534.808 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10101394.42..10101394.43 rows=1 width=26) (actual time=141185.042..141185.049 rows=100 loops=1)
Q21,100.0,Limit  (cost=10101394.42..10101394.43 rows=1 width=26) (actual time=141185.044..141185.061 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3101463.34..3101463.35 rows=1 width=190) (actual time=29554.833..29554.846 rows=100 loops=1)
Q2,100.0,Limit  (cost=3101463.34..3101463.35 rows=1 width=190) (actual time=29554.835..29554.864 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2193309)
Q11,35.0,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21926.554..21929.934 rows=27369 loops=1)
Q11,35.0,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21654.005..21910.443 rows=27369 loops=1)
Q3,28.1,->  HashAggregate  (cost=7768032.86..7863584.64 rows=9555178 width=20) (actual time=107213.407..107364.698 rows=340030 loops=1)
Q15,26.9,->  HashAggregate  (cost=4964303.61..4964415.01 rows=11140 width=12) (actual time=78372.304..78470.039 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.77 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1720746)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2113493)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23693.40 rows=2326940 width=0) (actual time=387.599..387.599 rows=32386560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.013..0.014 rows=4 loops=1365389)
Q3,10.6,->  Hash Join  (cost=2313225.15..7624705.19 rows=9555178 width=20) (actual time=27644.358..106335.864 rows=897439 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7261.11 rows=965480 width=0) (actual time=100.381..100.381 rows=9728000 loops=1)
Q4,9.8,->  Nested Loop Semi Join  (cost=17788.71..2755290.18 rows=160657 width=16) (actual time=88.422..38620.168 rows=1578357 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.118 rows=8 loops=1306364)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.595..11.595 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.212..11.212 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.653..0.653 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.690..0.690 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.673..0.673 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.673..0.673 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.659..0.659 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.033..1.375 rows=155 loops=1)
Q5,5.0,Sort  (cost=6787257.12..6787257.18 rows=25 width=34) (actual time=50436.747..50436.748 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6787256.29..6787256.54 rows=25 width=34) (actual time=50436.702..50436.704 rows=5 loops=1)
Q4,5.0,Sort  (cost=2756093.49..2756093.49 rows=1 width=16) (actual time=39531.652..39531.653 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2756093.47..2756093.48 rows=1 width=16) (actual time=39531.606..39531.607 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17356.92 rows=1724892 width=0) (actual time=87.856..87.856 rows=7697920 loops=1)
Q15,4.4,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.057..26.215 rows=67000 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17339.91 rows=1723191 width=0) (actual time=85.860..85.860 rows=7690240 loops=1)
Q13,4.3,Sort  (cost=2666555.72..2666556.22 rows=200 width=8) (actual time=97655.235..97655.237 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2666546.08..2666548.08 rows=200 width=8) (actual time=97655.170..97655.180 rows=46 loops=1)
Q17,3.6,->  Nested Loop  (cost=214.53..358203.16 rows=59062 width=4) (actual time=4.345..789.836 rows=16121 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.58 rows=11 width=12) (actual time=0.021..0.052 rows=3 loops=5958)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..741948.35 rows=98869913 width=0) (actual time=399.930..399.930 rows=32386560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..165236.13 rows=22017084 width=0) (actual time=85.127..85.127 rows=7697920 loops=1)
Q22,2.3,Sort  (cost=2459122.46..2459122.47 rows=3 width=20) (actual time=34401.619..34401.619 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2300360.05..2300360.09 rows=3 width=20) (actual time=34401.569..34401.572 rows=7 loops=1)
Q15,2.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..564374.53 rows=75193405 width=0) (actual time=377.944..377.944 rows=32066560 loops=1)
Q15,2.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..564374.53 rows=75193405 width=0) (actual time=377.593..377.593 rows=32034560 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.044..0.062 rows=2 loops=19342)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=13.037..13.037 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9459579.43..9459579.44 rows=1 width=27) (actual time=96644.755..96644.756 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9459579.41..9459579.42 rows=1 width=27) (actual time=96644.718..96644.719 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=834120.46..6587554.37 rows=1696167 width=12) (actual time=18639.527..82865.040 rows=3437849 loops=1)
Q10,2.0,->  Hash Join  (cost=1041208.02..6847647.15 rows=1696167 width=175) (actual time=22815.177..90479.567 rows=3437849 loops=1)
Q10,2.0,->  Hash Join  (cost=1041206.46..6824323.29 rows=1696167 width=153) (actual time=22815.143..89234.042 rows=3437849 loops=1)
Q16,1.9,->  Sort  (cost=1226292.54..1230772.14 rows=1791841 width=40) (actual time=29285.508..29761.723 rows=3565062 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.475..9143.080 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164396.90..1040182.87 rows=1791841 width=40) (actual time=3785.085..18025.341 rows=3565062 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5506879.25 rows=60659953 width=8) (actual time=0.014..59217.790 rows=113913014 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7358672.26 rows=1181526 width=38) (actual time=117.936..116572.733 rows=2193309 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5765810.18 rows=2426398 width=34) (actual time=117.765..86810.654 rows=4542422 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..552305.95 rows=55188195 width=0) (actual time=395.892..395.892 rows=32257280 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.032..0.057 rows=4 loops=19342)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.029..0.048 rows=4 loops=19342)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.023..0.025 rows=4 loops=19342)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.438..0.510 rows=3 loops=64758)
Q1,1.5,Sort  (cost=12631948.84..12631948.85 rows=6 width=20) (actual time=274390.216..274390.216 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12631948.66..12631948.76 rows=6 width=20) (actual time=274390.164..274390.167 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..82174.66 rows=10942222 width=0) (actual time=85.364..85.364 rows=7697920 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.978..12.978 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6890051.32..6907012.99 rows=1696167 width=175) (actual time=96625.774..97305.978 rows=1149315 loops=1)
Q9,1.3,GroupAggregate  (cost=3364028.34..3364032.82 rows=128 width=46) (actual time=501372.182..513238.637 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8622.82 rows=420380 width=0) (actual time=2230.789..2230.789 rows=573110 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8727.91..125598.89 rows=420380 width=24) (actual time=2263.799..3567.511 rows=573110 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=44.902..33880.634 rows=176312 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=33994.044..33994.044 rows=176312 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..273506.70 rows=27308270 width=0) (actual time=403.428..403.428 rows=32002560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.016..7458.075 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=300296 width=4) (actual time=0.011..2635.182 rows=326591 loops=1)
Q9,1.0,->  Hash Join  (cost=200320.70..1055200.11 rows=1201179 width=16) (actual time=2765.569..15715.621 rows=1306364 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=300296 width=4) (actual time=2762.957..2762.957 rows=326591 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.662..6315.365 rows=899395 loops=1)
Q8,1.0,->  Nested Loop  (cost=1198.08..5185125.27 rows=358496 width=20) (actual time=27.115..44929.033 rows=366760 loops=1)
Q8,1.0,->  Nested Loop  (cost=1197.52..4455214.09 rows=1177917 width=16) (actual time=27.046..17164.523 rows=1205701 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..112.49 rows=32 width=20) (actual time=0.027..0.405 rows=30 loops=40118)
Q8,1.0,->  Hash Join  (cost=14487.08..5203343.59 rows=358496 width=20) (actual time=219.104..45417.675 rows=366760 loops=1)
Q8,1.0,->  Hash Join  (cost=127443.27..5319705.48 rows=71699 width=38) (actual time=6854.488..52406.526 rows=72947 loops=1)
Q8,1.0,->  Hash Join  (cost=127441.71..5318359.57 rows=71699 width=16) (actual time=6854.428..52287.317 rows=72947 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6624.495..6624.495 rows=899395 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1187.26 rows=38760 width=0) (actual time=15.081..15.081 rows=40118 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1196.95..82811.30 rows=38760 width=4) (actual time=26.996..448.037 rows=40118 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.677..1231.810 rows=179879 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1220727.87 rows=45404587 width=8) (actual time=0.016..9382.872 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=577308.40..4881946.62 rows=4415056 width=42) (actual time=541.652..81301.605 rows=4358981 loops=1)
Q7,1.0,->  Hash Join  (cost=2225844.13..6571578.03 rows=183737 width=64) (actual time=27796.826..110804.617 rows=174614 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1603131.14 rows=3632367 width=30) (actual time=2576.235..25963.633 rows=3614265 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.041..2438.638 rows=360717 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.040..135.544 rows=23911 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2574.209..2574.209 rows=360717 loops=1)
Q7,1.0,->  Hash  (cost=1603131.14..1603131.14 rows=3632367 width=30) (actual time=27240.788..27240.788 rows=3614265 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=143.021..143.021 rows=23911 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=566103.00..4619634.93 rows=55188195 width=20) (actual time=398.476..64927.271 rows=54743124 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=274079.98..4088652.05 rows=2293136 width=8) (actual time=405.973..80860.098 rows=2288712 loops=1)
Q5,1.0,->  Nested Loop  (cost=196863.15..6727485.64 rows=5509828 width=46) (actual time=7246.002..48020.375 rows=5463191 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.400..6779.291 rows=899395 loops=1)
Q5,1.0,->  Hash Join  (cost=210902.15..6785052.32 rows=220397 width=34) (actual time=7447.106..50173.643 rows=217370 loops=1)
Q5,1.0,->  Hash Join  (cost=196862.58..1170318.39 rows=1377443 width=38) (actual time=7245.943..26365.039 rows=1365389 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=7155.099..7155.099 rows=899395 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=83896.47..1017750.80 rows=6887213 width=8) (actual time=85.887..15894.791 rows=6829345 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.284..1321.425 rows=179879 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17788.14..813382.52 rows=1724892 width=20) (actual time=88.376..15065.670 rows=1720746 loops=1)
Q3,1.0,->  Hash Join  (cost=319937.59..1491490.92 rows=4405472 width=12) (actual time=1237.111..25698.923 rows=4346840 loops=1)
Q3,1.0,->  Hash  (cost=1491490.92..1491490.92 rows=4405472 width=12) (actual time=27206.611..27206.611 rows=4346840 loops=1)
Q3,1.0,->  Hash  (cost=137941.94..137941.94 rows=900420 width=4) (actual time=1146.994..1146.994 rows=901110 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20625.58 rows=900420 width=0) (actual time=207.857..207.857 rows=901110 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=170740.40..1215674.95 rows=22017084 width=16) (actual time=85.626..16005.747 rows=21733277 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=766665.82..5241069.74 rows=98869913 width=12) (actual time=402.511..63366.697 rows=97562044 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20850.69..137941.94 rows=900420 width=4) (actual time=241.170..898.930 rows=901110 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1221936.37 rows=45449537 width=4) (actual time=0.040..11472.009 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1221936.37..1221936.37 rows=45449537 width=4) (actual time=22200.466..22200.466 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1976321.50..2299016.09 rows=179194 width=20) (actual time=24601.625..34322.997 rows=190896 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19658.72 rows=1147159 width=0) (actual time=349.355..349.355 rows=1146224 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19945.51..155894.43 rows=1147159 width=4) (actual time=386.441..1807.297 rows=1146224 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.726..113.612 rows=11969 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=117.600..117.600 rows=11969 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.706..111.466 rows=11969 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=22375.006..23928.870 rows=4807109 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.013..5949.332 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.724..431.951 rows=60089 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23832 width=30) (actual time=0.104..3549.203 rows=23969 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=467.215..15215.842 rows=4807120 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=466.940..466.940 rows=60089 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.666..83.826 rows=12018 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=34116.818..34117.155 rows=5394 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.711..108.329 rows=12090 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=33996.058..34109.374 rows=5394 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=30.231..30.231 rows=64758 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.695..106.302 rows=12090 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=44.143..778.054 rows=64758 loops=1)
Q19,1.0,->  Nested Loop  (cost=38375.79..1894776.92 rows=3475 width=8) (actual time=104.880..7135.830 rows=3330 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.925..12.925 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..837.35 rows=24311 width=0) (actual time=10.902..10.902 rows=24207 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.27 rows=23904 width=0) (actual time=10.634..10.634 rows=24040 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..832.07 rows=23783 width=0) (actual time=10.732..10.732 rows=23875 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38375.22..79562.83 rows=14317 width=30) (actual time=104.526..818.194 rows=14352 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1213470.52 rows=45134652 width=16) (actual time=0.027..9222.012 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5011917.50 rows=180538550 width=8) (actual time=0.005..34077.448 rows=179998838 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5011917.50 rows=180538550 width=8) (actual time=0.041..49627.495 rows=179998838 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.047 rows=30 loops=5958)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.047 rows=30 loops=5958)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..203.27 rows=5871 width=0) (actual time=2.662..2.662 rows=5958 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=204.74..19489.84 rows=5871 width=4) (actual time=3.749..145.771 rows=5958 loops=1)
Q16,1.0,Sort  (cost=1251038.61..1251108.60 rows=27998 width=40) (actual time=31593.704..31597.332 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153189.09..153189.09 rows=895924 width=40) (actual time=3779.061..3779.061 rows=891730 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1226292.54..1248970.53 rows=27998 width=40) (actual time=29285.649..31538.509 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7485.09..153189.09 rows=895924 width=40) (actual time=100.490..3384.935 rows=891730 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=566050.00..4897285.07 rows=6701854 width=12) (actual time=380.468..71619.291 rows=6731477 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=566050.00..4897285.07 rows=6701854 width=12) (actual time=380.115..78114.654 rows=6731477 loops=1)
Q14,1.0,->  Hash Join  (cost=280842.14..3475979.98 rows=2326940 width=29) (actual time=4974.251..72708.624 rows=2247144 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24275.14..3172874.18 rows=2326940 width=12) (actual time=390.311..65839.968 rows=2247144 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1335560.21 rows=44951105 width=8) (actual time=0.050..23115.659 rows=44562082 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2329290.55 rows=44951105 width=8) (actual time=2571.538..59561.167 rows=46062158 loops=1)
Q12,1.0,->  Sort  (cost=7375442.72..7377599.92 rows=862881 width=15) (actual time=74414.425..74541.092 rows=938893 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7290367.82 rows=862881 width=15) (actual time=0.095..73762.323 rows=938893 loops=1)
Q12,1.0,->  Merge Join  (cost=7375443.31..9444479.00 rows=862881 width=27) (actual time=74414.462..95765.558 rows=938893 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1942934.86 rows=45269620 width=20) (actual time=0.008..16155.428 rows=45044997 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.017..5493.891 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.015..5708.725 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.733..85.943 rows=12080 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.705..114.278 rows=12080 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=89.305..9921.852 rows=966400 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=117.916..10613.953 rows=966400 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=89.186..89.186 rows=12080 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=117.819..117.819 rows=12080 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.699..83.982 rows=12080 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.683..112.271 rows=12080 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5482629.18 rows=178732987 width=20) (actual time=0.014..58863.815 rows=177633115 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5512345.01 rows=44825445 width=12) (actual time=0.037..52857.939 rows=44463981 loops=1)
Q10,1.0,->  Hash  (cost=812580.57..812580.57 rows=1723191 width=8) (actual time=18630.083..18630.083 rows=1719783 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17770.71..812580.57 rows=1723191 width=8) (actual time=86.401..17874.292 rows=1719783 loops=1)
