Q21,2118717.0,->  Nested Loop Semi Join  (cost=7193.26..9970010.26 rows=1 width=34) (actual time=121.640..124386.850 rows=2118717 loops=1)
Q3,955595.3,->  Sort  (cost=8079397.75..8103287.63 rows=9555953 width=20) (actual time=112657.494..112657.495 rows=10 loops=1)
Q18,911700.7,->  GroupAggregate  (cost=36451036.45..38958213.43 rows=91170072 width=39) (actual time=264846.985..264847.334 rows=100 loops=1)
Q18,130057.1,->  Sort  (cost=36451036.45..36678961.63 rows=91170072 width=39) (actual time=264846.973..264847.051 rows=701 loops=1)
Q21,118787.0,->  Nested Loop Anti Join  (cost=7193.83..9970013.35 rows=1 width=26) (actual time=121.651..133465.912 rows=118787 loops=1)
Q18,113961.4,->  Hash Join  (cost=6329320.12..8167151.50 rows=22792282 width=39) (actual time=154692.179..175058.200 rows=200 loops=1)
Q18,113961.4,->  Hash Join  (cost=6122234.12..7561200.57 rows=22792282 width=20) (actual time=151943.649..172308.881 rows=200 loops=1)
Q18,113961.4,->  Hash  (cost=8167151.50..8167151.50 rows=22792282 width=39) (actual time=175059.064..175059.064 rows=200 loops=1)
Q10,85924.3,->  Sort  (cost=6955299.05..6959595.27 rows=1718486 width=175) (actual time=98321.878..98321.884 rows=20 loops=1)
Q9,70089.7,->  Sort  (cost=3592257.40..3592257.75 rows=140 width=46) (actual time=507559.721..513006.328 rows=9812562 loops=1)
Q9,70089.7,->  Nested Loop  (cost=200697.63..3592248.22 rows=140 width=24) (actual time=2818.990..418663.723 rows=9812562 loops=1)
Q9,70089.7,->  Nested Loop  (cost=200697.07..3592162.17 rows=140 width=24) (actual time=2818.934..218327.102 rows=9812562 loops=1)
Q9,70089.7,->  Nested Loop  (cost=200696.65..3592098.80 rows=140 width=28) (actual time=2818.918..176025.911 rows=9812562 loops=1)
Q9,70089.7,->  Hash Join  (cost=200699.20..3592252.41 rows=140 width=46) (actual time=2819.042..430881.058 rows=9812562 loops=1)
Q18,65121.4,->  Hash Join  (cost=8630120.03..21904480.76 rows=91170072 width=39) (actual time=175556.516..264845.076 rows=1400 loops=1)
Q18,21228.8,->  Hash  (cost=6069162.00..6069162.00 rows=4245770 width=4) (actual time=151883.992..151883.992 rows=200 loops=1)
Q18,21228.8,->  HashAggregate  (cost=5973632.17..6026704.30 rows=4245770 width=8) (actual time=131223.121..151883.506 rows=200 loops=1)
Q2,14095.0,->  Merge Join  (cost=1432056.81..3109814.56 rows=1 width=190) (actual time=22249.814..29490.675 rows=14095 loops=1)
Q21,11992.0,->  HashAggregate  (cost=9970013.36..9970013.37 rows=1 width=26) (actual time=133647.573..133650.861 rows=11992 loops=1)
Q15,11569.0,->  Subquery Scan on revenue4  (cost=5550677.44..5550937.74 rows=11569 width=12) (actual time=171683.494..171734.269 rows=1 loops=1)
Q15,11569.0,->  Sort  (cost=5551718.53..5551747.45 rows=11569 width=12) (actual time=171734.293..171734.294 rows=1 loops=1)
Q15,11569.0,Merge Join  (cost=11050355.75..11065624.23 rows=11569 width=79) (actual time=171782.642..171782.645 rows=1 loops=1)
Q15,11569.0,->  HashAggregate  (cost=5550677.44..5550822.05 rows=11569 width=12) (actual time=171683.493..171734.266 rows=1 loops=1)
Q7,766.7,Sort  (cost=6599927.34..6599935.01 rows=3067 width=64) (actual time=114182.837..114182.837 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6599703.72..6599749.72 rows=3067 width=64) (actual time=114182.775..114182.779 rows=4 loops=1)
Q8,366.5,Sort  (cost=5593562.48..5593564.31 rows=733 width=38) (actual time=52106.304..52106.304 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5593514.77..5593527.59 rows=733 width=38) (actual time=52106.259..52106.259 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=9970013.38..9970013.38 rows=1 width=26) (actual time=133653.612..133653.618 rows=100 loops=1)
Q21,100.0,Limit  (cost=9970013.38..9970013.38 rows=1 width=26) (actual time=133653.613..133653.630 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3109814.57..3109814.57 rows=1 width=190) (actual time=29505.272..29505.284 rows=100 loops=1)
Q2,100.0,Limit  (cost=3109814.57..3109814.57 rows=1 width=190) (actual time=29505.274..29505.297 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2198992)
Q11,32.9,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=22040.728..22044.391 rows=29175 loops=1)
Q11,32.9,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21700.375..22023.357 rows=29175 loops=1)
Q3,28.1,->  HashAggregate  (cost=7777337.51..7872897.04 rows=9555953 width=20) (actual time=112433.162..112593.526 rows=339701 loops=1)
Q15,25.9,->  HashAggregate  (cost=5498376.49..5498492.18 rows=11569 width=12) (actual time=87475.749..87599.487 rows=300000 loops=1)
Q14,15.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..21691.22 rows=2126722 width=0) (actual time=385.692..385.692 rows=32066560 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.73 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1701651)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2118717)
Q3,10.6,->  Hash Join  (cost=2313560.66..7633998.21 rows=9555953 width=20) (actual time=28366.874..111560.085 rows=899583 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.57 rows=42 width=16) (actual time=0.015..0.017 rows=4 loops=1373279)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7274.01 rows=967200 width=0) (actual time=114.095..114.095 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=17820.58..2749025.35 rows=162067 width=16) (actual time=86.180..43305.509 rows=1560435 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.120 rows=8 loops=1306996)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.243..11.243 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.471..11.471 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.649..0.649 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.678..0.678 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.648..0.648 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.667..0.667 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.665..0.665 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.058..1.945 rows=155 loops=1)
Q5,5.0,Sort  (cost=6834974.73..6834974.79 rows=25 width=34) (actual time=55908.947..55908.948 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6834973.90..6834974.15 rows=25 width=34) (actual time=55908.901..55908.902 rows=5 loops=1)
Q4,5.0,Sort  (cost=2749835.70..2749835.71 rows=1 width=16) (actual time=44243.862..44243.863 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2749835.68..2749835.69 rows=1 width=16) (actual time=44243.818..44243.819 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17388.01 rows=1728001 width=0) (actual time=85.604..85.604 rows=7644160 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17566.65 rows=1745865 width=0) (actual time=95.366..95.366 rows=7690240 loops=1)
Q13,4.3,Sort  (cost=2672500.80..2672501.30 rows=200 width=8) (actual time=97135.603..97135.605 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2672491.16..2672493.16 rows=200 width=8) (actual time=97135.536..97135.543 rows=46 loops=1)
Q17,3.6,->  Nested Loop  (cost=219.54..364154.53 rows=59998 width=4) (actual time=4.149..678.779 rows=16433 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.019..0.047 rows=3 loops=6160)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..745304.51 rows=99317401 width=0) (actual time=381.514..381.514 rows=32386560 loops=1)
Q15,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..739342.84 rows=98522512 width=0) (actual time=438.478..438.478 rows=32097280 loops=1)
Q15,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..739342.84 rows=98522512 width=0) (actual time=412.803..412.803 rows=32097280 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..164385.03 rows=21903604 width=0) (actual time=84.985..84.985 rows=7697920 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..132587.11 rows=17663881 width=0) (actual time=83.799..83.799 rows=7607040 loops=1)
Q22,2.3,Sort  (cost=2465257.81..2465257.82 rows=3 width=20) (actual time=35627.637..35627.638 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2306622.02..2306622.07 rows=3 width=20) (actual time=35627.584..35627.585 rows=7 loops=1)
Q15,2.3,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.034..35.763 rows=126933 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.046..0.065 rows=2 loops=19157)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=16.866..16.866 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9452033.66..9452033.66 rows=1 width=27) (actual time=95957.259..95957.259 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9452033.64..9452033.65 rows=1 width=27) (actual time=95957.222..95957.223 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=834976.40..6588633.50 rows=1718486 width=12) (actual time=19449.278..82915.833 rows=3444940 loops=1)
Q10,2.0,->  Hash Join  (cost=1042063.96..6849423.75 rows=1718486 width=175) (actual time=24254.265..91165.933 rows=3444940 loops=1)
Q10,2.0,->  Hash Join  (cost=1042062.40..6825793.00 rows=1718486 width=153) (actual time=24254.232..89914.340 rows=3444940 loops=1)
Q16,1.9,->  Sort  (cost=1226777.47..1231265.49 rows=1795207 width=40) (actual time=29178.287..29661.852 rows=3562999 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=2.147..9162.630 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164474.26..1040293.89 rows=1795207 width=40) (actual time=3731.445..17882.365 rows=3562999 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5457815.14 rows=60119497 width=8) (actual time=0.016..56193.976 rows=113912053 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7292998.60 rows=1171000 width=38) (actual time=121.576..109690.725 rows=2198992 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5714503.18 rows=2404780 width=34) (actual time=121.518..80668.239 rows=4555611 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..554499.48 rows=55407548 width=0) (actual time=394.134..394.134 rows=32386560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.060 rows=4 loops=19157)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.050 rows=4 loops=19157)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19157)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.416..0.486 rows=3 loops=65304)
Q1,1.5,Sort  (cost=12682511.08..12682511.09 rows=6 width=20) (actual time=274442.990..274442.991 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12682510.89..12682511.00 rows=6 width=20) (actual time=274442.939..274442.942 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=13.724..13.724 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6892385.90..6909570.76 rows=1718486 width=175) (actual time=97223.690..97903.468 rows=1149461 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8612.53 rows=419350 width=0) (actual time=2163.200..2163.200 rows=572746 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8717.37..125561.30 rows=419350 width=24) (actual time=2197.741..3593.367 rows=572746 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=46.366..32652.435 rows=177657 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=32766.417..32766.417 rows=177657 loops=1)
Q9,1.2,GroupAggregate  (cost=3592257.40..3592262.30 rows=140 width=46) (actual time=507596.840..519241.333 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..274563.26 rows=27413926 width=0) (actual time=387.964..387.964 rows=32161280 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.013..7422.343 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=330326 width=4) (actual time=0.020..2689.603 rows=326749 loops=1)
Q9,1.0,->  Hash Join  (cost=200696.08..1056776.68 rows=1321298 width=16) (actual time=2818.845..15905.328 rows=1306996 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=330326 width=4) (actual time=2816.178..2816.178 rows=326749 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.518..5630.392 rows=899950 loops=1)
Q8,1.0,->  Nested Loop  (cost=1267.60..5441166.72 rows=378649 width=20) (actual time=24.224..45132.557 rows=362861 loops=1)
Q8,1.0,->  Nested Loop  (cost=1267.03..4670228.77 rows=1244136 width=16) (actual time=24.093..20362.097 rows=1194092 loops=1)
Q8,1.0,->  Nested Loop  (cost=114222.65..5590578.67 rows=75730 width=16) (actual time=5925.537..51843.444 rows=72144 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.45 rows=32 width=20) (actual time=0.036..0.464 rows=30 loops=39817)
Q8,1.0,->  Hash Join  (cost=114224.21..5592000.17 rows=75730 width=38) (actual time=5925.587..51974.179 rows=72144 loops=1)
Q8,1.0,->  Hash Join  (cost=114222.23..5556298.58 rows=75730 width=16) (actual time=5925.519..51308.013 rows=72144 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=5897.133..5897.133 rows=899950 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1256.21 rows=41020 width=0) (actual time=15.251..15.251 rows=39817 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1266.46..85596.18 rows=41020 width=4) (actual time=24.023..1410.604 rows=39817 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.315..1097.589 rows=179990 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=8) (actual time=0.043..9213.466 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=579556.77..4901304.34 rows=4432604 width=42) (actual time=535.882..83801.391 rows=4384794 loops=1)
Q7,1.0,->  Hash Join  (cost=2233930.12..6596936.71 rows=184467 width=64) (actual time=28491.763..113904.376 rows=174381 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1608788.79 rows=3646765 width=30) (actual time=2525.199..26498.901 rows=3596085 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.037..2376.045 rows=360013 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.038..131.287 rows=24048 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2522.790..2522.790 rows=360013 loops=1)
Q7,1.0,->  Hash  (cost=1608788.79..1608788.79 rows=3646765 width=30) (actual time=27938.163..27938.163 rows=3596085 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=138.982..138.982 rows=24048 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=568351.37..4637994.59 rows=55407548 width=20) (actual time=396.731..69465.663 rows=54686426 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=274850.77..4107777.10 rows=1150057 width=8) (actual time=391.018..72762.452 rows=1145354 loops=1)
Q5,1.0,->  Nested Loop  (cost=247266.61..6775442.61 rows=5480990 width=46) (actual time=6698.420..53222.545 rows=5491826 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.579..6266.728 rows=901465 loops=1)
Q5,1.0,->  Hash Join  (cost=261305.61..6832781.47 rows=219243 width=34) (actual time=6881.160..55631.604 rows=220424 loops=1)
Q5,1.0,->  Hash Join  (cost=247266.04..1312223.94 rows=1370250 width=38) (actual time=6698.401..27625.812 rows=1373279 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6609.576..6609.576 rows=901465 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=134299.92..1159863.14 rows=6851251 width=8) (actual time=84.312..17143.540 rows=6846056 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.541..1221.582 rows=180293 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17820.01..808143.02 rows=1728001 width=20) (actual time=86.137..19143.124 rows=1701651 loops=1)
Q3,1.0,->  Hash Join  (cost=319087.73..1488602.08 rows=4385978 width=12) (actual time=2127.758..26174.648 rows=4331414 loops=1)
Q3,1.0,->  Hash  (cost=1488602.08..1488602.08 rows=4385978 width=12) (actual time=27942.544..27942.544 rows=4331414 loops=1)
Q3,1.0,->  Hash  (cost=137963.30..137963.30 rows=901080 width=4) (actual time=2037.250..2037.250 rows=900509 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20638.53 rows=901080 width=0) (actual time=205.936..205.936 rows=900509 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=169860.93..1213376.98 rows=21903604 width=16) (actual time=85.484..15795.103 rows=21620922 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=770133.86..5250131.37 rows=99317401 width=12) (actual time=384.021..65345.051 rows=98012301 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20863.80..137963.30 rows=901080 width=4) (actual time=237.475..1754.343 rows=900509 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=4) (actual time=0.033..11541.306 rows=45000000 loops=1)
Q22,1.0,->  Hash  (cost=1225566.63..1225566.63 rows=45584563 width=4) (actual time=23632.244..23632.244 rows=45000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1982156.03..2305281.36 rows=178755 width=20) (actual time=25988.393..35552.246 rows=191128 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19613.62 rows=1144348 width=0) (actual time=302.835..302.835 rows=1146024 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19899.70..155774.84 rows=1144348 width=4) (actual time=337.128..1737.118 rows=1146024 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.711..117.427 rows=11994 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=121.372..121.372 rows=11994 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.698..115.420 rows=11994 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=22248.188..23799.658 rows=4767084 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.013..6091.799 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.720..443.452 rows=59592 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23981 width=30) (actual time=0.379..3601.937 rows=23957 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=477.330..15182.273 rows=4767360 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=477.068..477.068 rows=59592 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.664..86.128 rows=11918 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=32891.548..32891.867 rows=5421 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.682..110.998 rows=12042 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=32768.549..32884.752 rows=5421 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=31.112..31.112 rows=65304 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.664..108.684 rows=12042 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=45.649..786.327 rows=65304 loops=1)
Q19,1.0,->  Nested Loop  (cost=38375.30..1885898.14 rows=3426 width=8) (actual time=122.546..7998.961 rows=3378 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=15.836..15.836 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..836.43 rows=24220 width=0) (actual time=14.514..14.514 rows=24189 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.07 rows=23985 width=0) (actual time=12.259..12.259 rows=23703 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..831.79 rows=23757 width=0) (actual time=12.239..12.239 rows=24057 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38374.73..79414.55 rows=14252 width=30) (actual time=121.619..915.193 rows=14273 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=16) (actual time=0.031..8762.828 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5061931.45 rows=182340145 width=8) (actual time=0.008..35717.655 rows=180181152 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5061931.45 rows=182340145 width=8) (actual time=0.042..46041.912 rows=180181152 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.021..0.040 rows=30 loops=6160)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.021..0.040 rows=30 loops=6160)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.26 rows=5970 width=0) (actual time=2.758..2.758 rows=6160 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.75..19780.10 rows=5970 width=4) (actual time=3.884..88.727 rows=6160 loops=1)
Q16,1.0,Sort  (cost=1251570.44..1251640.57 rows=28051 width=40) (actual time=31498.508..31502.184 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153245.41..153245.41 rows=897607 width=40) (actual time=3724.754..3724.754 rows=891222 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1226777.47..1249498.07 rows=28051 width=40) (actual time=29178.387..31442.568 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7498.41..153245.41 rows=897607 width=40) (actual time=114.204..3347.680 rows=891222 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=741086.21..5428641.89 rows=6973460 width=12) (actual time=415.353..80062.915 rows=6749406 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=741086.21..5428641.89 rows=6973460 width=12) (actual time=441.121..76589.683 rows=6749406 loops=1)
Q14,1.0,->  Hash Join  (cost=278789.91..3360177.37 rows=2126722 width=29) (actual time=4794.663..78970.626 rows=2097588 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=22222.91..3061075.93 rows=2126722 width=12) (actual time=388.452..71821.823 rows=2097588 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45038983 width=8) (actual time=0.057..21454.970 rows=44512746 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2334796.24 rows=45038983 width=8) (actual time=3210.741..58971.725 rows=46012827 loops=1)
Q12,1.0,->  Sort  (cost=7369905.65..7372103.23 rows=879032 width=15) (actual time=74498.564..74627.203 rows=936161 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7283120.78 rows=879032 width=15) (actual time=0.132..73845.962 rows=936161 loops=1)
Q12,1.0,->  Merge Join  (cost=7369906.24..9436650.58 rows=879032 width=27) (actual time=74498.642..95107.792 rows=936161 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1940513.61 rows=45224670 width=20) (actual time=0.008..15429.094 rows=45044886 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.021..5379.237 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.038..5690.215 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.735..79.590 rows=11902 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.710..114.301 rows=11902 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=82.737..10183.053 rows=952160 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=117.959..10418.031 rows=952160 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=82.606..82.606 rows=11902 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=117.828..117.828 rows=11902 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.689..77.706 rows=11902 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.686..112.366 rows=11902 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=179118227 width=20) (actual time=0.014..58682.047 rows=176881187 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5512345.01 rows=44825445 width=12) (actual time=0.013..52073.215 rows=44463981 loops=1)
Q10,1.0,->  Hash  (cost=813153.09..813153.09 rows=1745865 width=8) (actual time=19440.214..19440.214 rows=1722336 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=18003.11..813153.09 rows=1745865 width=8) (actual time=95.905..18696.261 rows=1722336 loops=1)
