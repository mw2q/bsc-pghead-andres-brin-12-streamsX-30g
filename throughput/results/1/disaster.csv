Q21,2101777.0,->  Nested Loop Semi Join  (cost=7193.26..9960011.52 rows=1 width=34) (actual time=179.800..125943.649 rows=2101777 loops=1)
Q3,943890.5,->  Sort  (cost=7974521.21..7998118.47 rows=9438905 width=20) (actual time=109997.496..109997.497 rows=10 loops=1)
Q18,902692.7,->  GroupAggregate  (cost=36088377.48..38570782.54 rows=90269275 width=39) (actual time=251949.583..251949.908 rows=100 loops=1)
Q18,128772.1,->  Sort  (cost=36088377.48..36314050.67 rows=90269275 width=39) (actual time=251949.571..251949.615 rows=701 loops=1)
Q21,117942.0,->  Nested Loop Anti Join  (cost=7193.83..9960014.62 rows=1 width=26) (actual time=180.249..135151.682 rows=117942 loops=1)
Q18,96441.5,->  Hash Join  (cost=6270298.20..8090409.57 rows=22567326 width=39) (actual time=143109.082..162722.198 rows=234 loops=1)
Q18,96441.5,->  Hash Join  (cost=6063212.20..7488395.37 rows=22567326 width=20) (actual time=139234.148..158846.549 rows=234 loops=1)
Q18,96441.5,->  Hash  (cost=8090409.57..8090409.57 rows=22567326 width=39) (actual time=162723.058..162723.058 rows=234 loops=1)
Q10,85839.1,->  Sort  (cost=6948609.56..6952901.51 rows=1716782 width=175) (actual time=97322.744..97322.747 rows=20 loops=1)
Q9,66827.9,->  Sort  (cost=3689784.85..3689785.21 rows=146 width=46) (actual time=495050.014..500384.034 rows=9756887 loops=1)
Q9,66827.9,->  Nested Loop  (cost=200848.28..3689775.30 rows=146 width=24) (actual time=2824.920..409927.866 rows=9756887 loops=1)
Q9,66827.9,->  Nested Loop  (cost=200847.72..3689685.56 rows=146 width=24) (actual time=2824.874..212706.961 rows=9756887 loops=1)
Q9,66827.9,->  Nested Loop  (cost=200847.30..3689619.47 rows=146 width=28) (actual time=2824.856..171038.147 rows=9756887 loops=1)
Q9,66827.9,->  Hash Join  (cost=200849.85..3689779.60 rows=146 width=46) (actual time=2824.969..421943.158 rows=9756887 loops=1)
Q18,55109.4,->  Hash Join  (cost=8548809.14..21692015.08 rows=90269275 width=39) (actual time=165371.776..251947.336 rows=1638 loops=1)
Q18,18144.3,->  Hash  (cost=6010140.08..6010140.08 rows=4245770 width=4) (actual time=139163.181..139163.181 rows=234 loops=1)
Q18,18144.3,->  HashAggregate  (cost=5914610.25..5967682.38 rows=4245770 width=8) (actual time=120163.585..139162.646 rows=234 loops=1)
Q2,14074.0,->  Merge Join  (cost=1432056.81..3140973.75 rows=1 width=190) (actual time=23102.842..30540.360 rows=14074 loops=1)
Q21,11902.0,->  HashAggregate  (cost=9960014.62..9960014.63 rows=1 width=26) (actual time=135352.023..135356.705 rows=11902 loops=1)
Q15,11089.0,->  Subquery Scan on revenue1  (cost=4329338.67..4329588.17 rows=11089 width=12) (actual time=147799.614..147851.685 rows=1 loops=1)
Q15,11089.0,->  Sort  (cost=4330333.18..4330360.90 rows=11089 width=12) (actual time=147851.704..147851.704 rows=1 loops=1)
Q15,11089.0,Merge Join  (cost=8609539.86..8624801.13 rows=11089 width=79) (actual time=147890.149..147890.151 rows=1 loops=1)
Q15,11089.0,->  HashAggregate  (cost=4329338.67..4329477.28 rows=11089 width=12) (actual time=147799.613..147851.683 rows=1 loops=1)
Q7,766.7,Sort  (cost=6555561.09..6555568.76 rows=3067 width=64) (actual time=121888.561..121888.562 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6555337.47..6555383.47 rows=3067 width=64) (actual time=121888.495..121888.499 rows=4 loops=1)
Q8,366.5,Sort  (cost=5407498.00..5407499.83 rows=733 width=38) (actual time=49698.022..49698.023 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5407450.29..5407463.12 rows=733 width=38) (actual time=49697.977..49697.977 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=9960014.64..9960014.65 rows=1 width=26) (actual time=135359.657..135359.663 rows=100 loops=1)
Q21,100.0,Limit  (cost=9960014.64..9960014.65 rows=1 width=26) (actual time=135359.658..135359.673 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3140973.76..3140973.77 rows=1 width=190) (actual time=30554.890..30554.902 rows=100 loops=1)
Q2,100.0,Limit  (cost=3140973.76..3140973.77 rows=1 width=190) (actual time=30554.891..30554.915 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2180681)
Q11,33.4,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21628.547..21632.181 rows=28724 loops=1)
Q11,33.4,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21348.565..21611.547 rows=28724 loops=1)
Q3,27.7,->  HashAggregate  (cost=7676160.81..7770549.86 rows=9438905 width=20) (actual time=109769.694..109933.640 rows=340580 loops=1)
Q15,27.0,->  HashAggregate  (cost=4278956.74..4279067.63 rows=11089 width=12) (actual time=72125.692..72228.891 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.71 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1722142)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2101777)
Q14,14.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23405.72 rows=2298172 width=0) (actual time=385.936..385.936 rows=32386560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.58 rows=43 width=16) (actual time=0.013..0.015 rows=4 loops=1364633)
Q3,10.4,->  Hash Join  (cost=2289087.31..7534577.24 rows=9438905 width=20) (actual time=35080.912..108914.943 rows=900123 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7165.56 rows=952740 width=0) (actual time=100.725..100.725 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=18033.24..2773874.79 rows=162879 width=16) (actual time=86.723..40453.440 rows=1578818 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.117 rows=8 loops=1300424)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.215..11.215 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.375..11.375 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.642..0.642 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.659..0.659 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.668..0.668 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.671..0.671 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.664..0.664 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.035..1.370 rows=155 loops=1)
Q5,5.0,Sort  (cost=7073188.23..7073188.30 rows=25 width=34) (actual time=52981.774..52981.775 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7073187.40..7073187.65 rows=25 width=34) (actual time=52981.727..52981.728 rows=5 loops=1)
Q4,5.0,Sort  (cost=2774689.20..2774689.21 rows=1 width=16) (actual time=41378.410..41378.410 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2774689.18..2774689.19 rows=1 width=16) (actual time=41378.364..41378.365 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17595.48 rows=1748748 width=0) (actual time=86.160..86.160 rows=7697920 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17549.37 rows=1744137 width=0) (actual time=90.537..90.537 rows=7682560 loops=1)
Q13,4.3,Sort  (cost=2663489.10..2663489.60 rows=200 width=8) (actual time=103560.346..103560.348 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2663479.46..2663481.46 rows=200 width=8) (actual time=103560.279..103560.289 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.92..366387.58 rows=60550 width=4) (actual time=4.326..787.474 rows=16044 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.050 rows=3 loops=5999)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..184925.63 rows=24642351 width=0) (actual time=85.032..85.032 rows=7644160 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..729981.96 rows=97274394 width=0) (actual time=379.223..379.223 rows=32057600 loops=1)
Q15,3.0,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.045..28.814 rows=96919 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..164406.01 rows=21906402 width=0) (actual time=84.717..84.717 rows=7614720 loops=1)
Q22,2.3,Sort  (cost=2465227.59..2465227.60 rows=3 width=20) (actual time=33173.287..33173.287 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2306606.20..2306606.25 rows=3 width=20) (actual time=33173.240..33173.242 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.046..0.065 rows=2 loops=19200)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=13.017..13.017 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1222828.16..1227247.90 rows=1767899 width=40) (actual time=30228.405..30697.057 rows=3565230 loops=1)
Q16,2.0,->  Hash Join  (cost=163830.22..1039376.77 rows=1767899 width=40) (actual time=4059.352..18629.084 rows=3565230 loops=1)
Q12,2.0,Sort  (cost=9480588.57..9480588.57 rows=1 width=27) (actual time=96002.048..96002.048 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9480588.55..9480588.56 rows=1 width=27) (actual time=96002.014..96002.014 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=834150.17..6582102.23 rows=1716782 width=12) (actual time=17776.280..82318.429 rows=3443711 loops=1)
Q10,2.0,->  Hash Join  (cost=1041237.73..6842839.23 rows=1716782 width=175) (actual time=22538.701..90364.497 rows=3443711 loops=1)
Q10,2.0,->  Hash Join  (cost=1041236.17..6819231.92 rows=1716782 width=153) (actual time=22538.663..89135.891 rows=3443711 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.453..9158.617 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5452366.41 rows=60059478 width=8) (actual time=0.006..56678.206 rows=113798479 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7285705.06 rows=1169831 width=38) (actual time=179.767..111679.206 rows=2180681 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5708805.37 rows=2402379 width=34) (actual time=179.651..82771.064 rows=4513223 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..550664.19 rows=55024019 width=0) (actual time=392.148..392.148 rows=32161280 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.060 rows=4 loops=19200)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.050 rows=4 loops=19200)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19200)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.459..0.531 rows=3 loops=65120)
Q1,1.5,Sort  (cost=12737999.68..12737999.69 rows=6 width=20) (actual time=275468.759..275468.759 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12737999.49..12737999.60 rows=6 width=20) (actual time=275468.709..275468.711 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.979..12.979 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6885758.78..6902926.60 rows=1716782 width=175) (actual time=96238.255..96904.903 rows=1150225 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8611.06 rows=419205 width=0) (actual time=2127.590..2127.590 rows=573017 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8715.86..125555.99 rows=419205 width=24) (actual time=2160.212..3463.964 rows=573017 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=48.533..35927.099 rows=176860 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=36055.058..36055.058 rows=176860 loops=1)
Q15,1.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..328413.48 rows=43731931 width=0) (actual time=387.873..387.873 rows=32257280 loops=1)
Q15,1.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..328413.48 rows=43731931 width=0) (actual time=380.542..380.542 rows=32289280 loops=1)
Q9,1.1,GroupAggregate  (cost=3689784.85..3689789.96 rows=146 width=46) (actual time=495086.291..506552.142 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..277392.94 rows=27696894 width=0) (actual time=383.611..383.611 rows=32193280 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.018..7402.871 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=342378 width=4) (actual time=0.011..2700.490 rows=325106 loops=1)
Q9,1.0,->  Hash Join  (cost=200846.73..1057409.41 rows=1369506 width=16) (actual time=2824.776..15769.988 rows=1300424 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=342378 width=4) (actual time=2822.260..2822.260 rows=325106 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.431..5758.448 rows=899950 loops=1)
Q8,1.0,->  Nested Loop  (cost=1219.97..5271254.35 rows=365165 width=20) (actual time=24.111..42724.451 rows=362840 loops=1)
Q8,1.0,->  Nested Loop  (cost=1219.41..4527767.74 rows=1199830 width=16) (actual time=23.980..18053.645 rows=1195504 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..112.13 rows=32 width=20) (actual time=0.030..0.431 rows=30 loops=39842)
Q8,1.0,->  Hash Join  (cost=14508.97..5289564.37 rows=365165 width=20) (actual time=209.003..43200.853 rows=362840 loops=1)
Q8,1.0,->  Hash Join  (cost=127465.16..5405989.63 rows=73033 width=38) (actual time=6238.699..49569.045 rows=72511 loops=1)
Q8,1.0,->  Hash Join  (cost=127463.60..5404618.70 rows=73033 width=16) (actual time=6238.652..49445.866 rows=72511 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6026.074..6026.074 rows=899950 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1208.96 rows=39520 width=0) (actual time=15.391..15.391 rows=39842 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1218.84..83762.15 rows=39520 width=4) (actual time=23.903..447.357 rows=39842 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.290..1122.892 rows=179990 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1217099.20 rows=45269620 width=8) (actual time=0.038..8936.730 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=575625.59..4867458.17 rows=4401922 width=42) (actual time=535.193..92039.433 rows=4397744 loops=1)
Q7,1.0,->  Hash Join  (cost=2219783.59..6552589.62 rows=183190 width=64) (actual time=27712.963..121600.694 rows=175857 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1598888.37 rows=3621570 width=30) (actual time=1825.999..25748.825 rows=3610742 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.048..1695.978 rows=360810 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.039..132.572 rows=24090 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=1823.594..1823.594 rows=360810 loops=1)
Q7,1.0,->  Hash  (cost=1598888.37..1598888.37 rows=3621570 width=30) (actual time=27159.909..27159.909 rows=3610742 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=140.247..140.247 rows=24090 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=564420.19..4605893.48 rows=55024019 width=20) (actual time=394.788..74726.571 rows=54743745 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=277683.42..4120178.53 rows=1161928 width=8) (actual time=386.205..81466.237 rows=1141228 loops=1)
Q5,1.0,->  Nested Loop  (cost=299619.29..7013250.95 rows=5529805 width=46) (actual time=7223.090..50148.644 rows=5457380 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=12.208..6789.186 rows=899395 loops=1)
Q5,1.0,->  Hash Join  (cost=313658.29..7070975.44 rows=221196 width=34) (actual time=7445.754..52707.781 rows=216515 loops=1)
Q5,1.0,->  Hash Join  (cost=299618.72..1472618.38 rows=1381579 width=38) (actual time=7223.036..28175.625 rows=1364633 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=7133.879..7133.879 rows=899395 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=186652.61..1319931.87 rows=6907894 width=8) (actual time=85.579..17168.428 rows=6828648 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.450..1324.269 rows=179879 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=18032.67..813984.89 rows=1748748 width=20) (actual time=86.701..16055.493 rows=1722142 loops=1)
Q3,1.0,->  Hash Join  (cost=319001.27..1480096.50 rows=4375220 width=12) (actual time=2283.187..32426.418 rows=4369046 loops=1)
Q3,1.0,->  Hash  (cost=1480096.50..1480096.50 rows=4375220 width=12) (actual time=34659.102..34659.102 rows=4369046 loops=1)
Q3,1.0,->  Hash  (cost=137884.22..137884.22 rows=898755 width=4) (actual time=2193.059..2193.059 rows=899718 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20589.09 rows=898755 width=0) (actual time=215.048..215.048 rows=899718 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=169882.61..1205076.64 rows=21906402 width=16) (actual time=85.232..19478.947 rows=21863606 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=754300.56..5175843.48 rows=97274394 width=12) (actual time=381.747..55938.472 rows=97040269 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20813.78..137884.22 rows=898755 width=4) (actual time=247.857..1905.246 rows=899718 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=4) (actual time=0.038..11211.239 rows=45000000 loops=1)
Q22,1.0,->  Hash  (cost=1225566.63..1225566.63 rows=45584563 width=4) (actual time=22014.649..22014.649 rows=45000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1982154.53..2305266.00 rows=178693 width=20) (actual time=24303.890..33097.081 rows=190653 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19610.68 rows=1143953 width=0) (actual time=289.370..289.370 rows=1145860 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19896.66..155761.43 rows=1143953 width=4) (actual time=321.129..1714.461 rows=1145860 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.689..174.258 rows=11902 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=179.511..179.511 rows=11902 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.675..171.507 rows=11902 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=23102.473..24757.172 rows=4814678 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.014..6457.947 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.699..430.175 rows=60186 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24536 width=30) (actual time=0.060..3674.672 rows=23922 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=464.881..15727.299 rows=4814880 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=464.622..464.622 rows=60186 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.658..83.506 rows=12037 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=36151.820..36152.125 rows=5319 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.704..83.986 rows=11886 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=36056.985..36146.023 rows=5319 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=30.503..30.503 rows=65120 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.691..82.268 rows=11886 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=47.604..1244.077 rows=65120 loops=1)
Q19,1.0,->  Nested Loop  (cost=38375.42..1890175.09 rows=3467 width=8) (actual time=108.161..7400.721 rows=3330 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.915..12.915 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..836.71 rows=24247 width=0) (actual time=10.886..10.886 rows=24075 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.79 rows=23954 width=0) (actual time=10.786..10.786 rows=23754 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..831.87 rows=23763 width=0) (actual time=10.604..10.604 rows=24240 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38374.85..79478.39 rows=14279 width=30) (actual time=104.393..859.610 rows=14381 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1213470.52 rows=45134652 width=16) (actual time=0.022..8675.674 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5011917.50 rows=180538550 width=8) (actual time=0.007..29473.172 rows=179998838 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5011917.50 rows=180538550 width=8) (actual time=0.058..44856.438 rows=179998838 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.048 rows=30 loops=5999)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.048 rows=30 loops=5999)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.63 rows=6007 width=0) (actual time=2.763..2.763 rows=5999 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.13..19889.51 rows=6007 width=4) (actual time=3.847..144.080 rows=5999 loops=1)
Q16,1.0,Sort  (cost=1247240.91..1247309.97 rows=27624 width=40) (actual time=32552.917..32556.661 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152772.05..152772.05 rows=883953 width=40) (actual time=4054.430..4054.430 rows=891759 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1222828.16..1245203.13 rows=27624 width=40) (actual time=30228.514..32497.123 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7386.55..152772.05 rows=883953 width=40) (actual time=100.820..3651.230 rows=891759 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=330092.88..4211780.84 rows=6717590 width=12) (actual time=383.131..65552.654 rows=6750800 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=330092.88..4211780.84 rows=6717590 width=12) (actual time=390.601..69304.118 rows=6750800 loops=1)
Q14,1.0,->  Hash Join  (cost=280547.27..3463184.73 rows=2298172 width=29) (actual time=5069.748..79191.635 rows=2246108 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=23980.27..3160654.29 rows=2298172 width=12) (actual time=388.578..71821.398 rows=2246108 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1335560.21 rows=44814811 width=8) (actual time=0.038..24402.507 rows=44558523 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2326905.40 rows=44814811 width=8) (actual time=3534.718..63296.997 rows=46058599 loops=1)
Q12,1.0,->  Sort  (cost=7391047.79..7393230.75 rows=873184 width=15) (actual time=74124.245..74260.366 rows=937669 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7304882.32 rows=873184 width=15) (actual time=0.166..73486.709 rows=937669 loops=1)
Q12,1.0,->  Merge Join  (cost=7391048.38..9465307.83 rows=873184 width=27) (actual time=74124.315..95118.340 rows=937669 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1947779.24 rows=45359578 width=20) (actual time=0.008..15750.582 rows=45044966 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.017..5393.599 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.034..5540.309 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.742..117.596 rows=11957 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.722..77.315 rows=11957 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=80.622..10062.449 rows=956560 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=121.306..10204.446 rows=956560 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=80.509..80.509 rows=11957 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=121.188..121.188 rows=11957 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.695..75.426 rows=11957 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.714..115.556 rows=11957 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=180505442 width=20) (actual time=0.014..58023.747 rows=178240132 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.25 rows=44780999 width=12) (actual time=0.030..52995.369 rows=44463463 loops=1)
Q10,1.0,->  Hash  (cost=812348.46..812348.46 rows=1744137 width=8) (actual time=17767.270..17767.270 rows=1724461 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17985.40..812348.46 rows=1744137 width=8) (actual time=91.130..17054.694 rows=1724461 loops=1)
