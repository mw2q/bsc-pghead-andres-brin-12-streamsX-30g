Q21,2120062.0,->  Nested Loop Semi Join  (cost=7193.26..10121482.24 rows=1 width=34) (actual time=124.122..126578.875 rows=2120062 loops=1)
Q3,954698.7,->  Sort  (cost=8071622.54..8095490.01 rows=9546987 width=20) (actual time=121026.529..121026.531 rows=10 loops=1)
Q18,911700.7,->  GroupAggregate  (cost=36451036.45..38958213.43 rows=91170072 width=39) (actual time=249340.306..249340.641 rows=100 loops=1)
Q18,130057.1,->  Sort  (cost=36451036.45..36678961.63 rows=91170072 width=39) (actual time=249340.297..249340.343 rows=701 loops=1)
Q21,119694.0,->  Nested Loop Anti Join  (cost=7193.83..10121485.38 rows=1 width=26) (actual time=124.331..135533.525 rows=119694 loops=1)
Q10,84892.0,->  Sort  (cost=6958800.54..6963045.14 rows=1697840 width=175) (actual time=102094.006..102094.009 rows=20 loops=1)
Q18,81692.7,->  Hash Join  (cost=6329320.12..8167151.50 rows=22792282 width=39) (actual time=142941.309..161358.971 rows=279 loops=1)
Q18,81692.7,->  Hash Join  (cost=6122234.12..7561200.57 rows=22792282 width=20) (actual time=139442.230..157859.084 rows=279 loops=1)
Q18,81692.7,->  Hash  (cost=8167151.50..8167151.50 rows=22792282 width=39) (actual time=161360.204..161360.204 rows=279 loops=1)
Q9,67703.9,->  Sort  (cost=3684357.97..3684358.33 rows=145 width=46) (actual time=500088.015..505962.969 rows=9817070 loops=1)
Q9,67703.9,->  Nested Loop  (cost=200847.78..3684348.48 rows=145 width=24) (actual time=2740.356..412145.399 rows=9817070 loops=1)
Q9,67703.9,->  Nested Loop  (cost=200847.22..3684259.36 rows=145 width=24) (actual time=2740.297..212733.608 rows=9817070 loops=1)
Q9,67703.9,->  Nested Loop  (cost=200846.80..3684193.72 rows=145 width=28) (actual time=2740.280..170762.379 rows=9817070 loops=1)
Q9,67703.9,->  Hash Join  (cost=200849.35..3684352.76 rows=145 width=46) (actual time=2740.418..424178.850 rows=9817070 loops=1)
Q18,46682.0,->  Hash Join  (cost=8630120.03..21904480.76 rows=91170072 width=39) (actual time=162405.143..249337.796 rows=1953 loops=1)
Q18,15217.8,->  Hash  (cost=6069162.00..6069162.00 rows=4245770 width=4) (actual time=139402.057..139402.057 rows=279 loops=1)
Q18,15217.8,->  HashAggregate  (cost=5973632.17..6026704.30 rows=4245770 width=8) (actual time=121129.563..139401.432 rows=279 loops=1)
Q2,13983.0,->  Merge Join  (cost=1432056.81..3106375.82 rows=1 width=190) (actual time=21891.817..28864.207 rows=13983 loops=1)
Q21,11995.0,->  HashAggregate  (cost=10121485.38..10121485.39 rows=1 width=26) (actual time=135730.915..135734.992 rows=11995 loops=1)
Q15,11036.0,->  Subquery Scan on revenue8  (cost=5177124.49..5177372.80 rows=11036 width=12) (actual time=169642.278..169687.852 rows=1 loops=1)
Q15,11036.0,->  Sort  (cost=5178113.86..5178141.45 rows=11036 width=12) (actual time=169687.878..169687.879 rows=1 loops=1)
Q15,11036.0,Merge Join  (cost=10305592.52..10320852.99 rows=11036 width=79) (actual time=169726.916..169726.919 rows=1 loops=1)
Q15,11036.0,->  HashAggregate  (cost=5177124.49..5177262.44 rows=11036 width=12) (actual time=169642.278..169687.851 rows=1 loops=1)
Q7,766.7,Sort  (cost=6593608.08..6593615.75 rows=3067 width=64) (actual time=116733.434..116733.434 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6593384.46..6593430.46 rows=3067 width=64) (actual time=116733.367..116733.376 rows=4 loops=1)
Q8,366.5,Sort  (cost=5567555.64..5567557.48 rows=733 width=38) (actual time=53279.809..53279.810 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5567507.93..5567520.76 rows=733 width=38) (actual time=53279.764..53279.765 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=135737.757..135737.766 rows=100 loops=1)
Q21,100.0,Limit  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=135737.760..135737.778 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3106375.83..3106375.84 rows=1 width=190) (actual time=28878.420..28878.433 rows=100 loops=1)
Q2,100.0,Limit  (cost=3106375.83..3106375.84 rows=1 width=190) (actual time=28878.422..28878.447 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2200230)
Q11,34.0,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=20722.187..20725.573 rows=28153 loops=1)
Q11,34.0,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=20468.746..20705.600 rows=28153 loops=1)
Q3,28.0,->  HashAggregate  (cost=7769845.72..7865315.59 rows=9546987 width=20) (actual time=120801.584..120962.762 rows=340368 loops=1)
Q15,27.1,->  HashAggregate  (cost=5127229.91..5127340.27 rows=11036 width=12) (actual time=87485.413..87605.342 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.88 rows=14 width=4) (actual time=0.014..0.014 rows=1 loops=1683576)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2120062)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23945.16 rows=2352116 width=0) (actual time=393.769..393.769 rows=32322560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.014..0.016 rows=4 loops=1363169)
Q3,10.6,->  Hash Join  (cost=2312856.18..7626640.91 rows=9546987 width=20) (actual time=31334.953..119877.348 rows=898373 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7178.31 rows=954440 width=0) (actual time=100.766..100.766 rows=9728000 loops=1)
Q4,9.8,->  Nested Loop Semi Join  (cost=17400.99..2725791.10 rows=157134 width=16) (actual time=86.224..44080.593 rows=1543558 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.116 rows=8 loops=1307436)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.211..11.211 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.205..11.205 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.648..0.648 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.747..0.747 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.769..0.769 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.698..0.698 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.693..0.693 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.046..1.344 rows=155 loops=1)
Q5,5.0,Sort  (cost=6731991.29..6731991.35 rows=25 width=34) (actual time=55539.167..55539.167 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6731990.46..6731990.71 rows=25 width=34) (actual time=55539.124..55539.126 rows=5 loops=1)
Q4,5.0,Sort  (cost=2726576.79..2726576.79 rows=1 width=16) (actual time=45036.267..45036.267 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2726576.77..2726576.78 rows=1 width=16) (actual time=45036.226..45036.227 rows=5 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..16978.65 rows=1687065 width=0) (actual time=85.669..85.669 rows=7697920 loops=1)
Q13,4.4,Sort  (cost=2674562.68..2674563.18 rows=200 width=8) (actual time=87789.775..87789.778 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=2674553.03..2674555.03 rows=200 width=8) (actual time=87789.706..87789.714 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17356.92 rows=1724892 width=0) (actual time=85.354..85.354 rows=7697920 loops=1)
Q17,3.8,->  Nested Loop  (cost=219.76..365416.54 rows=60209 width=4) (actual time=4.141..666.215 rows=15838 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.019..0.047 rows=3 loops=5996)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..742843.32 rows=98989243 width=0) (actual time=384.772..384.772 rows=32386560 loops=1)
Q15,2.9,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.043..28.790 rows=102995 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..164895.69 rows=21971692 width=0) (actual time=85.118..85.118 rows=7697920 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..616723.55 rows=82173273 width=0) (actual time=398.487..398.487 rows=32097280 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..616723.55 rows=82173273 width=0) (actual time=377.926..377.926 rows=32097280 loops=1)
Q22,2.3,Sort  (cost=2465703.44..2465703.44 rows=3 width=20) (actual time=35591.068..35591.069 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2306840.83..2306840.87 rows=3 width=20) (actual time=35591.018..35591.019 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.043..0.061 rows=2 loops=18887)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=12.954..12.954 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1223497.57..1227929.37 rows=1772721 width=40) (actual time=30278.329..30747.752 rows=3564336 loops=1)
Q16,2.0,->  Hash Join  (cost=163916.21..1039510.98 rows=1772721 width=40) (actual time=3950.575..18906.615 rows=3564336 loops=1)
Q12,2.0,Sort  (cost=9499173.46..9499173.47 rows=1 width=27) (actual time=96398.122..96398.122 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9499173.44..9499173.45 rows=1 width=27) (actual time=96398.089..96398.090 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=834943.67..6594052.16 rows=1697840 width=12) (actual time=19460.559..86321.665 rows=3443931 loops=1)
Q10,2.0,->  Hash Join  (cost=1042031.23..6854197.23 rows=1697840 width=175) (actual time=24354.732..94731.783 rows=3443931 loops=1)
Q10,2.0,->  Hash Join  (cost=1042029.67..6830850.36 rows=1697840 width=153) (actual time=24354.701..93487.811 rows=3443931 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.452..9703.500 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5517781.81 rows=60780048 width=8) (actual time=0.012..57437.019 rows=113799809 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7373266.02 rows=1183866 width=38) (actual time=124.096..112083.431 rows=2200230 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5777211.14 rows=2431202 width=34) (actual time=124.013..83530.948 rows=4552626 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..553953.54 rows=55352954 width=0) (actual time=387.041..387.041 rows=32354560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.032..0.057 rows=4 loops=18887)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.029..0.047 rows=4 loops=18887)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.023..0.025 rows=4 loops=18887)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.449..0.522 rows=3 loops=65089)
Q1,1.5,Sort  (cost=12595741.24..12595741.26 rows=6 width=20) (actual time=270448.303..270448.303 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12595741.06..12595741.16 rows=6 width=20) (actual time=270448.250..270448.250 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..81526.74 rows=10855832 width=0) (actual time=85.211..85.211 rows=7636480 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.834..12.834 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6896643.23..6913621.63 rows=1697840 width=175) (actual time=100946.151..101673.441 rows=1149201 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8654.87 rows=421185 width=0) (actual time=2268.811..2268.811 rows=573019 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8760.16..125652.27 rows=421185 width=24) (actual time=2307.794..3679.860 rows=573019 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=50.879..34888.496 rows=177182 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=35016.358..35016.358 rows=177182 loops=1)
Q9,1.2,GroupAggregate  (cost=3684357.97..3684363.04 rows=145 width=46) (actual time=500126.831..512231.551 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..276783.04 rows=27635904 width=0) (actual time=391.306..391.306 rows=32386560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.012..7384.373 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=342338 width=4) (actual time=0.010..2618.563 rows=326859 loops=1)
Q9,1.0,->  Hash Join  (cost=200846.23..1057407.31 rows=1369346 width=16) (actual time=2740.186..15604.570 rows=1307436 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=342338 width=4) (actual time=2738.236..2738.236 rows=326859 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.395..5591.220 rows=899362 loops=1)
Q8,1.0,->  Nested Loop  (cost=1262.36..5415507.82 rows=375303 width=20) (actual time=24.933..46244.051 rows=368742 loops=1)
Q8,1.0,->  Nested Loop  (cost=1261.79..4651399.40 rows=1233141 width=16) (actual time=24.600..19302.875 rows=1214719 loops=1)
Q8,1.0,->  Nested Loop  (cost=114217.41..5564597.76 rows=75061 width=16) (actual time=5916.507..53019.451 rows=73722 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.43 rows=32 width=20) (actual time=0.030..0.451 rows=30 loops=40452)
Q8,1.0,->  Hash Join  (cost=114218.97..5566006.71 rows=75061 width=38) (actual time=5916.552..53148.256 rows=73722 loops=1)
Q8,1.0,->  Hash Join  (cost=114216.99..5530620.44 rows=75061 width=16) (actual time=5916.492..52426.410 rows=73722 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=5886.815..5886.815 rows=899362 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1251.01 rows=40860 width=0) (actual time=15.888..15.888 rows=40452 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1261.22..85403.61 rows=40860 width=4) (actual time=24.522..577.417 rows=40452 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.282..1090.167 rows=179872 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1224358.13 rows=45539613 width=8) (actual time=0.013..8461.323 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=578997.18..4896486.43 rows=4428236 width=42) (actual time=533.337..88474.349 rows=4404908 loops=1)
Q7,1.0,->  Hash Join  (cost=2231912.56..6590620.18 rows=184285 width=64) (actual time=26444.940..116441.870 rows=175738 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1607375.77 rows=3643169 width=30) (actual time=2662.570..24695.310 rows=3597967 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.042..2521.018 rows=359710 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.039..135.907 rows=24130 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2660.539..2660.539 rows=359710 loops=1)
Q7,1.0,->  Hash  (cost=1607375.77..1607375.77 rows=3643169 width=30) (actual time=25897.135..25897.135 rows=3597967 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=143.576..143.576 rows=24130 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=567791.78..4633425.09 rows=55352954 width=20) (actual time=389.610..73798.045 rows=54741126 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=277390.21..4137728.05 rows=2428679 width=8) (actual time=394.039..74318.921 rows=2385986 loops=1)
Q5,1.0,->  Nested Loop  (cost=196201.63..6672581.52 rows=5466250 width=46) (actual time=6611.888..52911.801 rows=5451712 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.396..6165.725 rows=899362 loops=1)
Q5,1.0,->  Hash Join  (cost=210240.63..6729803.93 rows=218653 width=34) (actual time=6806.202..55264.902 rows=218580 loops=1)
Q5,1.0,->  Hash Join  (cost=196201.06..1161971.37 rows=1366568 width=38) (actual time=6611.845..29246.544 rows=1363169 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6521.235..6521.235 rows=899362 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=83234.95..1009716.43 rows=6832838 width=8) (actual time=85.738..19143.473 rows=6835624 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.276..1201.144 rows=179872 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17400.42..812427.39 rows=1687065 width=20) (actual time=86.198..19090.810 rows=1683576 loops=1)
Q3,1.0,->  Hash Join  (cost=319585.80..1490310.68 rows=4396389 width=12) (actual time=2104.864..29320.670 rows=4343660 loops=1)
Q3,1.0,->  Hash  (cost=1490310.68..1490310.68 rows=4396389 width=12) (actual time=30912.232..30912.232 rows=4343660 loops=1)
Q3,1.0,->  Hash  (cost=137941.94..137941.94 rows=900420 width=4) (actual time=2014.682..2014.682 rows=901110 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20625.58 rows=900420 width=0) (actual time=202.733..202.733 rows=901110 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=170388.61..1214755.76 rows=21971692 width=16) (actual time=85.616..17964.274 rows=21717605 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=767590.63..5243486.17 rows=98989243 width=12) (actual time=387.333..71958.067 rows=97810782 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20850.69..137941.94 rows=900420 width=4) (actual time=235.266..1713.992 rows=901110 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=4) (actual time=0.041..11452.974 rows=45000000 loops=1)
Q22,1.0,->  Hash  (cost=1225566.63..1225566.63 rows=45584563 width=4) (actual time=23675.557..23675.557 rows=45000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1982198.83..2305494.30 rows=179537 width=20) (actual time=26199.183..35516.406 rows=190935 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19695.21 rows=1149356 width=0) (actual time=296.249..296.249 rows=1146213 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19982.55..155989.14 rows=1149356 width=4) (actual time=328.745..1819.161 rows=1146213 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.781..119.983 rows=11995 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=123.895..123.895 rows=11995 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.767..117.944 rows=11995 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=21890.591..23413.076 rows=4767344 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.012..5745.912 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.713..425.719 rows=59592 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23920 width=30) (actual time=0.655..3447.622 rows=23720 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=460.487..14810.159 rows=4767360 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=460.220..460.220 rows=59592 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.662..82.587 rows=11918 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=35112.597..35112.907 rows=5403 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.852..83.130 rows=12012 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=35018.594..35106.718 rows=5403 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=34.155..34.155 rows=65089 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.802..81.308 rows=12012 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=50.008..823.738 rows=65089 loops=1)
Q19,1.0,->  Nested Loop  (cost=38374.87..1886890.05 rows=3415 width=8) (actual time=101.768..9618.425 rows=3409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.784..12.784 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.83 rows=24060 width=0) (actual time=10.159..10.159 rows=24010 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.71 rows=24048 width=0) (actual time=10.118..10.118 rows=23919 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..832.31 rows=23806 width=0) (actual time=9.837..9.837 rows=23890 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38374.30..79442.15 rows=14263 width=30) (actual time=100.060..1035.754 rows=14311 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=16) (actual time=0.021..8346.888 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5061931.45 rows=182340145 width=8) (actual time=0.005..32367.449 rows=180000761 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5061931.45 rows=182340145 width=8) (actual time=0.014..44271.077 rows=180000761 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.041 rows=30 loops=5996)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.041 rows=30 loops=5996)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.47 rows=5991 width=0) (actual time=2.591..2.591 rows=5996 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.97..19840.91 rows=5991 width=4) (actual time=3.695..90.084 rows=5996 loops=1)
Q16,1.0,Sort  (cost=1247977.41..1248046.66 rows=27699 width=40) (actual time=32613.099..32616.821 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152827.90..152827.90 rows=886364 width=40) (actual time=3944.430..3944.430 rows=891530 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1223497.57..1245933.57 rows=27699 width=40) (actual time=30278.437..32555.866 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7399.90..152827.90 rows=886364 width=40) (actual time=100.880..3558.457 rows=891530 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=618386.70..5060703.80 rows=6652611 width=12) (actual time=401.023..80134.129 rows=6740481 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=618386.70..5060703.80 rows=6652611 width=12) (actual time=380.438..74775.930 rows=6740481 loops=1)
Q14,1.0,->  Hash Join  (cost=281100.19..3482539.67 rows=2352116 width=29) (actual time=5023.043..79341.978 rows=2318077 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24533.19..3178930.35 rows=2352116 width=12) (actual time=396.423..72397.449 rows=2318077 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45130622 width=8) (actual time=0.047..21425.739 rows=44514055 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2336399.92 rows=45130622 width=8) (actual time=2602.425..53701.676 rows=46014137 loops=1)
Q12,1.0,->  Sort  (cost=7404795.54..7406960.34 rows=865920 width=15) (actual time=74206.501..74341.043 rows=938152 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7319399.05 rows=865920 width=15) (actual time=0.024..73552.205 rows=938152 loops=1)
Q12,1.0,->  Merge Join  (cost=7404796.13..9484019.84 rows=865920 width=27) (actual time=74206.536..95523.956 rows=938152 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1952627.62 rows=45449537 width=20) (actual time=0.007..16087.778 rows=45044997 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.016..5250.155 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.014..5393.149 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.801..144.461 rows=11994 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.743..119.909 rows=11994 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=149.065..9624.619 rows=959520 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=123.808..9841.203 rows=959520 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=148.943..148.943 rows=11994 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=123.707..123.707 rows=11994 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.773..141.887 rows=11994 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.717..117.820 rows=11994 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5453093.94 rows=178566178 width=20) (actual time=0.015..56624.077 rows=178420360 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=44869656 width=12) (actual time=0.029..55166.257 rows=44419115 loops=1)
Q10,1.0,->  Hash  (cost=813382.52..813382.52 rows=1724892 width=8) (actual time=19454.228..19454.228 rows=1720746 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17788.14..813382.52 rows=1724892 width=8) (actual time=85.885..18763.681 rows=1720746 loops=1)
