Q21,2113182.0,->  Nested Loop Semi Join  (cost=7193.26..10121482.24 rows=1 width=34) (actual time=122.121..128401.871 rows=2113182 loops=1)
Q3,956887.9,->  Sort  (cost=8028710.91..8052633.11 rows=9568879 width=20) (actual time=115239.673..115239.674 rows=10 loops=1)
Q18,902692.7,->  GroupAggregate  (cost=36088377.48..38570782.54 rows=90269275 width=39) (actual time=260392.771..260393.102 rows=100 loops=1)
Q18,128772.1,->  Sort  (cost=36088377.48..36314050.67 rows=90269275 width=39) (actual time=260392.761..260392.802 rows=701 loops=1)
Q21,118665.0,->  Nested Loop Anti Join  (cost=7193.83..10121485.38 rows=1 width=26) (actual time=122.738..137376.733 rows=118665 loops=1)
Q10,85328.8,->  Sort  (cost=6908542.72..6912809.16 rows=1706576 width=175) (actual time=100049.841..100049.844 rows=20 loops=1)
Q18,81470.4,->  Hash Join  (cost=6270298.20..8090409.57 rows=22567326 width=39) (actual time=152479.159..170386.886 rows=277 loops=1)
Q18,81470.4,->  Hash Join  (cost=6063212.20..7488395.37 rows=22567326 width=20) (actual time=148752.271..166658.908 rows=277 loops=1)
Q18,81470.4,->  Hash  (cost=8090409.57..8090409.57 rows=22567326 width=39) (actual time=170390.485..170390.485 rows=277 loops=1)
Q9,60822.7,->  Sort  (cost=3967618.22..3967618.62 rows=161 width=46) (actual time=509758.709..515879.611 rows=9792460 loops=1)
Q9,60822.7,->  Nested Loop  (cost=201298.22..3967607.73 rows=161 width=24) (actual time=2668.165..420687.181 rows=9792460 loops=1)
Q9,60822.7,->  Nested Loop  (cost=201297.65..3967508.77 rows=161 width=24) (actual time=2668.131..214368.560 rows=9792460 loops=1)
Q9,60822.7,->  Nested Loop  (cost=201297.23..3967435.89 rows=161 width=28) (actual time=2668.115..172433.815 rows=9792460 loops=1)
Q9,60822.7,->  Hash Join  (cost=201299.78..3967612.31 rows=161 width=46) (actual time=2668.215..432949.723 rows=9792460 loops=1)
Q18,46554.5,->  Hash Join  (cost=8548809.14..21692015.08 rows=90269275 width=39) (actual time=171411.195..260390.114 rows=1939 loops=1)
Q18,15327.6,->  Hash  (cost=6010140.08..6010140.08 rows=4245770 width=4) (actual time=148625.972..148625.972 rows=277 loops=1)
Q18,15327.6,->  HashAggregate  (cost=5914610.25..5967682.38 rows=4245770 width=8) (actual time=127494.996..148625.298 rows=277 loops=1)
Q2,14265.0,->  Merge Join  (cost=1432056.81..3106235.46 rows=1 width=190) (actual time=23785.733..30996.578 rows=14265 loops=1)
Q21,11968.0,->  HashAggregate  (cost=10121485.38..10121485.39 rows=1 width=26) (actual time=137550.132..137553.511 rows=11968 loops=1)
Q15,11198.0,->  Subquery Scan on revenue11  (cost=6020585.71..6020837.67 rows=11198 width=12) (actual time=122793.755..122825.759 rows=1 loops=1)
Q15,11198.0,->  Sort  (cost=6021590.78..6021618.78 rows=11198 width=12) (actual time=122825.789..122825.790 rows=1 loops=1)
Q15,11198.0,Merge Join  (cost=11991954.65..12007217.55 rows=11198 width=79) (actual time=122830.611..122830.613 rows=1 loops=1)
Q15,11198.0,->  HashAggregate  (cost=6020585.71..6020725.69 rows=11198 width=12) (actual time=122793.755..122825.758 rows=1 loops=1)
Q7,766.7,Sort  (cost=6599927.34..6599935.01 rows=3067 width=64) (actual time=115267.206..115267.206 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6599703.72..6599749.72 rows=3067 width=64) (actual time=115267.139..115267.147 rows=4 loops=1)
Q8,366.5,Sort  (cost=5253078.87..5253080.70 rows=733 width=38) (actual time=53764.850..53764.851 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5253031.16..5253043.99 rows=733 width=38) (actual time=53764.805..53764.807 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=137556.235..137556.242 rows=100 loops=1)
Q21,100.0,Limit  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=137556.237..137556.254 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3106235.47..3106235.48 rows=1 width=190) (actual time=31011.132..31011.143 rows=100 loops=1)
Q2,100.0,Limit  (cost=3106235.47..3106235.48 rows=1 width=190) (actual time=31011.132..31011.158 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2193428)
Q15,33.3,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.013..3.872 rows=8992 loops=1)
Q11,32.6,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=22679.912..22683.388 rows=29368 loops=1)
Q11,32.6,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=22405.303..22662.631 rows=29368 loops=1)
Q3,28.1,->  HashAggregate  (cost=7726242.08..7821930.87 rows=9568879 width=20) (actual time=115022.194..115174.479 rows=340092 loops=1)
Q15,26.7,->  HashAggregate  (cost=5970111.48..5970223.46 rows=11198 width=12) (actual time=61945.441..62072.836 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.77 rows=14 width=4) (actual time=0.015..0.015 rows=1 loops=1722450)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2113182)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23735.60 rows=2331160 width=0) (actual time=381.077..381.077 rows=32034560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.016..0.018 rows=4 loops=1364442)
Q3,10.6,->  Hash Join  (cost=2308194.25..7582708.90 rows=9568879 width=20) (actual time=32283.388..114150.158 rows=898231 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7185.06 rows=955340 width=0) (actual time=100.721..100.721 rows=9728000 loops=1)
Q4,9.8,->  Nested Loop Semi Join  (cost=17718.91..2745044.47 rows=160657 width=16) (actual time=86.119..46381.682 rows=1578988 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.117 rows=8 loops=1304360)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.510..11.510 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=12.588..12.588 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.645..0.645 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.664..0.664 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.665..0.665 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.768..0.768 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.670..0.670 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.037..1.364 rows=155 loops=1)
Q5,5.0,Sort  (cost=7205697.49..7205697.55 rows=25 width=34) (actual time=55249.321..55249.321 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7205696.65..7205696.90 rows=25 width=34) (actual time=55249.272..55249.274 rows=5 loops=1)
Q4,5.0,Sort  (cost=2745847.78..2745847.78 rows=1 width=16) (actual time=47349.291..47349.291 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2745847.76..2745847.77 rows=1 width=16) (actual time=47349.249..47349.252 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17288.82 rows=1718082 width=0) (actual time=85.575..85.575 rows=7667200 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17445.91 rows=1733791 width=0) (actual time=94.911..94.911 rows=7636480 loops=1)
Q13,4.3,Sort  (cost=2672500.80..2672501.30 rows=200 width=8) (actual time=89944.493..89944.495 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2672491.16..2672493.16 rows=200 width=8) (actual time=89944.425..89944.435 rows=46 loops=1)
Q17,3.6,->  Nested Loop  (cost=220.34..368846.26 rows=60782 width=4) (actual time=5.883..1424.241 rows=16511 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.031..0.082 rows=3 loops=6073)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..730434.57 rows=97334743 width=0) (actual time=386.055..386.055 rows=32322560 loops=1)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..167353.72 rows=22299429 width=0) (actual time=85.290..85.290 rows=7682560 loops=1)
Q22,2.3,Sort  (cost=2458826.23..2458826.23 rows=3 width=20) (actual time=33840.256..33840.257 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2300218.80..2300218.84 rows=3 width=20) (actual time=33840.207..33840.209 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.046..0.065 rows=2 loops=19248)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=13.073..13.073 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1223628.97..1228062.78 rows=1773523 width=40) (actual time=29946.893..30447.484 rows=3558251 loops=1)
Q16,2.0,->  Hash Join  (cost=163950.57..1039553.37 rows=1773523 width=40) (actual time=3813.686..18417.536 rows=3558251 loops=1)
Q12,2.0,Sort  (cost=9510182.30..9510182.30 rows=1 width=27) (actual time=95385.592..95385.593 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9510182.28..9510182.29 rows=1 width=27) (actual time=95385.555..95385.555 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=829202.61..6542983.12 rows=1706576 width=12) (actual time=18708.967..84398.955 rows=3443616 loops=1)
Q10,2.0,->  Hash Join  (cost=1036290.17..6803401.18 rows=1706576 width=175) (actual time=23354.029..92805.618 rows=3443616 loops=1)
Q10,2.0,->  Hash Join  (cost=1036288.61..6779934.20 rows=1706576 width=153) (actual time=23353.996..91547.510 rows=3443616 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.466..9227.521 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5517781.81 rows=60780048 width=8) (actual time=0.017..59072.248 rows=113799809 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7373266.02 rows=1183866 width=38) (actual time=122.071..112918.862 rows=2193428 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5777211.14 rows=2431202 width=34) (actual time=121.934..83471.334 rows=4536641 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..554499.48 rows=55407548 width=0) (actual time=386.389..386.389 rows=32386560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.060 rows=4 loops=19248)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.051 rows=4 loops=19248)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19248)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.431..0.504 rows=3 loops=65348)
Q1,1.5,Sort  (cost=12619124.87..12619124.89 rows=6 width=20) (actual time=273610.024..273610.024 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12619124.69..12619124.79 rows=6 width=20) (actual time=273609.973..273609.976 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.957..12.957 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6846065.58..6863131.34 rows=1706576 width=175) (actual time=98941.966..99629.889 rows=1150052 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8609.66 rows=419065 width=0) (actual time=2172.632..2172.632 rows=572455 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8714.42..125550.88 rows=419065 width=24) (actual time=2208.776..3498.973 rows=572455 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=47.324..33758.186 rows=178184 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=33888.238..33888.238 rows=178184 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..196567.00 rows=378373 width=4) (actual time=0.011..2546.579 rows=326090 loops=1)
Q9,1.1,->  Hash Join  (cost=201296.66..1059299.15 rows=1513486 width=16) (actual time=2668.040..15804.785 rows=1304360 loops=1)
Q9,1.1,->  Hash  (cost=196567.00..196567.00 rows=378373 width=4) (actual time=2665.936..2665.936 rows=326090 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..276898.56 rows=27647456 width=0) (actual time=384.815..384.815 rows=32386560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.014..7523.657 rows=24000000 loops=1)
Q9,1.0,GroupAggregate  (cost=3967618.22..3967623.85 rows=161 width=46) (actual time=509797.595..522169.534 rows=175 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.693..9687.284 rows=901465 loops=1)
Q8,1.0,->  Nested Loop  (cost=1181.90..5117191.21 rows=352102 width=20) (actual time=25.238..42778.202 rows=367659 loops=1)
Q8,1.0,->  Nested Loop  (cost=1181.33..4400310.74 rows=1156908 width=16) (actual time=25.094..17381.746 rows=1210375 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..112.66 rows=32 width=20) (actual time=0.028..0.409 rows=30 loops=40319)
Q8,1.0,->  Hash Join  (cost=14470.90..5135321.61 rows=352102 width=20) (actual time=214.226..43257.720 rows=367659 loops=1)
Q8,1.0,->  Hash Join  (cost=127427.09..5251622.76 rows=70420 width=38) (actual time=10259.971..53636.740 rows=73783 loops=1)
Q8,1.0,->  Hash Join  (cost=127425.53..5250300.82 rows=70420 width=16) (actual time=10259.923..53516.610 rows=73783 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=10042.363..10042.363 rows=901465 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1171.21 rows=38220 width=0) (actual time=16.303..16.303 rows=40319 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1180.76..82126.15 rows=38220 width=4) (actual time=25.022..455.439 rows=40319 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.588..1897.546 rows=180293 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=8) (actual time=0.038..9325.660 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=579556.77..4901304.34 rows=4432604 width=42) (actual time=533.239..86641.718 rows=4392332 loops=1)
Q7,1.0,->  Hash Join  (cost=2233930.12..6596936.71 rows=184467 width=64) (actual time=26781.011..114989.908 rows=175024 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1608788.79 rows=3646765 width=30) (actual time=1840.364..24889.793 rows=3595118 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.042..1718.929 rows=360177 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.040..136.266 rows=24067 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=1838.310..1838.310 rows=360177 loops=1)
Q7,1.0,->  Hash  (cost=1608788.79..1608788.79 rows=3646765 width=30) (actual time=26232.666..26232.666 rows=3595118 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=144.114..144.114 rows=24067 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=568351.37..4637994.59 rows=55407548 width=20) (actual time=388.983..72426.501 rows=54686426 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=277505.98..4138103.74 rows=2429694 width=8) (actual time=387.545..75756.585 rows=2383394 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..1449184.05 rows=6879130 width=8) (actual time=0.042..14500.461 rows=6831909 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.714..7836.900 rows=899950 loops=1)
Q5,1.0,->  Nested Loop  (cost=112966.68..7145979.92 rows=5503332 width=46) (actual time=8204.416..52779.669 rows=5458192 loops=1)
Q5,1.0,->  Hash Join  (cost=127005.68..7203495.28 rows=220137 width=34) (actual time=8402.371..54983.448 rows=218554 loops=1)
Q5,1.0,->  Hash Join  (cost=112966.11..1601705.16 rows=1375826 width=38) (actual time=8204.341..25951.638 rows=1364442 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=8200.853..8200.853 rows=899950 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=12.679..1532.084 rows=179990 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17718.34..810171.57 rows=1718082 width=20) (actual time=86.099..19359.301 rows=1722450 loops=1)
Q3,1.0,->  Hash Join  (cost=322227.52..1497519.46 rows=4472522 width=12) (actual time=2045.783..30033.615 rows=4407565 loops=1)
Q3,1.0,->  Hash  (cost=1497519.46..1497519.46 rows=4472522 width=12) (actual time=31856.909..31856.909 rows=4407565 loops=1)
Q3,1.0,->  Hash  (cost=138017.07..138017.07 rows=902550 width=4) (actual time=1954.840..1954.840 rows=898061 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20673.56 rows=902550 width=0) (actual time=205.894..205.894 rows=898061 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=172928.58..1219872.44 rows=22299429 width=16) (actual time=85.824..19217.745 rows=22051796 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=754768.26..5203583.55 rows=97334743 width=12) (actual time=388.635..65231.879 rows=96288144 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20899.19..138017.07 rows=902550 width=4) (actual time=239.971..1668.982 rows=898061 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1221936.37 rows=45449537 width=4) (actual time=0.028..11355.477 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1221936.37..1221936.37 rows=45449537 width=4) (actual time=22565.892..22565.892 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1976308.01..2298879.05 rows=178633 width=20) (actual time=24933.537..33764.145 rows=190649 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19607.79 rows=1143571 width=0) (actual time=305.148..305.148 rows=1144764 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19893.68..155748.42 rows=1143571 width=4) (actual time=339.296..1738.878 rows=1144764 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.720..117.896 rows=11969 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=121.826..121.826 rows=11969 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.707..115.833 rows=11969 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=23785.190..25326.362 rows=4809912 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.015..5998.712 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.737..429.642 rows=60128 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23917 width=30) (actual time=0.054..3574.599 rows=24067 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=463.530..16541.295 rows=4810240 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=463.254..463.254 rows=60128 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.664..83.344 rows=12026 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=33982.538..33982.903 rows=5441 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.701..81.697 rows=11959 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=33890.241..33977.176 rows=5441 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=31.816..31.816 rows=65348 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.682..79.949 rows=11959 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=46.328..748.467 rows=65348 loops=1)
Q19,1.0,->  Nested Loop  (cost=38394.80..1901575.98 rows=3479 width=8) (actual time=107.151..7128.710 rows=3348 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.898..12.898 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..854.11 rows=24390 width=0) (actual time=11.275..11.275 rows=24419 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.23 rows=23999 width=0) (actual time=10.098..10.098 rows=23794 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.27 rows=23902 width=0) (actual time=10.928..10.928 rows=23750 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38394.23..79709.08 rows=14373 width=30) (actual time=103.842..820.085 rows=14344 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1213470.52 rows=45134652 width=16) (actual time=0.006..8797.588 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5011917.50 rows=180538550 width=8) (actual time=0.007..32890.789 rows=180178836 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5011917.50 rows=180538550 width=8) (actual time=0.042..45362.636 rows=180178836 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.042..0.067 rows=30 loops=6073)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.042..0.067 rows=30 loops=6073)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..209.04 rows=6048 width=0) (actual time=3.638..3.638 rows=6073 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.55..20007.94 rows=6048 width=4) (actual time=5.269..459.009 rows=6073 loops=1)
Q16,1.0,Sort  (cost=1248120.03..1248189.31 rows=27712 width=40) (actual time=32282.877..32286.675 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152857.25..152857.25 rows=886765 width=40) (actual time=3807.235..3807.235 rows=890010 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1223628.97..1246075.13 rows=27712 width=40) (actual time=29946.987..32226.805 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7406.75..152857.25 rows=886765 width=40) (actual time=100.843..3371.724 rows=890010 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5902812.50 rows=6729898 width=12) (actual time=0.010..54904.400 rows=6724511 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5902812.50 rows=6729898 width=12) (actual time=0.007..54818.207 rows=6724511 loops=1)
Q14,1.0,->  Hash Join  (cost=280885.39..3453801.67 rows=2331160 width=29) (actual time=4899.929..79539.494 rows=2317966 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24318.39..3150611.47 rows=2331160 width=12) (actual time=383.651..72401.865 rows=2317966 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45038983 width=8) (actual time=0.031..22409.688 rows=44514127 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2334796.24 rows=45038983 width=8) (actual time=3328.185..55416.534 rows=46014210 loops=1)
Q12,1.0,->  Sort  (cost=7412988.19..7415174.57 rows=874552 width=15) (actual time=73428.528..73555.077 rows=935688 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7326677.85 rows=874552 width=15) (actual time=0.071..72773.076 rows=935688 loops=1)
Q12,1.0,->  Merge Join  (cost=7412988.78..9494877.62 rows=874552 width=27) (actual time=73428.561..94506.678 rows=935688 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1955050.74 rows=45494545 width=20) (actual time=0.007..15848.400 rows=45044940 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.026..5543.963 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.015..6275.009 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.816..126.917 rows=11886 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.735..79.961 rows=11886 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=83.189..9863.151 rows=950880 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=131.555..11342.043 rows=950880 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=83.016..83.016 rows=11886 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=131.458..131.458 rows=11886 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.692..77.985 rows=11886 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.793..124.609 rows=11886 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5485043.45 rows=178352031 width=20) (actual time=0.014..58421.766 rows=177358977 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5474140.88 rows=44514776 width=12) (actual time=0.024..54564.145 rows=44462491 loops=1)
Q10,1.0,->  Hash  (cost=807530.22..807530.22 rows=1733791 width=8) (actual time=18699.998..18699.998 rows=1721091 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17879.35..807530.22 rows=1733791 width=8) (actual time=95.465..18029.631 rows=1721091 loops=1)
