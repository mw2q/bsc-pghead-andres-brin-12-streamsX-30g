BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'JORDAN' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'MIDDLE EAST'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL PLATED NICKEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=5525578.28..5525580.11 rows=733 width=38) (actual time=56048.293..56048.293 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=6173308 read=2098082 dirtied=2001 written=33029
   ->  HashAggregate  (cost=5525530.57..5525543.40 rows=733 width=38) (actual time=56048.252..56048.252 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=6173305 read=2098082 dirtied=2001 written=33029
         ->  Hash Join  (cost=114208.65..5524047.79 rows=74139 width=38) (actual time=7318.955..55913.855 rows=73792 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=6173305 read=2098082 dirtied=2001 written=33029
               ->  Nested Loop  (cost=114207.08..5522656.12 rows=74139 width=16) (actual time=7318.909..55781.970 rows=73792 loops=1)
                     Buffers: shared hit=6173301 read=2098082 dirtied=2001 written=33029
                     ->  Hash Join  (cost=114206.66..5489096.11 rows=74139 width=16) (actual time=7318.887..55120.193 rows=73792 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=5885530 read=2090295 dirtied=2001 written=32884
                           ->  Nested Loop  (cost=1252.03..5374009.97 rows=370697 width=20) (actual time=21.557..47540.162 rows=366373 loops=1)
                                 Buffers: shared hit=5402156 read=2044471 dirtied=2001 written=32884
                                 ->  Nested Loop  (cost=1251.47..4619296.55 rows=1218006 width=16) (actual time=21.010..20312.580 rows=1206459 loops=1)
                                       Buffers: shared hit=329024 read=1078693 dirtied=2001 written=17446
                                       ->  Bitmap Heap Scan on part  (cost=1250.90..85039.76 rows=40560 width=4) (actual time=20.954..497.086 rows=40271 loops=1)
                                             Recheck Cond: ((p_type)::text = 'SMALL PLATED NICKEL'::text)
                                             Heap Blocks: exact=34312
                                             Buffers: shared hit=6129 read=28386 written=373
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1240.76 rows=40560 width=0) (actual time=13.177..13.177 rows=40271 loops=1)
                                                   Index Cond: ((p_type)::text = 'SMALL PLATED NICKEL'::text)
                                                   Buffers: shared hit=1 read=202
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.47 rows=32 width=20) (actual time=0.029..0.480 rows=30 loops=40271)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=322895 read=1050307 dirtied=2001 written=17073
                                 ->  Index Scan using pk_orders on orders  (cost=0.56..0.61 rows=1 width=12) (actual time=0.022..0.022 rows=0 loops=1206459)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=5073132 read=965778 written=15438
                           ->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=7288.570..7288.570 rows=899828 loops=1)
                                 Buckets: 1048576  Batches: 1  Memory Usage: 39827kB
                                 Buffers: shared hit=483374 read=45824
                                 ->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.368..6974.693 rows=899828 loops=1)
                                       Buffers: shared hit=483374 read=45824
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.033..0.064 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.011 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                         Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.302..1364.575 rows=179966 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Rows Removed by Index Recheck: 4320034
                                             Heap Blocks: lossy=529180
                                             Buffers: shared hit=483372 read=45824
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.234..11.234 rows=1058560 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=12 read=4
                     ->  Index Scan using pk_supplier on supplier  (cost=0.42..0.44 rows=1 width=8) (actual time=0.007..0.008 rows=1 loops=73792)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=287771 read=7787 written=145
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 5.769 ms
 Execution time: 56049.182 ms
(69 rows)

COMMIT;
COMMIT
