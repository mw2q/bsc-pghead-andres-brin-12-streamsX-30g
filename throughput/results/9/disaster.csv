Q21,2136423.0,->  Nested Loop Semi Join  (cost=7193.26..10041073.50 rows=1 width=34) (actual time=122.831..132214.317 rows=2136423 loops=1)
Q3,944128.3,->  Sort  (cost=7966602.14..7990205.35 rows=9441283 width=20) (actual time=124171.645..124171.647 rows=10 loops=1)
Q18,905389.9,->  GroupAggregate  (cost=36196971.23..38686793.62 rows=90538996 width=39) (actual time=255027.669..255028.000 rows=100 loops=1)
Q18,129156.9,->  Sort  (cost=36196971.23..36423318.72 rows=90538996 width=39) (actual time=255027.658..255027.690 rows=701 loops=1)
Q21,119723.0,->  Nested Loop Anti Join  (cost=7193.83..10041076.63 rows=1 width=26) (actual time=123.000..141257.146 rows=119723 loops=1)
Q18,96318.3,->  Hash Join  (cost=6287970.83..8113397.98 rows=22634810 width=39) (actual time=147321.400..165586.755 rows=235 loops=1)
Q18,96318.3,->  Hash Join  (cost=6080884.83..7510202.81 rows=22634810 width=20) (actual time=143822.189..162086.810 rows=235 loops=1)
Q18,96318.3,->  Hash  (cost=8113397.98..8113397.98 rows=22634810 width=39) (actual time=165587.569..165587.569 rows=235 loops=1)
Q10,84534.6,->  Sort  (cost=6925974.15..6930200.88 rows=1690693 width=175) (actual time=103418.748..103418.751 rows=20 loops=1)
Q9,70790.1,->  Sort  (cost=3549998.77..3549999.11 rows=138 width=46) (actual time=503817.338..509039.575 rows=9769035 loops=1)
Q9,70790.1,->  Nested Loop  (cost=200622.56..3549989.71 rows=138 width=24) (actual time=3405.619..418208.353 rows=9769035 loops=1)
Q9,70790.1,->  Nested Loop  (cost=200621.99..3549904.89 rows=138 width=24) (actual time=3405.574..214940.196 rows=9769035 loops=1)
Q9,70790.1,->  Nested Loop  (cost=200621.57..3549842.42 rows=138 width=28) (actual time=3405.555..173372.124 rows=9769035 loops=1)
Q9,70790.1,->  Hash Join  (cost=200624.12..3549993.86 rows=138 width=46) (actual time=3405.673..430072.170 rows=9769035 loops=1)
Q18,55038.9,->  Hash Join  (cost=8573168.11..21755645.23 rows=90538996 width=39) (actual time=167120.299..255025.313 rows=1645 loops=1)
Q18,18067.1,->  Hash  (cost=6027812.71..6027812.71 rows=4245770 width=4) (actual time=143756.902..143756.902 rows=235 loops=1)
Q18,18067.1,->  HashAggregate  (cost=5932282.88..5985355.01 rows=4245770 width=8) (actual time=123547.198..143756.379 rows=235 loops=1)
Q2,14411.0,->  Merge Join  (cost=1432056.81..3095778.89 rows=1 width=190) (actual time=22487.208..29902.493 rows=14411 loops=1)
Q21,12092.0,->  HashAggregate  (cost=10041076.64..10041076.65 rows=1 width=26) (actual time=141468.382..141472.477 rows=12092 loops=1)
Q15,11190.0,->  Subquery Scan on revenue9  (cost=6068612.80..6068864.57 rows=11190 width=12) (actual time=126386.988..126410.449 rows=1 loops=1)
Q15,11190.0,->  Sort  (cost=6069617.10..6069645.07 rows=11190 width=12) (actual time=126410.469..126410.469 rows=1 loops=1)
Q15,11190.0,Merge Join  (cost=12087640.84..12102903.62 rows=11190 width=79) (actual time=126527.257..126527.260 rows=1 loops=1)
Q15,11190.0,->  HashAggregate  (cost=6068612.80..6068752.67 rows=11190 width=12) (actual time=126386.986..126410.445 rows=1 loops=1)
Q7,766.7,Sort  (cost=6599927.34..6599935.01 rows=3067 width=64) (actual time=122095.107..122095.108 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6599703.72..6599749.72 rows=3067 width=64) (actual time=122095.037..122095.041 rows=4 loops=1)
Q8,366.5,Sort  (cost=5525578.28..5525580.11 rows=733 width=38) (actual time=56048.293..56048.293 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5525530.57..5525543.40 rows=733 width=38) (actual time=56048.252..56048.252 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10041076.66..10041076.66 rows=1 width=26) (actual time=141475.388..141475.394 rows=100 loops=1)
Q21,100.0,Limit  (cost=10041076.66..10041076.66 rows=1 width=26) (actual time=141475.390..141475.407 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3095778.90..3095778.90 rows=1 width=190) (actual time=29917.544..29917.558 rows=100 loops=1)
Q2,100.0,Limit  (cost=3095778.90..3095778.90 rows=1 width=190) (actual time=29917.546..29917.569 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2217027)
Q11,34.6,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21249.602..21252.967 rows=27696 loops=1)
Q11,34.6,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=20953.954..21233.113 rows=27696 loops=1)
Q3,27.6,->  HashAggregate  (cost=7668166.58..7762579.41 rows=9441283 width=20) (actual time=123932.801..124099.308 rows=341176 loops=1)
Q15,26.8,->  HashAggregate  (cost=6017771.54..6017883.44 rows=11190 width=12) (actual time=62794.481..62928.542 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.71 rows=14 width=4) (actual time=0.015..0.015 rows=1 loops=1721504)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2136423)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23693.40 rows=2326940 width=0) (actual time=384.449..384.449 rows=32386560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.013..0.015 rows=4 loops=1367594)
Q3,10.4,->  Hash Join  (cost=2290781.24..7526547.33 rows=9441283 width=20) (actual time=34266.284..122970.156 rows=900983 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7148.91 rows=950520 width=0) (actual time=101.590..101.590 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=17968.29..2765013.47 rows=162771 width=16) (actual time=91.447..46585.754 rows=1578351 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.118 rows=8 loops=1302356)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.234..11.234 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.225..11.225 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.669..0.669 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.704..0.704 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.659..0.659 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.688..0.688 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.662..0.662 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.035..1.648 rows=155 loops=1)
Q5,5.0,Sort  (cost=6787257.12..6787257.18 rows=25 width=34) (actual time=51752.613..51752.613 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6787256.29..6787256.54 rows=25 width=34) (actual time=51752.567..51752.568 rows=5 loops=1)
Q4,5.0,Sort  (cost=2765827.34..2765827.35 rows=1 width=16) (actual time=47548.344..47548.345 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2765827.32..2765827.33 rows=1 width=16) (actual time=47548.299..47548.299 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17532.11 rows=1742411 width=0) (actual time=90.886..90.886 rows=7674880 loops=1)
Q13,4.4,Sort  (cost=2648994.36..2648994.86 rows=200 width=8) (actual time=105488.638..105488.641 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=2648984.71..2648986.71 rows=200 width=8) (actual time=105488.570..105488.579 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17283.33 rows=1717533 width=0) (actual time=85.355..85.355 rows=7659520 loops=1)
Q17,3.8,->  Nested Loop  (cost=225.05..372987.90 rows=61353 width=4) (actual time=4.391..703.259 rows=15992 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.56 rows=11 width=12) (actual time=0.020..0.049 rows=3 loops=5969)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..725981.97 rows=96741063 width=0) (actual time=385.611..385.611 rows=32066560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..165805.97 rows=22093063 width=0) (actual time=84.189..84.189 rows=7622400 loops=1)
Q22,2.3,Sort  (cost=2461188.63..2461188.64 rows=3 width=20) (actual time=33385.622..33385.623 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2302454.09..2302454.14 rows=3 width=20) (actual time=33385.573..33385.574 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.048..0.069 rows=2 loops=19540)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=12.944..12.944 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1222285.58..1226696.09 rows=1764205 width=40) (actual time=28879.433..29345.485 rows=3556228 loops=1)
Q16,2.0,->  Hash Join  (cost=163734.52..1039244.13 rows=1764205 width=40) (actual time=3673.125..17628.412 rows=3556228 loops=1)
Q12,2.0,Sort  (cost=9529352.22..9529352.23 rows=1 width=27) (actual time=92450.763..92450.763 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9529352.20..9529352.21 rows=1 width=27) (actual time=92450.724..92450.724 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=7192.13..5731575.22 rows=2411973 width=34) (actual time=122.682..87565.487 rows=4591947 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.742..9037.872 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5474140.88 rows=60299330 width=8) (actual time=0.016..59294.872 rows=113911850 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7314851.96 rows=1174502 width=38) (actual time=122.758..117150.648 rows=2217027 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..554499.48 rows=55407548 width=0) (actual time=383.234..383.234 rows=32386560 loops=1)
Q10,1.6,->  Hash Join  (cost=830866.87..6561889.44 rows=1690693 width=12) (actual time=26032.102..89189.650 rows=2823504 loops=1)
Q10,1.6,->  Hash Join  (cost=1037954.43..6821811.16 rows=1690693 width=175) (actual time=31195.880..97427.414 rows=2823504 loops=1)
Q10,1.6,->  Hash Join  (cost=1037952.87..6798562.57 rows=1690693 width=153) (actual time=31195.850..96379.739 rows=2823504 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.034..0.064 rows=4 loops=19540)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.032..0.054 rows=4 loops=19540)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19540)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.54 rows=2 width=8) (actual time=0.415..0.485 rows=3 loops=64755)
Q1,1.5,Sort  (cost=12705089.59..12705089.61 rows=6 width=20) (actual time=276473.103..276473.103 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12705089.41..12705089.52 rows=6 width=20) (actual time=276473.051..276473.054 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=6864078.48..6880985.41 rows=1690693 width=175) (actual time=102381.682..103025.900 rows=1068102 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..82174.66 rows=10942222 width=0) (actual time=85.556..85.556 rows=7697920 loops=1)
Q20,1.4,->  Nested Loop  (cost=2028.00..48961128.10 rows=122011 width=4) (actual time=46.930..32248.969 rows=176265 loops=1)
Q20,1.4,->  Hash  (cost=48961128.10..48961128.10 rows=122011 width=4) (actual time=32363.343..32363.343 rows=176265 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.867..12.867 rows=1216000 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8620.02 rows=420100 width=0) (actual time=2242.673..2242.673 rows=572608 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8725.04..125588.67 rows=420100 width=24) (actual time=2277.934..2910.158 rows=572608 loops=1)
Q9,1.2,GroupAggregate  (cost=3549998.77..3550003.60 rows=138 width=46) (actual time=503854.038..515331.836 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..274324.37 rows=27390037 width=0) (actual time=382.359..382.359 rows=32097280 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2012.55 rows=53999 width=0) (actual time=31.731..31.731 rows=64755 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.012..7421.538 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=324320 width=4) (actual time=0.015..3271.300 rows=325589 loops=1)
Q9,1.0,->  Hash Join  (cost=200621.00..1056461.38 rows=1297275 width=16) (actual time=3405.459..16420.983 rows=1302356 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=324320 width=4) (actual time=3402.900..3402.900 rows=325589 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.368..6974.693 rows=899828 loops=1)
Q8,1.0,->  Nested Loop  (cost=1252.03..5374009.97 rows=370697 width=20) (actual time=21.557..47540.162 rows=366373 loops=1)
Q8,1.0,->  Nested Loop  (cost=1251.47..4619296.55 rows=1218006 width=16) (actual time=21.010..20312.580 rows=1206459 loops=1)
Q8,1.0,->  Nested Loop  (cost=114207.08..5522656.12 rows=74139 width=16) (actual time=7318.909..55781.970 rows=73792 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.47 rows=32 width=20) (actual time=0.029..0.480 rows=30 loops=40271)
Q8,1.0,->  Hash Join  (cost=114208.65..5524047.79 rows=74139 width=38) (actual time=7318.955..55913.855 rows=73792 loops=1)
Q8,1.0,->  Hash Join  (cost=114206.66..5489096.11 rows=74139 width=16) (actual time=7318.887..55120.193 rows=73792 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=7288.570..7288.570 rows=899828 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1240.76 rows=40560 width=0) (actual time=13.177..13.177 rows=40271 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1250.90..85039.76 rows=40560 width=4) (actual time=20.954..497.086 rows=40271 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.302..1364.575 rows=179966 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=8) (actual time=0.012..9283.124 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=579556.77..4901304.34 rows=4432604 width=42) (actual time=530.357..89137.555 rows=4332792 loops=1)
Q7,1.0,->  Hash Join  (cost=2233930.12..6596936.71 rows=184467 width=64) (actual time=30620.849..121818.602 rows=172829 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1608788.79 rows=3646765 width=30) (actual time=2598.154..28416.021 rows=3605632 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.037..2456.944 rows=359370 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.043..136.872 rows=23759 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2595.651..2595.651 rows=359370 loops=1)
Q7,1.0,->  Hash  (cost=1608788.79..1608788.79 rows=3646765 width=30) (actual time=30070.501..30070.501 rows=3605632 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=144.482..144.482 rows=23759 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=568351.37..4637994.59 rows=55407548 width=20) (actual time=385.743..73152.914 rows=54741244 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=274920.37..4100914.20 rows=2383992 width=8) (actual time=384.958..79346.240 rows=2388986 loops=1)
Q5,1.0,->  Nested Loop  (cost=196863.15..6727485.64 rows=5509828 width=46) (actual time=6951.964..49057.390 rows=5471867 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.414..6491.370 rows=899828 loops=1)
Q5,1.0,->  Hash Join  (cost=210902.15..6785052.32 rows=220397 width=34) (actual time=7161.584..51489.602 rows=218661 loops=1)
Q5,1.0,->  Hash Join  (cost=196862.58..1170318.39 rows=1377443 width=38) (actual time=6951.891..26755.732 rows=1367594 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6861.259..6861.259 rows=899828 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=83896.47..1017750.80 rows=6887213 width=8) (actual time=86.080..16194.816 rows=6829345 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.295..1265.567 rows=179966 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17967.72..811544.88 rows=1742411 width=20) (actual time=91.420..18820.761 rows=1721504 loops=1)
Q3,1.0,->  Hash Join  (cost=320368.81..1485553.49 rows=4404841 width=12) (actual time=2150.927..31631.147 rows=4406660 loops=1)
Q3,1.0,->  Hash  (cost=1485553.49..1485553.49 rows=4404841 width=12) (actual time=33824.258..33824.258 rows=4406660 loops=1)
Q3,1.0,->  Hash  (cost=137824.63..137824.63 rows=897195 width=4) (actual time=2059.404..2059.404 rows=900602 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20549.40 rows=897195 width=0) (actual time=223.856..223.856 rows=900602 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171329.24..1209616.53 rows=22093063 width=16) (actual time=84.706..18635.795 rows=22036076 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=750167.24..5165962.53 rows=96741063 width=12) (actual time=388.105..70730.558 rows=96537715 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20773.69..137824.63 rows=897195 width=4) (actual time=261.884..1724.914 rows=900602 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1223146.45 rows=45494545 width=4) (actual time=0.031..11566.190 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1223146.45..1223146.45 rows=45494545 width=4) (actual time=22903.433..22903.433 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1978267.31..2301111.04 rows=179074 width=20) (actual time=25334.805..33317.981 rows=190572 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19653.00 rows=1146395 width=0) (actual time=300.088..300.088 rows=1145084 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19939.60..155868.47 rows=1146395 width=4) (actual time=333.039..1817.864 rows=1145084 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.740..118.538 rows=12092 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=122.561..122.561 rows=12092 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.726..116.606 rows=12092 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=22486.613..24036.079 rows=4810011 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.003..6115.397 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.872..485.821 rows=60128 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23731 width=30) (actual time=0.124..3668.485 rows=24060 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=522.706..15328.858 rows=4810240 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=521.493..521.493 rows=60128 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.696..94.458 rows=12026 loops=5)
Q20,1.0,Sort  (cost=48970135.02..48970147.22 rows=4880 width=51) (actual time=32483.348..32483.681 rows=5366 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.688..105.987 rows=12038 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=48962758.24..48969836.06 rows=4880 width=51) (actual time=32364.520..32475.516 rows=5366 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.671..103.537 rows=12038 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2027.56..99529.32 rows=60059 width=4) (actual time=46.147..750.469 rows=64755 loops=1)
Q19,1.0,->  Nested Loop  (cost=38378.41..1899061.70 rows=3464 width=8) (actual time=105.567..7737.605 rows=3386 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.854..12.854 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..835.39 rows=24114 width=0) (actual time=11.433..11.433 rows=24109 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.99 rows=24077 width=0) (actual time=10.285..10.285 rows=24019 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.87 rows=24062 width=0) (actual time=10.823..10.823 rows=23829 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38377.84..79659.61 rows=14357 width=30) (actual time=105.453..1150.467 rows=14482 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1217099.20 rows=45269620 width=16) (actual time=0.016..8525.115 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5026892.92 rows=181077992 width=8) (actual time=0.004..33043.772 rows=180178654 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5026892.92 rows=181077992 width=8) (actual time=0.040..46524.189 rows=180178654 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.044 rows=30 loops=5969)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.025..0.044 rows=30 loops=5969)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..213.73 rows=6117 width=0) (actual time=2.658..2.658 rows=5969 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=215.26..20209.06 rows=6117 width=4) (actual time=3.779..97.741 rows=5969 loops=1)
Q16,1.0,Sort  (cost=1246646.88..1246715.79 rows=27566 width=40) (actual time=31167.657..31171.082 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152699.43..152699.43 rows=882106 width=40) (actual time=3667.918..3667.918 rows=889512 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1222285.58..1244613.80 rows=27566 width=40) (actual time=28879.522..31112.412 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7369.43..152699.43 rows=882106 width=40) (actual time=101.697..3295.173 rows=889512 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5949983.19 rows=6778835 width=12) (actual time=0.044..55624.562 rows=6739454 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5949983.19 rows=6778835 width=12) (actual time=0.046..56817.335 rows=6739454 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.042..88.054 rows=282993 loops=1)
Q14,1.0,->  Hash Join  (cost=280842.14..3475979.98 rows=2326940 width=29) (actual time=5393.709..71655.666 rows=2244862 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24275.14..3172874.18 rows=2326940 width=12) (actual time=387.059..64560.346 rows=2244862 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1324984.54 rows=44640630 width=8) (actual time=0.019..21505.395 rows=44558431 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2313281.56 rows=44640630 width=8) (actual time=2399.713..61376.723 rows=46058507 loops=1)
Q12,1.0,->  Sort  (cost=7427179.32..7429358.28 rows=871584 width=15) (actual time=70914.757..71046.531 rows=936862 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7341183.26 rows=871584 width=15) (actual time=0.136..70327.713 rows=936862 loops=1)
Q12,1.0,->  Merge Join  (cost=7427179.91..9514099.48 rows=871584 width=27) (actual time=70914.782..91565.001 rows=936862 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1959901.01 rows=45584563 width=20) (actual time=0.007..15411.211 rows=44999997 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.017..5345.432 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.016..5538.638 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.734..117.604 rows=12036 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.724..76.181 rows=12036 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=79.466..9826.396 rows=962880 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=121.334..10098.733 rows=962880 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=79.330..79.330 rows=12036 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=121.227..121.227 rows=12036 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.679..74.245 rows=12036 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.708..115.640 rows=12036 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.25 rows=179955254 width=20) (actual time=0.015..59165.309 rows=178225783 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5490861.90 rows=44650748 width=12) (actual time=0.027..51617.827 rows=44419194 loops=1)
Q10,1.0,->  Hash  (cost=809397.71..809397.71 rows=1717533 width=8) (actual time=26025.862..26025.862 rows=1685916 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17712.71..809397.71 rows=1717533 width=8) (actual time=85.966..25208.228 rows=1685916 loops=1)
