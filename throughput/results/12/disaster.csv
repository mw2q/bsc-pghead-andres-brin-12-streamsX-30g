Q21,2128534.0,->  Nested Loop Semi Join  (cost=7193.26..10121482.24 rows=1 width=34) (actual time=117.258..130113.035 rows=2128534 loops=1)
Q3,953662.1,->  Sort  (cost=8062955.36..8086796.91 rows=9536621 width=20) (actual time=106764.878..106764.881 rows=10 loops=1)
Q18,904489.9,->  GroupAggregate  (cost=36160738.85..38648086.21 rows=90448995 width=39) (actual time=261386.851..261387.176 rows=100 loops=1)
Q18,129028.5,->  Sort  (cost=36160738.85..36386861.34 rows=90448995 width=39) (actual time=261386.841..261386.881 rows=701 loops=1)
Q21,119840.0,->  Nested Loop Anti Join  (cost=7193.83..10121485.38 rows=1 width=26) (actual time=118.124..138995.860 rows=119840 loops=1)
Q18,113061.6,->  Hash Join  (cost=6282073.80..8105730.57 rows=22612335 width=39) (actual time=151703.636..170984.587 rows=200 loops=1)
Q18,113061.6,->  Hash Join  (cost=6074987.80..7502928.71 rows=22612335 width=20) (actual time=148017.719..167297.877 rows=200 loops=1)
Q18,113061.6,->  Hash  (cost=8105730.57..8105730.57 rows=22612335 width=39) (actual time=170985.498..170985.498 rows=200 loops=1)
Q10,85636.7,->  Sort  (cost=6960903.72..6965185.56 rows=1712734 width=175) (actual time=98144.486..98144.489 rows=20 loops=1)
Q18,64606.4,->  Hash Join  (cost=8565043.76..21734416.80 rows=90448995 width=39) (actual time=171245.703..261384.952 rows=1400 loops=1)
Q9,63975.9,->  Sort  (cost=3825872.40..3825872.79 rows=153 width=46) (actual time=521922.322..527648.102 rows=9788324 loops=1)
Q9,63975.9,->  Nested Loop  (cost=201073.01..3825862.42 rows=153 width=24) (actual time=2733.983..436778.268 rows=9788324 loops=1)
Q9,63975.9,->  Nested Loop  (cost=201072.44..3825768.38 rows=153 width=24) (actual time=2733.944..223221.042 rows=9788324 loops=1)
Q9,63975.9,->  Nested Loop  (cost=201072.02..3825699.12 rows=153 width=28) (actual time=2733.925..180926.325 rows=9788324 loops=1)
Q9,63975.9,->  Hash Join  (cost=201074.57..3825866.85 rows=153 width=46) (actual time=2734.034..448936.192 rows=9788324 loops=1)
Q18,21228.8,->  Hash  (cost=6021915.67..6021915.67 rows=4245770 width=4) (actual time=147932.652..147932.652 rows=200 loops=1)
Q18,21228.8,->  HashAggregate  (cost=5926385.85..5979457.97 rows=4245770 width=8) (actual time=128695.826..147932.178 rows=200 loops=1)
Q2,14295.0,->  Merge Join  (cost=1432056.81..3115218.29 rows=1 width=190) (actual time=22473.363..29637.750 rows=14295 loops=1)
Q21,12068.0,->  HashAggregate  (cost=10121485.38..10121485.39 rows=1 width=26) (actual time=139190.273..139194.581 rows=12068 loops=1)
Q15,11086.0,->  Subquery Scan on revenue12  (cost=4864119.55..4864368.98 rows=11086 width=12) (actual time=147708.996..147774.876 rows=1 loops=1)
Q15,11086.0,->  Sort  (cost=4865113.77..4865141.48 rows=11086 width=12) (actual time=147774.898..147774.898 rows=1 loops=1)
Q15,11086.0,Merge Join  (cost=9678916.98..9694178.20 rows=11086 width=79) (actual time=147788.837..147788.840 rows=1 loops=1)
Q15,11086.0,->  HashAggregate  (cost=4864119.55..4864258.12 rows=11086 width=12) (actual time=147708.994..147774.871 rows=1 loops=1)
Q7,766.7,Sort  (cost=6542900.84..6542908.51 rows=3067 width=64) (actual time=128301.781..128301.782 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6542677.22..6542723.22 rows=3067 width=64) (actual time=128301.652..128301.662 rows=4 loops=1)
Q8,366.5,Sort  (cost=5576730.18..5576732.01 rows=733 width=38) (actual time=49639.832..49639.832 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5576682.47..5576695.30 rows=733 width=38) (actual time=49639.792..49639.792 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=139197.414..139197.420 rows=100 loops=1)
Q21,100.0,Limit  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=139197.416..139197.433 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3115218.30..3115218.31 rows=1 width=190) (actual time=29652.802..29652.813 rows=100 loops=1)
Q2,100.0,Limit  (cost=3115218.30..3115218.31 rows=1 width=190) (actual time=29652.803..29652.823 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2209340)
Q11,31.9,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21392.169..21395.876 rows=30005 loops=1)
Q11,31.9,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21116.069..21374.076 rows=30005 loops=1)
Q3,28.0,->  HashAggregate  (cost=7761506.20..7856872.41 rows=9536621 width=20) (actual time=106515.514..106696.131 rows=340388 loops=1)
Q15,27.0,->  HashAggregate  (cost=4813553.34..4813664.20 rows=11086 width=12) (actual time=71817.939..71922.880 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.71 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1719694)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2128534)
Q14,14.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23405.72 rows=2298172 width=0) (actual time=387.949..387.949 rows=32386560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.014..0.016 rows=4 loops=1362189)
Q3,10.6,->  Hash Join  (cost=2312532.28..7618456.89 rows=9536621 width=20) (actual time=27453.881..105668.490 rows=899343 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7267.56 rows=966340 width=0) (actual time=100.735..100.735 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=18021.35..2772971.53 rows=162771 width=16) (actual time=86.565..40579.536 rows=1576735 loops=1)
Q15,8.5,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.042..10.469 rows=34927 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.021..0.124 rows=8 loops=1303820)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.233..11.233 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.257..11.257 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.665..0.665 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.700..0.700 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.666..0.666 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.708..0.708 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.671..0.671 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.042..1.469 rows=155 loops=1)
Q5,5.0,Sort  (cost=7227744.90..7227744.96 rows=25 width=34) (actual time=51031.845..51031.845 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7227744.07..7227744.32 rows=25 width=34) (actual time=51031.799..51031.800 rows=5 loops=1)
Q4,5.0,Sort  (cost=2773785.40..2773785.41 rows=1 width=16) (actual time=41505.098..41505.099 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2773785.38..2773785.39 rows=1 width=16) (actual time=41505.053..41505.053 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17583.88 rows=1747588 width=0) (actual time=86.007..86.007 rows=7697920 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17508.23 rows=1740023 width=0) (actual time=85.209..85.209 rows=7697920 loops=1)
Q13,4.3,Sort  (cost=2672500.80..2672501.30 rows=200 width=8) (actual time=105530.348..105530.351 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2672491.16..2672493.16 rows=200 width=8) (actual time=105530.280..105530.292 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.60..364456.49 rows=60048 width=4) (actual time=4.727..705.293 rows=16151 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.050 rows=3 loops=5979)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..739934.65 rows=98601420 width=0) (actual time=385.169..385.169 rows=32386560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..165670.38 rows=22074984 width=0) (actual time=85.211..85.211 rows=7697920 loops=1)
Q22,2.3,Sort  (cost=2452616.82..2452616.82 rows=3 width=20) (actual time=36779.582..36779.582 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2293932.71..2293932.75 rows=3 width=20) (actual time=36779.533..36779.534 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.045..0.064 rows=2 loops=19485)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=13.068..13.068 rows=1216000 loops=1)
Q15,2.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..502254.73 rows=66910764 width=0) (actual time=387.853..387.853 rows=32386560 loops=1)
Q15,2.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..502254.73 rows=66910764 width=0) (actual time=383.519..383.519 rows=32386560 loops=1)
Q12,2.0,Sort  (cost=9470779.05..9470779.05 rows=1 width=27) (actual time=95748.753..95748.753 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9470779.03..9470779.04 rows=1 width=27) (actual time=95748.715..95748.715 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=1226471.91..1230954.48 rows=1793029 width=40) (actual time=30652.668..31167.360 rows=3562916 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.573..9319.126 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164432.42..1040230.28 rows=1793029 width=40) (actual time=4618.442..19069.313 rows=3562916 loops=1)
Q10,1.9,->  Hash Join  (cost=835514.86..6594772.30 rows=1712734 width=12) (actual time=17589.926..82504.844 rows=3402797 loops=1)
Q10,1.9,->  Hash Join  (cost=1042602.43..6855382.80 rows=1712734 width=175) (actual time=22508.095..90894.017 rows=3402797 loops=1)
Q10,1.9,->  Hash Join  (cost=1042600.86..6831831.14 rows=1712734 width=153) (actual time=22508.060..89658.534 rows=3402797 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5517781.81 rows=60780048 width=8) (actual time=0.013..58882.934 rows=113799809 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7373266.02 rows=1183866 width=38) (actual time=117.174..114879.830 rows=2209340 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5777211.14 rows=2431202 width=34) (actual time=117.084..85241.303 rows=4577598 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..549570.08 rows=54914608 width=0) (actual time=458.678..458.678 rows=32097280 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.059 rows=4 loops=19485)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.030..0.049 rows=4 loops=19485)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.023..0.025 rows=4 loops=19485)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.455..0.525 rows=3 loops=65300)
Q1,1.5,Sort  (cost=12525080.16..12525080.17 rows=6 width=20) (actual time=268003.981..268003.982 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12525079.97..12525080.08 rows=6 width=20) (actual time=268003.933..268003.935 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=6898201.15..6915328.49 rows=1712734 width=175) (actual time=96982.504..97729.186 rows=1138806 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=13.140..13.140 rows=1216000 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8617.36 rows=419835 width=0) (actual time=3675.304..3675.304 rows=572497 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8722.32..125578.99 rows=419835 width=24) (actual time=3715.065..4995.877 rows=572497 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=49.573..35216.810 rows=177823 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=35346.406..35346.406 rows=177823 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..196567.00 rows=360356 width=4) (actual time=0.015..2607.492 rows=325955 loops=1)
Q9,1.1,->  Hash Join  (cost=201071.45..1058353.26 rows=1441418 width=16) (actual time=2733.859..16053.355 rows=1303820 loops=1)
Q9,1.1,->  Hash  (cost=196567.00..196567.00 rows=360356 width=4) (actual time=2731.734..2731.734 rows=325955 loops=1)
Q9,1.1,GroupAggregate  (cost=3825872.40..3825877.76 rows=153 width=46) (actual time=521959.793..533938.024 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..275531.43 rows=27510743 width=0) (actual time=391.436..391.436 rows=32225280 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.019..7542.613 rows=24000000 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.446..6300.318 rows=899395 loops=1)
Q8,1.0,->  Nested Loop  (cost=1262.67..5424527.89 rows=376791 width=20) (actual time=24.901..42013.566 rows=365716 loops=1)
Q8,1.0,->  Nested Loop  (cost=1262.10..4657379.39 rows=1238031 width=16) (actual time=24.555..17356.760 rows=1205270 loops=1)
Q8,1.0,->  Nested Loop  (cost=114217.72..5573760.79 rows=75358 width=16) (actual time=6606.957..49387.991 rows=73269 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.46 rows=32 width=20) (actual time=0.028..0.409 rows=30 loops=40181)
Q8,1.0,->  Hash Join  (cost=114219.28..5575175.31 rows=75358 width=38) (actual time=6607.000..49509.374 rows=73269 loops=1)
Q8,1.0,->  Hash Join  (cost=114217.30..5539649.07 rows=75358 width=16) (actual time=6606.944..48850.899 rows=73269 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6578.161..6578.161 rows=899395 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1251.31 rows=40900 width=0) (actual time=15.967..15.967 rows=40181 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1261.53..85450.40 rows=40900 width=4) (actual time=24.496..440.736 rows=40181 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.308..1228.323 rows=179879 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1214680.61 rows=45179661 width=8) (actual time=0.044..9019.747 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=574504.13..4857802.72 rows=4393169 width=42) (actual time=646.383..97824.624 rows=4409287 loops=1)
Q7,1.0,->  Hash Join  (cost=2215744.26..6539934.83 rows=182826 width=64) (actual time=28447.993..128010.595 rows=176885 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1596060.47 rows=3614373 width=30) (actual time=2533.859..26364.903 rows=3607380 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.043..2386.883 rows=359649 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.039..175.136 rows=24171 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2531.469..2531.469 rows=359649 loops=1)
Q7,1.0,->  Hash  (cost=1596060.47..1596060.47 rows=3614373 width=30) (actual time=27783.176..27783.176 rows=3607380 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=185.022..185.022 rows=24171 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=563298.73..4596735.85 rows=54914608 width=20) (actual time=461.206..80407.260 rows=54744728 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=276130.06..4117637.78 rows=2394498 width=8) (actual time=394.053..84492.924 rows=2383973 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..1453489.44 rows=6899568 width=8) (actual time=0.017..14554.936 rows=6825406 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.449..6855.642 rows=899362 loops=1)
Q5,1.0,->  Nested Loop  (cost=112966.68..7167891.39 rows=5519712 width=46) (actual time=7220.376..48503.822 rows=5449191 loops=1)
Q5,1.0,->  Hash Join  (cost=127005.68..7225536.15 rows=220792 width=34) (actual time=7419.687..50765.862 rows=218327 loops=1)
Q5,1.0,->  Hash Join  (cost=112966.11..1606128.08 rows=1379914 width=38) (actual time=7220.283..25158.206 rows=1362189 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=7215.325..7215.325 rows=899362 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.328..1338.745 rows=179872 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=18020.78..813955.60 rows=1747588 width=20) (actual time=86.541..17385.330 rows=1719694 loops=1)
Q3,1.0,->  Hash Join  (cost=320307.78..1492836.16 rows=4408889 width=12) (actual time=1549.452..25548.911 rows=4354200 loops=1)
Q3,1.0,->  Hash  (cost=1492836.16..1492836.16 rows=4408889 width=12) (actual time=27043.019..27043.019 rows=4354200 loops=1)
Q3,1.0,->  Hash  (cost=137884.22..137884.22 rows=898755 width=4) (actual time=1460.379..1460.379 rows=899718 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20589.09 rows=898755 width=0) (actual time=206.117..206.117 rows=899718 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171189.12..1216847.42 rows=22074984 width=16) (actual time=85.728..15921.310 rows=21789338 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=764585.00..5235632.75 rows=98601420 width=12) (actual time=387.711..62883.547 rows=97337820 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20813.78..137884.22 rows=898755 width=4) (actual time=238.459..1212.932 rows=899718 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1218309.28 rows=45314628 width=4) (actual time=0.013..11492.807 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1218309.28..1218309.28 rows=45314628 width=4) (actual time=22203.513..22203.513 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1970475.45..2292590.50 rows=178961 width=20) (actual time=26032.642..36704.541 rows=190443 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19623.54 rows=1145672 width=0) (actual time=324.983..324.983 rows=1145320 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19909.96..155819.85 rows=1145672 width=4) (actual time=368.861..3228.976 rows=1145320 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.736..112.899 rows=12068 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=116.981..116.981 rows=12068 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.720..110.836 rows=12068 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=22472.747..24015.561 rows=4807099 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.011..6112.469 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.725..447.525 rows=60089 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24077 width=30) (actual time=0.195..3524.620 rows=23874 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=482.014..15416.802 rows=4807120 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=481.743..481.743 rows=60089 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.680..86.923 rows=12018 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=35439.910..35440.241 rows=5431 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.708..78.601 rows=12080 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=35348.401..35432.251 rows=5431 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=33.334..33.334 rows=65300 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.690..76.834 rows=12080 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=48.529..813.517 rows=65300 loops=1)
Q19,1.0,->  Nested Loop  (cost=38373.96..1886056.95 rows=3457 width=8) (actual time=105.532..7592.266 rows=3412 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.883..12.883 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.83 rows=24058 width=0) (actual time=10.885..10.885 rows=23853 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.91 rows=23967 width=0) (actual time=10.901..10.901 rows=23973 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..832.23 rows=23800 width=0) (actual time=10.595..10.595 rows=24207 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38373.39..79400.45 rows=14245 width=30) (actual time=105.214..665.518 rows=14488 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1215890.70 rows=45224670 width=16) (actual time=0.020..9204.345 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5021895.90 rows=180897990 width=8) (actual time=0.006..35549.122 rows=180178303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5021895.90 rows=180897990 width=8) (actual time=0.037..45832.871 rows=180178303 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.024..0.044 rows=30 loops=5979)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.024..0.044 rows=30 loops=5979)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.31 rows=5975 width=0) (actual time=2.664..2.664 rows=5979 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.80..19795.30 rows=5975 width=4) (actual time=3.771..96.149 rows=5979 loops=1)
Q16,1.0,Sort  (cost=1251234.56..1251304.60 rows=28017 width=40) (actual time=33012.351..33016.066 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153217.19..153217.19 rows=896518 width=40) (actual time=4613.485..4613.485 rows=891194 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1226471.91..1249164.94 rows=28017 width=40) (actual time=30652.785..32956.592 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7491.69..153217.19 rows=896518 width=40) (actual time=100.863..4194.371 rows=891194 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=503940.27..4746131.73 rows=6742161 width=12) (actual time=386.082..65541.566 rows=6733642 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=503940.27..4746131.73 rows=6742161 width=12) (actual time=390.400..69395.406 rows=6733642 loops=1)
Q14,1.0,->  Hash Join  (cost=280547.27..3463184.73 rows=2298172 width=29) (actual time=5055.688..71320.401 rows=2249532 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=23980.27..3160654.29 rows=2298172 width=12) (actual time=390.536..64139.538 rows=2249532 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45038983 width=8) (actual time=0.033..22612.549 rows=44514127 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2334796.24 rows=45038983 width=8) (actual time=3229.998..63386.033 rows=46014210 loops=1)
Q12,1.0,->  Sort  (cost=7383776.54..7385959.14 rows=873041 width=15) (actual time=74238.994..74383.172 rows=936060 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7297626.21 rows=873041 width=15) (actual time=0.060..73605.870 rows=936060 loops=1)
Q12,1.0,->  Merge Join  (cost=7383777.13..9455500.81 rows=873041 width=27) (actual time=74239.103..94854.297 rows=936060 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1945357.99 rows=45314628 width=20) (actual time=0.007..15352.076 rows=45044991 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.021..5490.974 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.020..5662.513 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.761..117.644 rows=11857 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.724..78.801 rows=11857 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=81.963..9891.965 rows=948560 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=121.262..10192.160 rows=948560 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=81.851..81.851 rows=11857 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=121.161..121.161 rows=11857 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.694..76.982 rows=11857 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.734..115.773 rows=11857 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5452366.41 rows=176817839 width=20) (actual time=0.010..55667.388 rows=176689550 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=44869656 width=12) (actual time=0.028..53167.395 rows=44419115 loops=1)
Q10,1.0,->  Hash  (cost=813764.58..813764.58 rows=1740023 width=8) (actual time=17580.110..17580.110 rows=1701857 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17943.23..813764.58 rows=1740023 width=8) (actual time=85.760..16841.784 rows=1701857 loops=1)
