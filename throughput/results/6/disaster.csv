Q21,2112093.0,->  Nested Loop Semi Join  (cost=7193.26..10121482.24 rows=1 width=34) (actual time=116.804..124679.260 rows=2112093 loops=1)
Q3,945135.7,->  Sort  (cost=7989345.54..8012973.93 rows=9451357 width=20) (actual time=101629.582..101629.583 rows=10 loops=1)
Q18,910802.4,->  GroupAggregate  (cost=36414863.24..38919569.84 rows=91080240 width=39) (actual time=258413.629..258413.970 rows=100 loops=1)
Q18,129929.0,->  Sort  (cost=36414863.24..36642563.84 rows=91080240 width=39) (actual time=258413.619..258413.652 rows=701 loops=1)
Q21,118697.0,->  Nested Loop Anti Join  (cost=7193.83..10121485.38 rows=1 width=26) (actual time=117.208..133579.560 rows=118697 loops=1)
Q18,96482.2,->  Hash Join  (cost=6323434.17..8159495.15 rows=22769806 width=39) (actual time=151091.300..170321.352 rows=236 loops=1)
Q18,96482.2,->  Hash Join  (cost=6116348.17..7553937.54 rows=22769806 width=20) (actual time=147692.343..166921.718 rows=236 loops=1)
Q18,96482.2,->  Hash  (cost=8159495.15..8159495.15 rows=22769806 width=39) (actual time=170322.105..170322.105 rows=236 loops=1)
Q10,83885.6,->  Sort  (cost=6878767.89..6882962.17 rows=1677712 width=175) (actual time=102287.339..102287.343 rows=20 loops=1)
Q9,72538.0,->  Sort  (cost=3498748.50..3498748.83 rows=135 width=46) (actual time=497800.122..503660.488 rows=9792642 loops=1)
Q9,72538.0,->  Nested Loop  (cost=200547.48..3498739.63 rows=135 width=24) (actual time=2893.850..409443.499 rows=9792642 loops=1)
Q9,72538.0,->  Nested Loop  (cost=200546.92..3498656.65 rows=135 width=24) (actual time=2893.794..212626.702 rows=9792642 loops=1)
Q9,72538.0,->  Nested Loop  (cost=200546.49..3498595.54 rows=135 width=28) (actual time=2893.775..170968.526 rows=9792642 loops=1)
Q9,72538.0,->  Hash Join  (cost=200549.04..3498743.72 rows=135 width=46) (actual time=2893.903..421520.652 rows=9792642 loops=1)
Q18,55133.3,->  Hash Join  (cost=8622007.72..21883288.95 rows=91080240 width=39) (actual time=170771.444..258411.516 rows=1652 loops=1)
Q18,17990.5,->  Hash  (cost=6063276.04..6063276.04 rows=4245770 width=4) (actual time=147485.313..147485.313 rows=236 loops=1)
Q18,17990.5,->  HashAggregate  (cost=5967746.21..6020818.34 rows=4245770 width=8) (actual time=127193.163..147484.859 rows=236 loops=1)
Q2,14131.0,->  Merge Join  (cost=1432056.81..3120130.78 rows=1 width=190) (actual time=22447.282..29548.746 rows=14131 loops=1)
Q21,11957.0,->  HashAggregate  (cost=10121485.38..10121485.39 rows=1 width=26) (actual time=133761.728..133765.992 rows=11957 loops=1)
Q15,11331.0,->  Subquery Scan on revenue6  (cost=5382886.77..5383141.72 rows=11331 width=12) (actual time=158044.091..158117.308 rows=1 loops=1)
Q15,11331.0,->  Sort  (cost=5383904.75..5383933.07 rows=11331 width=12) (actual time=158117.331..158117.332 rows=1 loops=1)
Q15,11331.0,Merge Join  (cost=10715872.63..10731137.53 rows=11331 width=79) (actual time=158126.490..158126.492 rows=1 loops=1)
Q15,11331.0,->  HashAggregate  (cost=5382886.77..5383028.41 rows=11331 width=12) (actual time=158044.090..158117.306 rows=1 loops=1)
Q7,766.7,Sort  (cost=6580907.47..6580915.13 rows=3067 width=64) (actual time=119286.161..119286.161 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6580683.84..6580729.85 rows=3067 width=64) (actual time=119286.090..119286.100 rows=4 loops=1)
Q8,366.5,Sort  (cost=5343666.15..5343667.98 rows=733 width=38) (actual time=49184.079..49184.079 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5343618.44..5343631.26 rows=733 width=38) (actual time=49184.035..49184.035 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=133768.598..133768.605 rows=100 loops=1)
Q21,100.0,Limit  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=133768.600..133768.622 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3120130.79..3120130.80 rows=1 width=190) (actual time=29563.655..29563.666 rows=100 loops=1)
Q2,100.0,Limit  (cost=3120130.79..3120130.80 rows=1 width=190) (actual time=29563.657..29563.680 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2192278)
Q11,36.7,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21756.124..21759.355 rows=26089 loops=1)
Q11,36.7,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21473.786..21740.450 rows=26089 loops=1)
Q3,27.7,->  HashAggregate  (cost=7690591.54..7785105.11 rows=9451357 width=20) (actual time=101400.145..101565.605 rows=340020 loops=1)
Q15,26.4,->  HashAggregate  (cost=5331712.51..5331825.82 rows=11331 width=12) (actual time=78178.525..78312.104 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.71 rows=14 width=4) (actual time=0.015..0.015 rows=1 loops=1719029)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2112093)
Q14,13.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..24290.06 rows=2386606 width=0) (actual time=385.175..385.175 rows=32386560 loops=1)
Q15,12.5,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.068..6.772 rows=23950 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.013..0.015 rows=4 loops=1365389)
Q3,10.4,->  Hash Join  (cost=2289754.02..7548821.19 rows=9451357 width=20) (actual time=28618.027..100550.726 rows=900217 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7254.66 rows=964620 width=0) (actual time=100.374..100.374 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=17985.97..2767665.53 rows=162771 width=16) (actual time=86.431..47238.917 rows=1575997 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.020..0.116 rows=8 loops=1304420)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.452..11.452 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.189..11.189 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.667..0.667 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.667..0.667 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.797..0.797 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.728..0.728 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.664..0.664 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.039..1.418 rows=155 loops=1)
Q5,5.0,Sort  (cost=6787257.12..6787257.18 rows=25 width=34) (actual time=51243.589..51243.589 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6787256.29..6787256.54 rows=25 width=34) (actual time=51243.547..51243.548 rows=5 loops=1)
Q4,5.0,Sort  (cost=2768479.41..2768479.41 rows=1 width=16) (actual time=48208.256..48208.257 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2768479.39..2768479.40 rows=1 width=16) (actual time=48208.211..48208.214 rows=5 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17549.37 rows=1744137 width=0) (actual time=85.887..85.887 rows=7682560 loops=1)
Q13,4.4,Sort  (cost=2653644.83..2653645.33 rows=200 width=8) (actual time=95729.123..95729.125 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=2653635.18..2653637.18 rows=200 width=8) (actual time=95729.058..95729.064 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17152.64 rows=1704464 width=0) (actual time=84.458..84.458 rows=7607040 loops=1)
Q17,3.7,->  Nested Loop  (cost=224.99..372655.82 rows=61904 width=4) (actual time=4.431..741.409 rows=16458 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.049 rows=3 loops=6061)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..735881.35 rows=98060980 width=0) (actual time=379.378..379.378 rows=32034560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..162882.06 rows=21703208 width=0) (actual time=84.685..84.685 rows=7614720 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..685363.45 rows=91325260 width=0) (actual time=382.912..382.912 rows=32066560 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..685363.45 rows=91325260 width=0) (actual time=378.654..378.654 rows=32097280 loops=1)
Q22,2.3,Sort  (cost=2462920.73..2462920.73 rows=3 width=20) (actual time=34973.473..34973.474 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2304386.07..2304386.12 rows=3 width=20) (actual time=34973.426..34973.427 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.044..0.063 rows=2 loops=19082)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=13.060..13.060 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9531083.45..9531083.45 rows=1 width=27) (actual time=96225.298..96225.298 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9531083.43..9531083.44 rows=1 width=27) (actual time=96225.264..96225.266 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=825056.51..6515888.59 rows=1677712 width=12) (actual time=22134.850..87421.792 rows=3405032 loops=1)
Q10,2.0,->  Hash Join  (cost=1032144.07..6775404.65 rows=1677712 width=175) (actual time=26277.602..95060.642 rows=3405032 loops=1)
Q10,2.0,->  Hash Join  (cost=1032142.51..6752334.55 rows=1677712 width=153) (actual time=26277.573..93793.480 rows=3405032 loops=1)
Q16,1.9,->  Sort  (cost=1226051.75..1230527.17 rows=1790171 width=40) (actual time=30507.740..31063.337 rows=3565924 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.511..9263.410 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164358.30..1040127.58 rows=1790171 width=40) (actual time=3785.357..18388.299 rows=3565924 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5517781.81 rows=60780048 width=8) (actual time=0.012..56595.085 rows=113799809 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7373266.02 rows=1183866 width=38) (actual time=116.731..109768.572 rows=2192278 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5777211.14 rows=2431202 width=34) (actual time=116.660..81640.894 rows=4537949 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..552855.32 rows=55243132 width=0) (actual time=392.307..392.307 rows=32289280 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.032..0.058 rows=4 loops=19082)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.030..0.049 rows=4 loops=19082)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.023..0.025 rows=4 loops=19082)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.413..0.482 rows=3 loops=65224)
Q1,1.5,Sort  (cost=12639552.20..12639552.21 rows=6 width=20) (actual time=268554.793..268554.794 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12639552.01..12639552.12 rows=6 width=20) (actual time=268554.746..268554.748 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..82174.66 rows=10942222 width=0) (actual time=85.242..85.242 rows=7697920 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.837..12.837 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6817347.45..6834124.57 rows=1677712 width=175) (actual time=101096.023..101872.267 rows=1139362 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8576.41 rows=418535 width=0) (actual time=2124.593..2124.593 rows=573113 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8681.04..125503.59 rows=418535 width=24) (actual time=2158.702..3499.674 rows=573113 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=49.217..32358.648 rows=177639 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=32472.489..32472.489 rows=177639 loops=1)
Q9,1.2,GroupAggregate  (cost=3498748.50..3498753.22 rows=135 width=46) (actual time=497839.111..509919.068 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..274597.27 rows=27417327 width=0) (actual time=383.006..383.006 rows=32129280 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.016..7405.819 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=318314 width=4) (actual time=0.009..2752.718 rows=326105 loops=1)
Q9,1.0,->  Hash Join  (cost=200545.92..1056146.06 rows=1273251 width=16) (actual time=2893.688..15827.247 rows=1304420 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=318314 width=4) (actual time=2891.712..2891.712 rows=326105 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.665..6280.811 rows=899362 loops=1)
Q8,1.0,->  Nested Loop  (cost=1204.25..5207601.79 rows=358586 width=20) (actual time=23.334..41624.379 rows=365456 loops=1)
Q8,1.0,->  Nested Loop  (cost=1203.69..4477528.55 rows=1178214 width=16) (actual time=23.284..17749.358 rows=1202051 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..112.24 rows=32 width=20) (actual time=0.028..0.422 rows=30 loops=40021)
Q8,1.0,->  Hash Join  (cost=14493.25..5225821.34 rows=358586 width=20) (actual time=216.069..42112.148 rows=365456 loops=1)
Q8,1.0,->  Hash Join  (cost=127449.44..5342184.10 rows=71717 width=38) (actual time=6816.881..49055.520 rows=73296 loops=1)
Q8,1.0,->  Hash Join  (cost=127447.88..5340837.84 rows=71717 width=16) (actual time=6816.823..48936.198 rows=73296 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6595.865..6595.865 rows=899362 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1193.36 rows=39040 width=0) (actual time=14.593..14.593 rows=40021 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1203.12..83161.36 rows=39040 width=4) (actual time=23.200..417.751 rows=40021 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.526..1226.006 rows=179872 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1221936.37 rows=45449537 width=8) (actual time=0.038..9226.642 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=577871.50..4886794.74 rows=4419451 width=42) (actual time=536.765..88808.607 rows=4390188 loops=1)
Q7,1.0,->  Hash Join  (cost=2227865.20..6577925.04 rows=183920 width=64) (actual time=28288.477..119007.446 rows=175278 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1604544.16 rows=3635963 width=30) (actual time=2299.218..26414.030 rows=3588124 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.047..2157.173 rows=359518 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.041..133.641 rows=24084 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2296.780..2296.780 rows=359518 loops=1)
Q7,1.0,->  Hash  (cost=1604544.16..1604544.16 rows=3635963 width=30) (actual time=27737.686..27737.686 rows=3588124 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=141.716..141.716 rows=24084 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=566666.10..4624233.08 rows=55243132 width=20) (actual time=394.896..73186.001 rows=54686938 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=274882.99..4104688.85 rows=1142877 width=8) (actual time=385.831..74276.154 rows=1144236 loops=1)
Q5,1.0,->  Nested Loop  (cost=196863.15..6727485.64 rows=5509828 width=46) (actual time=6617.754..48840.547 rows=5463191 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.372..6191.732 rows=899395 loops=1)
Q5,1.0,->  Hash Join  (cost=210902.15..6785052.32 rows=220397 width=34) (actual time=6806.135..50979.918 rows=217370 loops=1)
Q5,1.0,->  Hash Join  (cost=196862.58..1170318.39 rows=1377443 width=38) (actual time=6617.685..26643.615 rows=1365389 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6528.488..6528.488 rows=899395 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=83896.47..1017750.80 rows=6887213 width=8) (actual time=85.756..16974.640 rows=6829345 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.260..1205.594 rows=179879 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17985.40..812348.46 rows=1744137 width=20) (actual time=86.411..19696.672 rows=1719029 loops=1)
Q3,1.0,->  Hash Join  (cost=317534.67..1475034.30 rows=4345850 width=12) (actual time=2104.935..26660.476 rows=4342717 loops=1)
Q3,1.0,->  Hash  (cost=1475034.30..1475034.30 rows=4345850 width=12) (actual time=28212.665..28212.665 rows=4342717 loops=1)
Q3,1.0,->  Hash  (cost=137963.30..137963.30 rows=901080 width=4) (actual time=2016.330..2016.330 rows=900509 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20638.53 rows=901080 width=0) (actual time=205.014..205.014 rows=900509 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=168307.87..1200961.97 rows=21703208 width=16) (actual time=85.198..16524.774 rows=21678863 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=760396.59..5189492.84 rows=98060980 width=12) (actual time=381.891..55684.932 rows=97964434 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20863.80..137963.30 rows=901080 width=4) (actual time=236.335..1744.405 rows=900509 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1224358.13 rows=45539613 width=4) (actual time=0.039..11522.788 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1224358.13..1224358.13 rows=45539613 width=4) (actual time=23766.424..23766.424 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1980174.33..2303048.02 rows=178407 width=20) (actual time=26080.243..34899.660 rows=191024 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19576.97 rows=1142124 width=0) (actual time=296.972..296.972 rows=1145778 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19862.50..155679.26 rows=1142124 width=4) (actual time=330.356..1697.232 rows=1145778 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.722..112.740 rows=11957 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=116.559..116.559 rows=11957 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.708..110.703 rows=11957 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=22446.717..23970.419 rows=4767337 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.012..6056.622 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.758..445.884 rows=59592 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24165 width=30) (actual time=0.117..3527.563 rows=24035 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=480.051..15273.704 rows=4767360 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=479.780..479.780 rows=59592 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.682..86.665 rows=11918 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=32569.281..32569.580 rows=5386 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.837..84.642 rows=12068 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=32474.580..32563.754 rows=5386 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=33.100..33.100 rows=65224 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.817..82.700 rows=12068 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=48.533..811.916 rows=65224 loops=1)
Q19,1.0,->  Nested Loop  (cost=38359.37..1896090.25 rows=3470 width=8) (actual time=108.941..7017.279 rows=3462 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.871..12.871 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..836.91 rows=24269 width=0) (actual time=11.584..11.584 rows=23807 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.23 rows=23999 width=0) (actual time=10.655..10.655 rows=24271 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..815.11 rows=23687 width=0) (actual time=10.799..10.799 rows=23791 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38358.80..79571.86 rows=14328 width=30) (actual time=105.087..460.816 rows=14619 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1224358.13 rows=45539613 width=16) (actual time=0.025..8468.197 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5056943.81 rows=182160481 width=8) (actual time=0.004..32363.606 rows=180181115 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5056943.81 rows=182160481 width=8) (actual time=0.043..44493.741 rows=180181115 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.050 rows=30 loops=6061)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.050 rows=30 loops=6061)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..213.67 rows=6111 width=0) (actual time=2.733..2.733 rows=6061 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=215.20..20193.89 rows=6111 width=4) (actual time=3.817..90.089 rows=6061 loops=1)
Q16,1.0,Sort  (cost=1250774.57..1250844.50 rows=27972 width=40) (actual time=32963.241..32966.698 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153160.93..153160.93 rows=895089 width=40) (actual time=3778.994..3778.994 rows=891945 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1226051.75..1248708.60 rows=27972 width=40) (actual time=30507.894..32906.745 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7478.43..153160.93 rows=895089 width=40) (actual time=100.477..3393.097 rows=891945 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=687069.26..5263480.16 rows=6823235 width=12) (actual time=381.207..71145.035 rows=6741249 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=687069.26..5263480.16 rows=6823235 width=12) (actual time=385.483..72307.855 rows=6741249 loops=1)
Q14,1.0,->  Hash Join  (cost=281453.71..3501549.83 rows=2386606 width=29) (actual time=4956.988..74754.401 rows=2321130 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24886.71..3197250.71 rows=2386606 width=12) (actual time=387.781..67980.003 rows=2321130 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1327629.76 rows=44729752 width=8) (actual time=0.037..21573.793 rows=44513941 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2317486.42 rows=44729752 width=8) (actual time=3351.944..57888.964 rows=46014020 loops=1)
Q12,1.0,->  Sort  (cost=7428504.10..7430714.32 rows=884090 width=15) (actual time=73642.342..73783.887 rows=934993 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7341183.26 rows=884090 width=15) (actual time=0.032..72973.509 rows=934993 loops=1)
Q12,1.0,->  Merge Join  (cost=7428504.69..9515611.85 rows=884090 width=27) (actual time=73642.372..95345.754 rows=934993 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1959901.01 rows=45584563 width=20) (actual time=0.007..16442.159 rows=44999931 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.021..5546.650 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.013..5549.904 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.771..115.228 rows=12202 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.705..76.084 rows=12202 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=79.589..10085.199 rows=976160 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=119.027..10291.864 rows=976160 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=79.396..79.396 rows=12202 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=118.880..118.880 rows=12202 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.681..74.151 rows=12202 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.747..113.202 rows=12202 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=178044255 width=20) (actual time=0.016..56622.433 rows=175806870 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5452366.41 rows=44337709 width=12) (actual time=0.012..53903.803 rows=44418638 loops=1)
Q10,1.0,->  Hash  (cost=803750.71..803750.71 rows=1704464 width=8) (actual time=22128.674..22128.674 rows=1701910 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17578.75..803750.71 rows=1704464 width=8) (actual time=84.984..21447.997 rows=1701910 loops=1)
