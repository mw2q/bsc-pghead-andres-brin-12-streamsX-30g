Q21,2133757.0,->  Nested Loop Semi Join  (cost=7193.26..10031033.84 rows=1 width=34) (actual time=115.707..128227.989 rows=2133757 loops=1)
Q3,953062.6,->  Sort  (cost=8047163.73..8070990.29 rows=9530626 width=20) (actual time=116187.057..116187.059 rows=10 loops=1)
Q18,900892.1,->  GroupAggregate  (cost=36015892.21..38493345.65 rows=90089216 width=39) (actual time=250293.192..250293.521 rows=100 loops=1)
Q18,128515.2,->  Sort  (cost=36015892.21..36241115.25 rows=90089216 width=39) (actual time=250293.181..250293.235 rows=701 loops=1)
Q21,119795.0,->  Nested Loop Anti Join  (cost=7193.83..10031036.98 rows=1 width=26) (actual time=116.203..137185.003 rows=119795 loops=1)
Q18,112611.7,->  Hash Join  (cost=6258500.44..8075068.76 rows=22522347 width=39) (actual time=140946.631..160739.846 rows=200 loops=1)
Q18,112611.7,->  Hash Join  (cost=6051414.44..7473841.69 rows=22522347 width=20) (actual time=138199.208..157991.820 rows=200 loops=1)
Q18,112611.7,->  Hash  (cost=8075068.76..8075068.76 rows=22522347 width=39) (actual time=160740.624..160740.624 rows=200 loops=1)
Q10,86753.6,->  Sort  (cost=6964058.25..6968395.93 rows=1735073 width=175) (actual time=99128.905..99128.908 rows=20 loops=1)
Q9,66196.9,->  Sort  (cost=3732989.86..3732990.23 rows=148 width=46) (actual time=511055.664..516252.812 rows=9797146 loops=1)
Q9,66196.9,->  Nested Loop  (cost=200922.86..3732980.18 rows=148 width=24) (actual time=2441.694..424104.680 rows=9797146 loops=1)
Q9,66196.9,->  Nested Loop  (cost=200922.29..3732889.21 rows=148 width=24) (actual time=2441.660..220518.560 rows=9797146 loops=1)
Q9,66196.9,->  Nested Loop  (cost=200921.87..3732822.22 rows=148 width=28) (actual time=2441.639..178499.292 rows=9797146 loops=1)
Q9,66196.9,->  Hash Join  (cost=200924.42..3732984.52 rows=148 width=46) (actual time=2441.747..436323.424 rows=9797146 loops=1)
Q18,64349.4,->  Hash Join  (cost=8532554.10..21649544.63 rows=90089216 width=39) (actual time=161725.013..250291.020 rows=1400 loops=1)
Q18,21228.8,->  Hash  (cost=5998342.32..5998342.32 rows=4245770 width=4) (actual time=138056.716..138056.716 rows=200 loops=1)
Q18,21228.8,->  HashAggregate  (cost=5902812.49..5955884.62 rows=4245770 width=8) (actual time=120027.501..138056.207 rows=200 loops=1)
Q2,14122.0,->  Merge Join  (cost=1432056.81..3112270.80 rows=1 width=190) (actual time=23072.799..30591.098 rows=14122 loops=1)
Q21,12080.0,->  HashAggregate  (cost=10031036.98..10031036.99 rows=1 width=26) (actual time=137370.223..137373.739 rows=12080 loops=1)
Q15,11090.0,->  Subquery Scan on revenue7  (cost=6091670.53..6091920.06 rows=11090 width=12) (actual time=124566.268..124571.023 rows=1 loops=1)
Q15,11090.0,->  Sort  (cost=6092665.14..6092692.86 rows=11090 width=12) (actual time=124571.045..124571.046 rows=1 loops=1)
Q15,11090.0,Merge Join  (cost=12133997.76..12149259.05 rows=11090 width=79) (actual time=124684.017..124684.019 rows=1 loops=1)
Q15,11090.0,->  HashAggregate  (cost=6091670.53..6091809.16 rows=11090 width=12) (actual time=124566.266..124571.020 rows=1 loops=1)
Q7,766.7,Sort  (cost=6599927.34..6599935.01 rows=3067 width=64) (actual time=124826.669..124826.670 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6599703.72..6599749.72 rows=3067 width=64) (actual time=124826.608..124826.614 rows=4 loops=1)
Q8,366.5,Sort  (cost=5496643.56..5496645.40 rows=733 width=38) (actual time=55648.676..55648.676 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5496595.85..5496608.68 rows=733 width=38) (actual time=55648.632..55648.633 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10031037.00..10031037.01 rows=1 width=26) (actual time=137376.466..137376.473 rows=100 loops=1)
Q21,100.0,Limit  (cost=10031037.00..10031037.01 rows=1 width=26) (actual time=137376.468..137376.486 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3112270.81..3112270.82 rows=1 width=190) (actual time=30606.221..30606.235 rows=100 loops=1)
Q2,100.0,Limit  (cost=3112270.81..3112270.82 rows=1 width=190) (actual time=30606.223..30606.246 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.006..0.006 rows=1 loops=2214575)
Q11,34.9,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=21691.657..21695.051 rows=27438 loops=1)
Q11,34.9,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21406.454..21675.581 rows=27438 loops=1)
Q3,27.9,->  HashAggregate  (cost=7745904.06..7841210.32 rows=9530626 width=20) (actual time=115948.032..116122.692 rows=341107 loops=1)
Q15,27.0,->  HashAggregate  (cost=6041082.66..6041193.56 rows=11090 width=12) (actual time=61248.695..61382.681 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.64 rows=14 width=4) (actual time=0.014..0.014 rows=1 loops=1723247)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2133757)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23693.40 rows=2326940 width=0) (actual time=384.442..384.442 rows=32386560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.60 rows=43 width=16) (actual time=0.014..0.016 rows=4 loops=1366367)
Q3,10.5,->  Hash Join  (cost=2311996.31..7602944.67 rows=9530626 width=20) (actual time=26627.151..114982.653 rows=901122 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7200.21 rows=957360 width=0) (actual time=108.000..108.000 rows=9728000 loops=1)
Q4,9.5,->  Nested Loop Semi Join  (cost=18138.87..2772751.22 rows=164979 width=16) (actual time=95.634..41829.722 rows=1580054 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.021..0.122 rows=8 loops=1304760)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.214..11.214 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.214..11.214 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.650..0.650 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.669..0.669 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.669..0.669 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.666..0.666 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.657..0.657 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.038..1.443 rows=155 loops=1)
Q5,5.0,Sort  (cost=6787257.12..6787257.18 rows=25 width=34) (actual time=56609.580..56609.580 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6787256.29..6787256.54 rows=25 width=34) (actual time=56609.529..56609.529 rows=5 loops=1)
Q4,5.0,Sort  (cost=2773576.14..2773576.14 rows=1 width=16) (actual time=42812.266..42812.266 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2773576.12..2773576.13 rows=1 width=16) (actual time=42812.223..42812.224 rows=5 loops=1)
Q13,4.4,Sort  (cost=2674562.68..2674563.18 rows=200 width=8) (actual time=92042.241..92042.243 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=2674553.03..2674555.03 rows=200 width=8) (actual time=92042.172..92042.181 rows=45 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17698.54 rows=1759054 width=0) (actual time=95.008..95.008 rows=7644160 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17735.18 rows=1762718 width=0) (actual time=85.438..85.438 rows=7697920 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.92..366383.58 rows=60430 width=4) (actual time=4.324..729.173 rows=16132 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.050 rows=3 loops=6005)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..734341.04 rows=97855605 width=0) (actual time=386.431..386.431 rows=32386560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..167117.24 rows=22267899 width=0) (actual time=85.119..85.119 rows=7697920 loops=1)
Q22,2.3,Sort  (cost=2450265.36..2450265.36 rows=3 width=20) (actual time=35463.603..35463.603 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2291701.81..2291701.85 rows=3 width=20) (actual time=35463.555..35463.557 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.048..0.067 rows=2 loops=19137)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=12.971..12.971 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1224029.64..1228470.03 rows=1776153 width=40) (actual time=29467.883..29944.236 rows=3560289 loops=1)
Q16,2.0,->  Hash Join  (cost=164032.99..1039662.08 rows=1776153 width=40) (actual time=3865.300..18381.373 rows=3560289 loops=1)
Q12,2.0,Sort  (cost=9531929.31..9531929.32 rows=1 width=27) (actual time=96104.225..96104.225 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9531929.29..9531929.30 rows=1 width=27) (actual time=96104.183..96104.184 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=7192.13..5725877.42 rows=2409572 width=34) (actual time=115.574..82117.580 rows=4585660 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.542..9354.298 rows=23987600 loops=1)
Q10,1.9,->  Hash Join  (cost=836371.61..6595852.43 rows=1735073 width=12) (actual time=18280.397..84079.390 rows=3438930 loops=1)
Q10,1.9,->  Hash Join  (cost=1043459.17..6857161.03 rows=1735073 width=175) (actual time=22955.509..92075.716 rows=3438930 loops=1)
Q10,1.9,->  Hash Join  (cost=1043457.61..6833302.21 rows=1735073 width=153) (actual time=22955.477..90836.101 rows=3438930 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5468692.15 rows=60239311 width=8) (actual time=0.014..56754.569 rows=113911724 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7307558.26 rows=1173333 width=38) (actual time=115.638..112649.026 rows=2214575 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..554499.48 rows=55407548 width=0) (actual time=403.989..403.989 rows=32386560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.035..0.062 rows=4 loops=19137)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.033..0.052 rows=4 loops=19137)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.026..0.028 rows=4 loops=19137)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.425..0.496 rows=3 loops=65525)
Q1,1.5,Sort  (cost=12670091.88..12670091.90 rows=6 width=20) (actual time=276490.467..276490.468 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12670091.70..12670091.81 rows=6 width=20) (actual time=276490.417..276490.419 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=6900537.85..6917888.58 rows=1735073 width=175) (actual time=98055.945..98709.275 rows=1149137 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..82174.66 rows=10942222 width=0) (actual time=85.290..85.290 rows=7697920 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=12.856..12.856 rows=1216000 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8607.28 rows=418825 width=0) (actual time=2198.483..2198.483 rows=571471 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8711.98..125542.14 rows=418825 width=24) (actual time=2231.779..3133.003 rows=571471 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=46.809..33377.084 rows=178278 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=33493.044..33493.044 rows=178278 loops=1)
Q9,1.1,GroupAggregate  (cost=3732989.86..3732995.04 rows=148 width=46) (actual time=511092.453..522453.648 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..276783.04 rows=27635904 width=0) (actual time=406.673..406.673 rows=32386560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.017..7525.074 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=348344 width=4) (actual time=0.013..2318.235 rows=326190 loops=1)
Q9,1.0,->  Hash Join  (cost=200921.30..1057722.62 rows=1393370 width=16) (actual time=2441.529..15514.483 rows=1304760 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=348344 width=4) (actual time=2439.095..2439.095 rows=326190 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.406..5520.808 rows=899828 loops=1)
Q8,1.0,->  Nested Loop  (cost=1245.86..5345261.50 rows=368906 width=20) (actual time=22.976..48558.591 rows=365006 loops=1)
Q8,1.0,->  Nested Loop  (cost=1245.30..4594189.46 rows=1212122 width=16) (actual time=22.902..17034.268 rows=1201068 loops=1)
Q8,1.0,->  Nested Loop  (cost=114200.91..5493735.28 rows=73781 width=16) (actual time=5809.464..55395.412 rows=72627 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..111.63 rows=32 width=20) (actual time=0.027..0.402 rows=30 loops=40075)
Q8,1.0,->  Hash Join  (cost=114202.48..5495120.23 rows=73781 width=38) (actual time=5809.507..55520.360 rows=72627 loops=1)
Q8,1.0,->  Hash Join  (cost=114200.49..5460337.34 rows=73781 width=16) (actual time=5809.418..54592.464 rows=72627 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=5781.986..5781.986 rows=899828 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1234.66 rows=40280 width=0) (actual time=14.860..14.860 rows=40075 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1244.73..84701.06 rows=40280 width=4) (actual time=22.839..438.909 rows=40075 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.282..1075.731 rows=179966 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=8) (actual time=0.041..10037.863 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=579556.77..4901304.34 rows=4432604 width=42) (actual time=551.317..89895.090 rows=4350663 loops=1)
Q7,1.0,->  Hash Join  (cost=2233930.12..6596936.71 rows=184467 width=64) (actual time=32587.297..124535.976 rows=174206 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1608788.79 rows=3646765 width=30) (actual time=2851.239..30311.690 rows=3594297 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.040..2698.257 rows=360045 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.040..136.856 rows=23881 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2848.569..2848.569 rows=360045 loops=1)
Q7,1.0,->  Hash  (cost=1608788.79..1608788.79 rows=3646765 width=30) (actual time=32015.073..32015.073 rows=3594297 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=144.604..144.604 rows=23881 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=568351.37..4637994.59 rows=55407548 width=20) (actual time=406.567..73477.991 rows=54686426 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=277363.20..4137701.04 rows=2320648 width=8) (actual time=409.341..69432.011 rows=2288419 loops=1)
Q5,1.0,->  Nested Loop  (cost=196863.15..6727485.64 rows=5509828 width=46) (actual time=8465.116..53926.062 rows=5464999 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.361..7963.074 rows=899950 loops=1)
Q5,1.0,->  Hash Join  (cost=210902.15..6785052.32 rows=220397 width=34) (actual time=8669.121..56331.280 rows=219636 loops=1)
Q5,1.0,->  Hash Join  (cost=196862.58..1170318.39 rows=1377443 width=38) (actual time=8465.070..30454.652 rows=1366367 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=8374.650..8374.650 rows=899950 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=83896.47..1017750.80 rows=6887213 width=8) (actual time=85.820..18097.224 rows=6829345 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.292..1554.864 rows=179990 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=18138.30..808927.11 rows=1759054 width=20) (actual time=95.531..16480.246 rows=1723247 loops=1)
Q3,1.0,->  Hash Join  (cost=321723.79..1497695.14 rows=4439699 width=12) (actual time=2038.901..24434.126 rows=4399359 loops=1)
Q3,1.0,->  Hash  (cost=1497695.14..1497695.14 rows=4439699 width=12) (actual time=26198.415..26198.415 rows=4399359 loops=1)
Q3,1.0,->  Hash  (cost=137824.63..137824.63 rows=897195 width=4) (actual time=1948.295..1948.295 rows=900602 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20549.40 rows=897195 width=0) (actual time=206.031..206.031 rows=900602 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=172684.22..1220753.96 rows=22267899 width=16) (actual time=85.633..14026.700 rows=21999162 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=758804.94..5220530.00 rows=97855605 width=12) (actual time=389.005..69284.776 rows=96685841 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20773.69..137824.63 rows=897195 width=4) (actual time=240.094..1663.206 rows=900602 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1217099.20 rows=45269620 width=4) (actual time=0.011..11524.854 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1217099.20..1217099.20 rows=45269620 width=4) (actual time=23236.494..23236.494 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1968516.44..2290362.82 rows=178531 width=20) (actual time=25630.325..35392.694 rows=190104 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19582.91 rows=1142916 width=0) (actual time=290.269..290.269 rows=1143817 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19868.64..155706.18 rows=1142916 width=4) (actual time=322.519..1793.783 rows=1143817 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.705..111.458 rows=12080 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=115.467..115.467 rows=12080 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.691..109.443 rows=12080 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=23072.475..24673.708 rows=4809889 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.011..6006.148 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.739..450.910 rows=60128 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24025 width=30) (actual time=0.023..3754.099 rows=23951 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=490.867..15934.834 rows=4810240 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=490.616..490.616 rows=60128 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.670..87.627 rows=12026 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=33603.229..33603.529 rows=5305 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.709..97.659 rows=11857 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=33495.026..33597.612 rows=5305 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=31.514..31.514 rows=65525 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.692..95.736 rows=11857 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=46.156..772.002 rows=65525 loops=1)
Q19,1.0,->  Nested Loop  (cost=38375.34..1893442.71 rows=3472 width=8) (actual time=109.098..7685.178 rows=3375 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.862..12.862 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..837.67 rows=24344 width=0) (actual time=11.222..11.222 rows=24113 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..832.75 rows=23852 width=0) (actual time=10.783..10.783 rows=23972 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..831.83 rows=23761 width=0) (actual time=11.300..11.300 rows=24075 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38374.77..79536.91 rows=14306 width=30) (actual time=107.193..848.403 rows=14530 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1211051.94 rows=45044694 width=16) (actual time=0.007..8923.799 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5001920.33 rows=180178433 width=8) (actual time=0.007..30638.059 rows=179999426 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5001920.33 rows=180178433 width=8) (actual time=0.057..46215.656 rows=179999426 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.024..0.046 rows=30 loops=6005)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.024..0.046 rows=30 loops=6005)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.63 rows=6007 width=0) (actual time=2.674..2.674 rows=6005 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.13..19889.51 rows=6007 width=4) (actual time=3.810..95.399 rows=6005 loops=1)
Q16,1.0,Sort  (cost=1248557.31..1248626.69 rows=27753 width=40) (actual time=31762.715..31766.320 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152923.23..152923.23 rows=888080 width=40) (actual time=3859.200..3859.200 rows=890531 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224029.64..1246509.09 rows=27753 width=40) (actual time=29467.994..31707.631 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7422.23..152923.23 rows=888080 width=40) (actual time=108.125..3463.056 rows=890531 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5973632.17 rows=6745049 width=12) (actual time=0.041..55131.656 rows=6739544 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5973632.17 rows=6745049 width=12) (actual time=0.043..56911.626 rows=6739544 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.043..84.085 rows=286937 loops=1)
Q14,1.0,->  Hash Join  (cost=280842.14..3475979.98 rows=2326940 width=29) (actual time=4938.015..74955.176 rows=2317666 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24275.14..3172874.18 rows=2326940 width=12) (actual time=387.106..67370.481 rows=2317666 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45130622 width=8) (actual time=0.017..21740.402 rows=44514055 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2336399.92 rows=45130622 width=8) (actual time=3374.768..55367.979 rows=46014137 loops=1)
Q12,1.0,->  Sort  (cost=7429151.48..7431376.98 rows=890197 width=15) (actual time=73395.672..73522.289 rows=935911 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7341183.26 rows=890197 width=15) (actual time=0.057..72782.523 rows=935911 loops=1)
Q12,1.0,->  Merge Join  (cost=7429152.07..9516350.84 rows=890197 width=27) (actual time=73395.751..95223.503 rows=935911 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1959901.01 rows=45584563 width=20) (actual time=0.007..16625.152 rows=44999948 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.018..5394.065 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.035..5632.712 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.725..77.332 rows=12068 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.707..115.384 rows=12068 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=80.620..9827.633 rows=965440 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=119.214..10445.151 rows=965440 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=80.445..80.445 rows=12068 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=119.026..119.026 rows=12068 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.683..75.364 rows=12068 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.680..113.148 rows=12068 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5479587.90 rows=179762595 width=20) (actual time=0.013..58347.405 rows=178932244 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=44869656 width=12) (actual time=0.028..52832.131 rows=44419115 loops=1)
Q10,1.0,->  Hash  (cost=814337.63..814337.63 rows=1762718 width=8) (actual time=18266.426..18266.426 rows=1720210 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=18175.86..814337.63 rows=1762718 width=8) (actual time=85.995..17500.998 rows=1720210 loops=1)
