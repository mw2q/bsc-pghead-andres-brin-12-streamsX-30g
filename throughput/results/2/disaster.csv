Q21,2114564.0,->  Nested Loop Semi Join  (cost=7193.26..10121482.24 rows=1 width=34) (actual time=124.123..123694.745 rows=2114564 loops=1)
Q3,958907.3,->  Sort  (cost=8156330.77..8180303.45 rows=9589073 width=20) (actual time=113035.567..113035.567 rows=10 loops=1)
Q18,911700.7,->  GroupAggregate  (cost=36451036.45..38958213.43 rows=91170072 width=39) (actual time=252255.616..252255.968 rows=100 loops=1)
Q18,130057.1,->  Sort  (cost=36451036.45..36678961.63 rows=91170072 width=39) (actual time=252255.606..252255.671 rows=701 loops=1)
Q21,118819.0,->  Nested Loop Anti Join  (cost=7193.83..10121485.38 rows=1 width=26) (actual time=124.606..132525.228 rows=118819 loops=1)
Q18,113961.4,->  Hash Join  (cost=6329320.12..8167151.50 rows=22792282 width=39) (actual time=145574.181..163577.229 rows=200 loops=1)
Q18,113961.4,->  Hash Join  (cost=6122234.12..7561200.57 rows=22792282 width=20) (actual time=142144.122..160146.532 rows=200 loops=1)
Q18,113961.4,->  Hash  (cost=8167151.50..8167151.50 rows=22792282 width=39) (actual time=163578.084..163578.084 rows=200 loops=1)
Q10,85159.2,->  Sort  (cost=6895224.26..6899482.22 rows=1703184 width=175) (actual time=102782.626..102782.629 rows=20 loops=1)
Q9,77239.9,->  Sort  (cost=3358259.12..3358259.44 rows=127 width=46) (actual time=534874.716..540905.041 rows=9809472 loops=1)
Q9,77239.9,->  Nested Loop  (cost=200322.26..3358250.74 rows=127 width=24) (actual time=2699.109..445092.505 rows=9809472 loops=1)
Q9,77239.9,->  Nested Loop  (cost=200321.69..3358172.68 rows=127 width=24) (actual time=2699.057..220238.842 rows=9809472 loops=1)
Q9,77239.9,->  Nested Loop  (cost=200321.27..3358115.19 rows=127 width=28) (actual time=2699.018..177672.972 rows=9809472 loops=1)
Q9,77239.9,->  Hash Join  (cost=200323.82..3358254.69 rows=127 width=46) (actual time=2699.160..457635.951 rows=9809472 loops=1)
Q18,65121.4,->  Hash Join  (cost=8630120.03..21904480.76 rows=91170072 width=39) (actual time=163923.291..252253.797 rows=1400 loops=1)
Q18,21228.8,->  Hash  (cost=6069162.00..6069162.00 rows=4245770 width=4) (actual time=142111.662..142111.662 rows=200 loops=1)
Q18,21228.8,->  HashAggregate  (cost=5973632.17..6026704.30 rows=4245770 width=8) (actual time=123403.951..142111.216 rows=200 loops=1)
Q2,14060.0,->  Merge Join  (cost=1432056.81..3091287.47 rows=1 width=190) (actual time=23959.473..31281.734 rows=14060 loops=1)
Q21,11980.0,->  HashAggregate  (cost=10121485.38..10121485.39 rows=1 width=26) (actual time=132708.790..132712.695 rows=11980 loops=1)
Q15,11295.0,->  Subquery Scan on revenue2  (cost=5780155.97..5780410.11 rows=11295 width=12) (actual time=157595.305..157615.120 rows=1 loops=1)
Q15,11295.0,->  Sort  (cost=5781170.45..5781198.69 rows=11295 width=12) (actual time=157615.143..157615.143 rows=1 loops=1)
Q15,11295.0,Merge Join  (cost=11510262.22..11525526.59 rows=11295 width=79) (actual time=157660.151..157660.154 rows=1 loops=1)
Q15,11295.0,->  HashAggregate  (cost=5780155.97..5780297.16 rows=11295 width=12) (actual time=157595.304..157615.118 rows=1 loops=1)
Q7,766.7,Sort  (cost=6593608.08..6593615.75 rows=3067 width=64) (actual time=117219.297..117219.298 rows=4 loops=1)
Q7,766.7,->  HashAggregate  (cost=6593384.46..6593430.46 rows=3067 width=64) (actual time=117219.232..117219.238 rows=4 loops=1)
Q8,366.5,Sort  (cost=5340094.50..5340096.33 rows=733 width=38) (actual time=49575.366..49575.367 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5340046.79..5340059.62 rows=733 width=38) (actual time=49575.321..49575.322 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=132715.446..132715.452 rows=100 loops=1)
Q21,100.0,Limit  (cost=10121485.40..10121485.41 rows=1 width=26) (actual time=132715.447..132715.463 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3091287.48..3091287.49 rows=1 width=190) (actual time=31296.839..31296.851 rows=100 loops=1)
Q2,100.0,Limit  (cost=3091287.48..3091287.49 rows=1 width=190) (actual time=31296.841..31296.864 rows=100 loops=1)
Q21,43.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.78 rows=43 width=8) (actual time=0.005..0.005 rows=1 loops=2194354)
Q11,34.7,Sort  (cost=1850707.70..1853107.69 rows=959996 width=12) (actual time=22008.205..22011.582 rows=27650 loops=1)
Q11,34.7,->  HashAggregate  (cost=876459.64..888459.59 rows=959996 width=12) (actual time=21727.755..21991.700 rows=27650 loops=1)
Q3,28.2,->  HashAggregate  (cost=7853223.62..7949114.35 rows=9589073 width=20) (actual time=112791.544..112967.978 rows=340002 loops=1)
Q15,26.5,->  HashAggregate  (cost=5728837.20..5728950.15 rows=11295 width=12) (actual time=78134.303..78237.196 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.68 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1720093)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.78 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2114564)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23735.60 rows=2331160 width=0) (actual time=379.373..379.373 rows=32034560 loops=1)
Q5,10.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.59 rows=43 width=16) (actual time=0.013..0.015 rows=4 loops=1367331)
Q3,10.6,->  Hash Join  (cost=2312017.67..7709387.53 rows=9589073 width=20) (actual time=28842.175..111890.653 rows=899118 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7210.86 rows=958780 width=0) (actual time=101.924..101.924 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=18115.45..2780119.98 rows=163626 width=16) (actual time=88.845..37450.960 rows=1577739 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.91 rows=1 width=24) (actual time=0.021..0.121 rows=8 loops=1306796)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.486..11.486 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.262..11.262 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.663..0.663 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.668..0.668 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.661..0.661 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.821..0.821 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.668..0.668 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.030..1.143 rows=155 loops=1)
Q5,5.0,Sort  (cost=6939751.14..6939751.21 rows=25 width=34) (actual time=62205.926..62205.926 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6939750.31..6939750.56 rows=25 width=34) (actual time=62205.882..62205.883 rows=5 loops=1)
Q4,5.0,Sort  (cost=2780938.13..2780938.14 rows=1 width=16) (actual time=38365.985..38365.985 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2780938.11..2780938.12 rows=1 width=16) (actual time=38365.939..38365.941 rows=5 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17411.39 rows=1730339 width=0) (actual time=89.804..89.804 rows=7622400 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..17675.69 rows=1756769 width=0) (actual time=88.243..88.243 rows=7697920 loops=1)
Q13,4.3,Sort  (cost=2672500.80..2672501.30 rows=200 width=8) (actual time=88837.425..88837.428 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2672491.16..2672493.16 rows=200 width=8) (actual time=88837.355..88837.362 rows=46 loops=1)
Q17,3.8,->  Nested Loop  (cost=220.23..368173.21 rows=60490 width=4) (actual time=4.126..655.167 rows=15853 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.79..57.57 rows=11 width=12) (actual time=0.020..0.048 rows=3 loops=5946)
Q15,3.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..811280.19 rows=108114158 width=0) (actual time=390.496..390.496 rows=32257280 loops=1)
Q15,3.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..811280.19 rows=108114158 width=0) (actual time=390.092..390.092 rows=32257280 loops=1)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..168479.00 rows=22449467 width=0) (actual time=85.469..85.469 rows=7697920 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..728523.69 rows=97079959 width=0) (actual time=386.106..386.106 rows=32386560 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.043..34.230 rows=108999 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..133777.78 rows=17822637 width=0) (actual time=85.337..85.337 rows=7682560 loops=1)
Q22,2.3,Sort  (cost=2461045.58..2461045.59 rows=3 width=20) (actual time=34007.433..34007.434 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2302392.82..2302392.86 rows=3 width=20) (actual time=34007.379..34007.379 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.047..0.065 rows=2 loops=19039)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5980.20 rows=596020 width=0) (actual time=12.909..12.909 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1224496.46..1228945.10 rows=1779455 width=40) (actual time=29768.113..30238.132 rows=3560126 loops=1)
Q16,2.0,->  Hash Join  (cost=164100.19..1039762.30 rows=1779455 width=40) (actual time=3850.327..18563.409 rows=3560126 loops=1)
Q12,2.0,Sort  (cost=9510617.34..9510617.35 rows=1 width=27) (actual time=94691.186..94691.186 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9510617.32..9510617.33 rows=1 width=27) (actual time=94691.153..94691.153 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=827552.30..6529979.65 rows=1703184 width=12) (actual time=20809.835..87211.422 rows=3441076 loops=1)
Q10,2.0,->  Hash Join  (cost=1034639.86..6790291.71 rows=1703184 width=175) (actual time=25510.708..95565.862 rows=3441076 loops=1)
Q10,2.0,->  Hash Join  (cost=1034638.30..6766871.37 rows=1703184 width=153) (actual time=25510.676..94309.200 rows=3441076 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812876.51 rows=11999950 width=8) (actual time=1.243..9404.300 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5517781.81 rows=60780048 width=8) (actual time=0.021..56677.906 rows=113799809 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7373266.02 rows=1183866 width=38) (actual time=124.100..110134.762 rows=2194354 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5777211.14 rows=2431202 width=34) (actual time=124.067..82743.930 rows=4543700 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..553953.54 rows=55352954 width=0) (actual time=388.752..388.752 rows=32354560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.060 rows=4 loops=19039)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.051 rows=4 loops=19039)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19039)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..813.25 rows=2 width=8) (actual time=0.449..0.522 rows=3 loops=65260)
Q1,1.5,Sort  (cost=12718310.20..12718310.21 rows=6 width=20) (actual time=271230.614..271230.614 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12718310.01..12718310.12 rows=6 width=20) (actual time=271230.564..271230.566 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17922.00 rows=1790200 width=0) (actual time=13.121..13.121 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6832871.31..6849903.15 rows=1703184 width=175) (actual time=101700.646..102364.213 rows=1149006 loops=1)
Q9,1.3,GroupAggregate  (cost=3358259.12..3358263.57 rows=127 width=46) (actual time=534913.181..547249.256 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8614.21 rows=419520 width=0) (actual time=2275.519..2275.519 rows=571873 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8719.09..125567.49 rows=419520 width=24) (actual time=2311.424..3607.001 rows=571873 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.50..53833208.75 rows=134213 width=4) (actual time=50.779..34960.534 rows=177537 loops=1)
Q20,1.3,->  Hash  (cost=53833208.75..53833208.75 rows=134213 width=4) (actual time=35093.054..35093.054 rows=177537 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..273201.39 rows=27277739 width=0) (actual time=404.016..404.016 rows=32002560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.042..7609.740 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=300296 width=4) (actual time=0.010..2576.279 rows=326699 loops=1)
Q9,1.0,->  Hash Join  (cost=200320.70..1055200.11 rows=1201179 width=16) (actual time=2698.891..15842.609 rows=1306796 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=300296 width=4) (actual time=2696.809..2696.809 rows=326699 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.897..6325.032 rows=901465 loops=1)
Q8,1.0,->  Nested Loop  (cost=1203.63..5204011.34 rows=359276 width=20) (actual time=25.207..41982.301 rows=368425 loops=1)
Q8,1.0,->  Nested Loop  (cost=1203.07..4472520.13 rows=1180482 width=16) (actual time=24.760..17809.998 rows=1209190 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..112.35 rows=32 width=20) (actual time=0.028..0.419 rows=30 loops=40321)
Q8,1.0,->  Hash Join  (cost=14492.63..5222240.38 rows=359276 width=20) (actual time=220.523..42472.165 rows=368425 loops=1)
Q8,1.0,->  Hash Join  (cost=127448.82..5338609.69 rows=71855 width=38) (actual time=6853.091..49448.215 rows=73824 loops=1)
Q8,1.0,->  Hash Join  (cost=127447.26..5337260.85 rows=71855 width=16) (actual time=6853.037..49329.808 rows=73824 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6627.085..6627.085 rows=901465 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1192.76 rows=38960 width=0) (actual time=15.911..15.911 rows=40321 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1202.50..83063.34 rows=38960 width=4) (actual time=24.700..456.345 rows=40321 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.560..1234.609 rows=180293 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1224358.13 rows=45539613 width=8) (actual time=0.013..8933.655 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=578997.18..4896486.43 rows=4428236 width=42) (actual time=527.850..87945.514 rows=4386689 loops=1)
Q7,1.0,->  Hash Join  (cost=2231912.56..6590620.18 rows=184285 width=64) (actual time=27223.043..116947.888 rows=174403 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1607375.77 rows=3643169 width=30) (actual time=2480.152..25298.251 rows=3596318 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.037..2341.973 rows=360072 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.036..128.720 rows=24035 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2478.168..2478.168 rows=360072 loops=1)
Q7,1.0,->  Hash  (cost=1607375.77..1607375.77 rows=3643169 width=30) (actual time=26678.448..26678.448 rows=3596318 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=136.355..136.355 rows=24035 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=567791.78..4633425.09 rows=55352954 width=20) (actual time=391.348..72478.577 rows=54741126 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=273800.69..4087685.82 rows=2397203 width=8) (actual time=406.555..80836.721 rows=2387229 loops=1)
Q5,1.0,->  Nested Loop  (cost=248472.67..6879809.84 rows=5530290 width=46) (actual time=14198.962..59398.089 rows=5470358 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.473..13646.005 rows=899950 loops=1)
Q5,1.0,->  Hash Join  (cost=262511.67..6937538.16 rows=221215 width=34) (actual time=14404.349..61924.583 rows=218390 loops=1)
Q5,1.0,->  Hash Join  (cost=248472.10..1323001.40 rows=1382565 width=38) (actual time=14198.913..36756.709 rows=1367331 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=14107.758..14107.758 rows=899950 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=135505.98..1170286.54 rows=6912827 width=8) (actual time=85.881..18151.382 rows=6845740 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.355..2685.948 rows=179990 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=18114.88..814187.42 rows=1756769 width=20) (actual time=88.798..14162.416 rows=1720093 loops=1)
Q3,1.0,->  Hash Join  (cost=323390.31..1502941.30 rows=4502615 width=12) (actual time=2037.259..26571.777 rows=4430101 loops=1)
Q3,1.0,->  Hash  (cost=1502941.30..1502941.30 rows=4502615 width=12) (actual time=28415.035..28415.035 rows=4430101 loops=1)
Q3,1.0,->  Hash  (cost=138017.07..138017.07 rows=902550 width=4) (actual time=1946.428..1946.428 rows=898061 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20673.56 rows=902550 width=0) (actual time=204.915..204.915 rows=898061 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=174091.37..1224430.70 rows=22449467 width=16) (actual time=86.001..16012.068 rows=22163626 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=752793.68..5204823.17 rows=97079959 width=12) (actual time=388.642..64814.623 rows=95839863 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20899.19..138017.07 rows=902550 width=4) (actual time=239.375..1662.935 rows=898061 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1223146.45 rows=45494545 width=4) (actual time=0.038..11406.253 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1223146.45..1223146.45 rows=45494545 width=4) (actual time=22655.306..22655.306 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1978261.35..2301051.62 rows=178827 width=20) (actual time=25123.030..33932.041 rows=190382 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19617.13 rows=1144812 width=0) (actual time=347.132..347.132 rows=1144128 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19903.34..155790.65 rows=1144812 width=4) (actual time=387.511..1836.010 rows=1144128 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.697..119.770 rows=11981 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=123.923..123.923 rows=11981 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.686..117.629 rows=11981 loops=1)
Q2,1.0,->  Sort  (cost=1432056.34..1444056.29 rows=4799980 width=168) (actual time=23959.062..25531.454 rows=4800226 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.013..6315.145 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.732..447.840 rows=60005 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23651 width=30) (actual time=0.087..3643.321 rows=23875 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899388.23 rows=4799980 width=168) (actual time=482.677..16193.009 rows=4800400 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=482.399..482.399 rows=60005 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.682..87.001 rows=12001 loops=5)
Q20,1.0,Sort  (cost=53842419.51..53842432.93 rows=5369 width=51) (actual time=35207.125..35207.470 rows=5393 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.693..100.733 rows=11969 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=53834991.41..53842086.89 rows=5369 width=51) (actual time=35094.986..35200.916 rows=5393 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.55 rows=59999 width=0) (actual time=31.551..31.551 rows=65260 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.676..98.925 rows=11969 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.06..104663.47 rows=66065 width=4) (actual time=50.157..813.903 rows=65260 loops=1)
Q19,1.0,->  Nested Loop  (cost=38375.83..1890267.43 rows=3423 width=8) (actual time=104.733..7198.179 rows=3442 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11947.60 rows=1192760 width=0) (actual time=12.832..12.832 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..835.59 rows=24134 width=0) (actual time=10.878..10.878 rows=23883 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.79 rows=23957 width=0) (actual time=10.494..10.494 rows=23969 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.39 rows=23915 width=0) (actual time=10.835..10.835 rows=23853 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38375.26..79501.73 rows=14289 width=30) (actual time=102.558..847.778 rows=14544 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1225566.63 rows=45584563 width=16) (actual time=0.007..8877.208 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5061931.45 rows=182340145 width=8) (actual time=0.004..33848.411 rows=180000761 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5061931.45 rows=182340145 width=8) (actual time=0.017..45168.242 rows=180000761 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.038 rows=30 loops=5946)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.13 rows=32 width=4) (actual time=0.023..0.038 rows=30 loops=5946)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.93 rows=6037 width=0) (actual time=2.556..2.556 rows=5946 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.44..19974.57 rows=6037 width=4) (actual time=3.652..88.012 rows=5946 loops=1)
Q16,1.0,Sort  (cost=1249070.13..1249139.64 rows=27805 width=40) (actual time=32055.753..32058.811 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152969.79..152969.79 rows=889731 width=40) (actual time=3844.095..3844.095 rows=890508 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224496.46..1247017.70 rows=27805 width=40) (actual time=29768.208..32000.963 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7433.29..152969.79 rows=889731 width=40) (actual time=102.035..3423.612 rows=890508 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=812990.81..5660412.18 rows=6842502 width=12) (actual time=393.161..71383.070 rows=6737752 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=812990.81..5660412.18 rows=6842502 width=12) (actual time=392.738..72271.734 rows=6737752 loops=1)
Q14,1.0,->  Hash Join  (cost=280885.39..3453801.67 rows=2331160 width=29) (actual time=4971.528..83010.722 rows=2323831 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24318.39..3150611.47 rows=2331160 width=12) (actual time=381.924..75676.137 rows=2323831 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1339528.04 rows=45038983 width=8) (actual time=0.033..21740.691 rows=44557236 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2334796.24 rows=45038983 width=8) (actual time=3283.140..54571.565 rows=46057315 loops=1)
Q12,1.0,->  Sort  (cost=7413321.09..7415515.33 rows=877695 width=15) (actual time=73273.614..73404.059 rows=936186 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7326677.85 rows=877695 width=15) (actual time=0.154..72640.850 rows=936186 loops=1)
Q12,1.0,->  Merge Join  (cost=7413321.68..9495257.66 rows=877695 width=27) (actual time=73273.642..93812.631 rows=936186 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1955050.74 rows=45494545 width=20) (actual time=0.007..15312.095 rows=45044993 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752868.00 rows=23999900 width=12) (actual time=0.019..5474.446 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752868.00 rows=23999900 width=16) (actual time=0.014..5617.696 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.882..136.115 rows=12004 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.735..84.898 rows=12004 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=8) (actual time=88.312..10015.108 rows=960320 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859659.71 rows=959996 width=12) (actual time=140.828..10564.833 rows=960320 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=88.190..88.190 rows=12004 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=140.700..140.700 rows=12004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.687..82.838 rows=12004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.848..133.813 rows=12004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5517781.81 rows=180013205 width=20) (actual time=0.014..57011.419 rows=177794401 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5463263.88 rows=44426326 width=12) (actual time=0.023..54150.412 rows=44462429 loops=1)
Q10,1.0,->  Hash  (cost=805923.06..805923.06 rows=1730339 width=8) (actual time=20800.027..20800.027 rows=1720596 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17843.98..805923.06 rows=1730339 width=8) (actual time=90.316..19905.083 rows=1720596 loops=1)
